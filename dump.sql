--
-- PostgreSQL database dump
--

\restrict NGYCd8vrKgiFsJQqSRwNeKcVhUdvdEpOYbbR4qaiefIkHasXUpROTYfILmblUeh

-- Dumped from database version 17.6
-- Dumped by pg_dump version 17.6

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: accounts_premiumpayment; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.accounts_premiumpayment (
    id bigint NOT NULL,
    plan character varying(20) NOT NULL,
    method character varying(20) NOT NULL,
    status character varying(20) NOT NULL,
    amount numeric(9,2) NOT NULL,
    currency character varying(3) NOT NULL,
    reference character varying(40) NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    paid_at timestamp with time zone,
    notes text NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.accounts_premiumpayment OWNER TO postgres;

--
-- Name: accounts_premiumpayment_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.accounts_premiumpayment ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.accounts_premiumpayment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: accounts_premiumsubscription; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.accounts_premiumsubscription (
    id bigint NOT NULL,
    start_at timestamp with time zone NOT NULL,
    end_at timestamp with time zone NOT NULL,
    created_at timestamp with time zone NOT NULL,
    source character varying(20) NOT NULL,
    granted_by_id integer,
    payment_id bigint,
    user_id integer NOT NULL
);


ALTER TABLE public.accounts_premiumsubscription OWNER TO postgres;

--
-- Name: accounts_premiumsubscription_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.accounts_premiumsubscription ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.accounts_premiumsubscription_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: accounts_profile; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.accounts_profile (
    id bigint NOT NULL,
    avatar character varying(100),
    bio text NOT NULL,
    website character varying(200) NOT NULL,
    user_id integer NOT NULL,
    link1 character varying(200),
    link2 character varying(200),
    link3 character varying(200),
    link4 character varying(200)
);


ALTER TABLE public.accounts_profile OWNER TO postgres;

--
-- Name: accounts_profile_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.accounts_profile ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.accounts_profile_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO postgres;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO postgres;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO postgres;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user (
    id integer NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL
);


ALTER TABLE public.auth_user OWNER TO postgres;

--
-- Name: auth_user_groups; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user_groups (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.auth_user_groups OWNER TO postgres;

--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_user_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_user ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_user_user_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_user_user_permissions (
    id bigint NOT NULL,
    user_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_user_user_permissions OWNER TO postgres;

--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_user_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: books_audiobook; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.books_audiobook (
    id bigint NOT NULL,
    title character varying(250) NOT NULL,
    length interval NOT NULL,
    narrator character varying(100) NOT NULL,
    publisher_id bigint
);


ALTER TABLE public.books_audiobook OWNER TO postgres;

--
-- Name: books_audiobook_genre; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.books_audiobook_genre (
    id bigint NOT NULL,
    audiobook_id bigint NOT NULL,
    genre_id bigint NOT NULL
);


ALTER TABLE public.books_audiobook_genre OWNER TO postgres;

--
-- Name: books_audiobook_genre_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.books_audiobook_genre ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.books_audiobook_genre_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: books_audiobook_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.books_audiobook ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.books_audiobook_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: books_author; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.books_author (
    id bigint NOT NULL,
    name character varying(255) NOT NULL,
    bio text,
    country character varying(100)
);


ALTER TABLE public.books_author OWNER TO postgres;

--
-- Name: books_author_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.books_author ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.books_author_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: books_book; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.books_book (
    id bigint NOT NULL,
    title character varying(255) NOT NULL,
    synopsis text,
    series character varying(255),
    series_order integer,
    age_rating character varying(10),
    language character varying(50),
    audio_id bigint,
    cover character varying(100),
    primary_isbn_id bigint,
    edition_group_key character varying(512) NOT NULL,
    created_at timestamp with time zone NOT NULL,
    CONSTRAINT books_book_series_order_check CHECK ((series_order >= 0))
);


ALTER TABLE public.books_book OWNER TO postgres;

--
-- Name: books_book_authors; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.books_book_authors (
    id bigint NOT NULL,
    book_id bigint NOT NULL,
    author_id bigint NOT NULL
);


ALTER TABLE public.books_book_authors OWNER TO postgres;

--
-- Name: books_book_authors_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.books_book_authors ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.books_book_authors_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: books_book_contributors; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.books_book_contributors (
    id bigint NOT NULL,
    book_id bigint NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.books_book_contributors OWNER TO postgres;

--
-- Name: books_book_contributors_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.books_book_contributors ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.books_book_contributors_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: books_book_genres; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.books_book_genres (
    id bigint NOT NULL,
    book_id bigint NOT NULL,
    genre_id bigint NOT NULL
);


ALTER TABLE public.books_book_genres OWNER TO postgres;

--
-- Name: books_book_genres_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.books_book_genres ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.books_book_genres_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: books_book_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.books_book ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.books_book_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: books_book_isbn; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.books_book_isbn (
    id bigint NOT NULL,
    book_id bigint NOT NULL,
    isbnmodel_id bigint NOT NULL
);


ALTER TABLE public.books_book_isbn OWNER TO postgres;

--
-- Name: books_book_isbn_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.books_book_isbn ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.books_book_isbn_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: books_book_publisher; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.books_book_publisher (
    id bigint NOT NULL,
    book_id bigint NOT NULL,
    publisher_id bigint NOT NULL
);


ALTER TABLE public.books_book_publisher OWNER TO postgres;

--
-- Name: books_book_publisher_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.books_book_publisher ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.books_book_publisher_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: books_genre; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.books_genre (
    id bigint NOT NULL,
    name character varying(100) NOT NULL,
    slug character varying(150) NOT NULL
);


ALTER TABLE public.books_genre OWNER TO postgres;

--
-- Name: books_genre_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.books_genre ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.books_genre_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: books_isbnmodel; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.books_isbnmodel (
    id bigint NOT NULL,
    isbn character varying(13) NOT NULL,
    isbn13 character varying(13),
    title character varying(255),
    publisher character varying(255),
    publish_date character varying(50),
    binding character varying(50),
    total_pages integer,
    synopsis text,
    language character varying(10),
    subjects text,
    image character varying(200),
    CONSTRAINT books_isbnmodel_total_pages_effb3967_check CHECK ((total_pages >= 0))
);


ALTER TABLE public.books_isbnmodel OWNER TO postgres;

--
-- Name: books_isbnmodel_authors; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.books_isbnmodel_authors (
    id bigint NOT NULL,
    isbnmodel_id bigint NOT NULL,
    author_id bigint NOT NULL
);


ALTER TABLE public.books_isbnmodel_authors OWNER TO postgres;

--
-- Name: books_isbnmodel_authors_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.books_isbnmodel_authors ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.books_isbnmodel_authors_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: books_isbnmodel_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.books_isbnmodel ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.books_isbnmodel_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: books_publisher; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.books_publisher (
    id bigint NOT NULL,
    name character varying(255) NOT NULL,
    address character varying(250)
);


ALTER TABLE public.books_publisher OWNER TO postgres;

--
-- Name: books_publisher_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.books_publisher ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.books_publisher_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: books_rating; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.books_rating (
    id bigint NOT NULL,
    score smallint,
    book_id bigint NOT NULL,
    user_id integer NOT NULL,
    created_at timestamp with time zone NOT NULL,
    art_score smallint,
    atmosphere_score smallint,
    characters_score smallint,
    plot_score smallint,
    review text NOT NULL,
    CONSTRAINT books_rating_art_score_check CHECK ((art_score >= 0)),
    CONSTRAINT books_rating_atmosphere_score_check CHECK ((atmosphere_score >= 0)),
    CONSTRAINT books_rating_characters_score_check CHECK ((characters_score >= 0)),
    CONSTRAINT books_rating_plot_score_check CHECK ((plot_score >= 0)),
    CONSTRAINT books_rating_score_check CHECK ((score >= 0))
);


ALTER TABLE public.books_rating OWNER TO postgres;

--
-- Name: books_rating_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.books_rating ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.books_rating_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: books_ratingcomment; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.books_ratingcomment (
    id bigint NOT NULL,
    body text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    rating_id bigint NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.books_ratingcomment OWNER TO postgres;

--
-- Name: books_ratingcomment_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.books_ratingcomment ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.books_ratingcomment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: books_readingsession; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.books_readingsession (
    id bigint NOT NULL,
    started_at timestamp with time zone NOT NULL,
    ended_at timestamp with time zone,
    duration_seconds integer NOT NULL,
    start_page integer,
    end_page integer,
    progress_id bigint NOT NULL,
    CONSTRAINT books_readingsession_duration_seconds_check CHECK ((duration_seconds >= 0)),
    CONSTRAINT books_readingsession_end_page_check CHECK ((end_page >= 0)),
    CONSTRAINT books_readingsession_start_page_check CHECK ((start_page >= 0))
);


ALTER TABLE public.books_readingsession OWNER TO postgres;

--
-- Name: books_readingsession_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.books_readingsession ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.books_readingsession_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: collaborations_authoroffer; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.collaborations_authoroffer (
    id bigint NOT NULL,
    title character varying(255) NOT NULL,
    offered_format character varying(20) NOT NULL,
    synopsis text NOT NULL,
    review_requirements text NOT NULL,
    text_review_length integer NOT NULL,
    video_review_type character varying(20) NOT NULL,
    video_requires_unboxing boolean NOT NULL,
    video_requires_aesthetics boolean NOT NULL,
    video_requires_review boolean NOT NULL,
    considers_paid_collaboration boolean NOT NULL,
    allow_regular_users boolean NOT NULL,
    is_active boolean NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    author_id integer NOT NULL,
    book_id bigint,
    CONSTRAINT collaborations_authoroffer_text_review_length_check CHECK ((text_review_length >= 0))
);


ALTER TABLE public.collaborations_authoroffer OWNER TO postgres;

--
-- Name: collaborations_authoroffer_expected_platforms; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.collaborations_authoroffer_expected_platforms (
    id bigint NOT NULL,
    authoroffer_id bigint NOT NULL,
    reviewplatform_id bigint NOT NULL
);


ALTER TABLE public.collaborations_authoroffer_expected_platforms OWNER TO postgres;

--
-- Name: collaborations_authoroffer_expected_platforms_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.collaborations_authoroffer_expected_platforms ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.collaborations_authoroffer_expected_platforms_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: collaborations_authoroffer_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.collaborations_authoroffer ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.collaborations_authoroffer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: collaborations_authorofferresponse; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.collaborations_authorofferresponse (
    id bigint NOT NULL,
    message text NOT NULL,
    status character varying(20) NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    offer_id bigint NOT NULL,
    respondent_id integer NOT NULL,
    platform_links text NOT NULL,
    author_last_read_at timestamp with time zone,
    last_activity_at timestamp with time zone,
    last_activity_by_id integer,
    respondent_last_read_at timestamp with time zone
);


ALTER TABLE public.collaborations_authorofferresponse OWNER TO postgres;

--
-- Name: collaborations_authorofferresponse_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.collaborations_authorofferresponse ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.collaborations_authorofferresponse_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: collaborations_authorofferresponsecomment; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.collaborations_authorofferresponsecomment (
    id bigint NOT NULL,
    text text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    author_id integer NOT NULL,
    response_id bigint NOT NULL
);


ALTER TABLE public.collaborations_authorofferresponsecomment OWNER TO postgres;

--
-- Name: collaborations_authorofferresponsecomment_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.collaborations_authorofferresponsecomment ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.collaborations_authorofferresponsecomment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: collaborations_bloggergiveaway; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.collaborations_bloggergiveaway (
    id bigint NOT NULL,
    title character varying(200) NOT NULL,
    description text NOT NULL,
    link character varying(200) NOT NULL,
    deadline date,
    is_active boolean NOT NULL,
    created_at timestamp with time zone NOT NULL,
    blogger_id integer NOT NULL
);


ALTER TABLE public.collaborations_bloggergiveaway OWNER TO postgres;

--
-- Name: collaborations_bloggergiveaway_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.collaborations_bloggergiveaway ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.collaborations_bloggergiveaway_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: collaborations_bloggerinvitation; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.collaborations_bloggerinvitation (
    id bigint NOT NULL,
    platform character varying(20) NOT NULL,
    title character varying(150) NOT NULL,
    link character varying(200) NOT NULL,
    description text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    blogger_id integer NOT NULL
);


ALTER TABLE public.collaborations_bloggerinvitation OWNER TO postgres;

--
-- Name: collaborations_bloggerinvitation_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.collaborations_bloggerinvitation ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.collaborations_bloggerinvitation_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: collaborations_bloggerplatformpresence; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.collaborations_bloggerplatformpresence (
    id bigint NOT NULL,
    custom_platform_name character varying(150) NOT NULL,
    followers_count integer NOT NULL,
    platform_id bigint,
    request_id bigint NOT NULL,
    CONSTRAINT collaborations_bloggerplatformpresence_followers_count_check CHECK ((followers_count >= 0))
);


ALTER TABLE public.collaborations_bloggerplatformpresence OWNER TO postgres;

--
-- Name: collaborations_bloggerplatformpresence_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.collaborations_bloggerplatformpresence ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.collaborations_bloggerplatformpresence_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: collaborations_bloggerrating; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.collaborations_bloggerrating (
    id bigint NOT NULL,
    score integer NOT NULL,
    successful_collaborations integer NOT NULL,
    failed_collaborations integer NOT NULL,
    total_collaborations integer NOT NULL,
    blogger_id integer NOT NULL,
    CONSTRAINT collaborations_bloggerrating_failed_collaborations_check CHECK ((failed_collaborations >= 0)),
    CONSTRAINT collaborations_bloggerrating_successful_collaborations_check CHECK ((successful_collaborations >= 0)),
    CONSTRAINT collaborations_bloggerrating_total_collaborations_check CHECK ((total_collaborations >= 0))
);


ALTER TABLE public.collaborations_bloggerrating OWNER TO postgres;

--
-- Name: collaborations_bloggerrating_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.collaborations_bloggerrating ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.collaborations_bloggerrating_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: collaborations_bloggerrequest; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.collaborations_bloggerrequest (
    id bigint NOT NULL,
    title character varying(255) NOT NULL,
    accepts_paper boolean NOT NULL,
    accepts_electronic boolean NOT NULL,
    accepts_audio boolean NOT NULL,
    additional_info text NOT NULL,
    is_active boolean NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    blogger_id integer NOT NULL,
    collaboration_terms text NOT NULL,
    collaboration_type character varying(20) NOT NULL,
    review_platform_links text NOT NULL,
    target_audience character varying(20) NOT NULL,
    blogger_collaboration_goal character varying(20) NOT NULL,
    blogger_collaboration_goal_other character varying(255) NOT NULL,
    blogger_collaboration_platform_id bigint,
    blogger_collaboration_platform_other character varying(150) NOT NULL
);


ALTER TABLE public.collaborations_bloggerrequest OWNER TO postgres;

--
-- Name: collaborations_bloggerrequest_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.collaborations_bloggerrequest ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.collaborations_bloggerrequest_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: collaborations_bloggerrequest_preferred_genres; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.collaborations_bloggerrequest_preferred_genres (
    id bigint NOT NULL,
    bloggerrequest_id bigint NOT NULL,
    genre_id bigint NOT NULL
);


ALTER TABLE public.collaborations_bloggerrequest_preferred_genres OWNER TO postgres;

--
-- Name: collaborations_bloggerrequest_preferred_genres_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.collaborations_bloggerrequest_preferred_genres ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.collaborations_bloggerrequest_preferred_genres_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: collaborations_bloggerrequest_review_formats; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.collaborations_bloggerrequest_review_formats (
    id bigint NOT NULL,
    bloggerrequest_id bigint NOT NULL,
    reviewplatform_id bigint NOT NULL
);


ALTER TABLE public.collaborations_bloggerrequest_review_formats OWNER TO postgres;

--
-- Name: collaborations_bloggerrequest_review_formats_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.collaborations_bloggerrequest_review_formats ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.collaborations_bloggerrequest_review_formats_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: collaborations_bloggerrequestresponse; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.collaborations_bloggerrequestresponse (
    id bigint NOT NULL,
    message text NOT NULL,
    status character varying(20) NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    responder_id integer NOT NULL,
    request_id bigint NOT NULL,
    book_id bigint,
    blogger_last_read_at timestamp with time zone,
    last_activity_at timestamp with time zone,
    last_activity_by_id integer,
    platform_link character varying(200) NOT NULL,
    responder_last_read_at timestamp with time zone,
    responder_type character varying(20) NOT NULL
);


ALTER TABLE public.collaborations_bloggerrequestresponse OWNER TO postgres;

--
-- Name: collaborations_bloggerrequestresponse_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.collaborations_bloggerrequestresponse ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.collaborations_bloggerrequestresponse_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: collaborations_bloggerrequestresponsecomment; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.collaborations_bloggerrequestresponsecomment (
    id bigint NOT NULL,
    text text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    author_id integer NOT NULL,
    response_id bigint NOT NULL
);


ALTER TABLE public.collaborations_bloggerrequestresponsecomment OWNER TO postgres;

--
-- Name: collaborations_bloggerrequestresponsecomment_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.collaborations_bloggerrequestresponsecomment ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.collaborations_bloggerrequestresponsecomment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: collaborations_collaboration; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.collaborations_collaboration (
    id bigint NOT NULL,
    status character varying(20) NOT NULL,
    deadline date NOT NULL,
    review_links text NOT NULL,
    author_confirmed boolean NOT NULL,
    partner_confirmed boolean NOT NULL,
    completed_at timestamp with time zone,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    author_id integer NOT NULL,
    offer_id bigint,
    partner_id integer NOT NULL,
    request_id bigint,
    author_approved boolean NOT NULL,
    partner_approved boolean NOT NULL,
    author_last_read_at timestamp with time zone,
    last_activity_at timestamp with time zone,
    last_activity_by_id integer,
    partner_last_read_at timestamp with time zone
);


ALTER TABLE public.collaborations_collaboration OWNER TO postgres;

--
-- Name: collaborations_collaboration_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.collaborations_collaboration ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.collaborations_collaboration_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: collaborations_collaborationmessage; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.collaborations_collaborationmessage (
    id bigint NOT NULL,
    text text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    author_id integer NOT NULL,
    collaboration_id bigint NOT NULL
);


ALTER TABLE public.collaborations_collaborationmessage OWNER TO postgres;

--
-- Name: collaborations_collaborationmessage_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.collaborations_collaborationmessage ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.collaborations_collaborationmessage_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: collaborations_communitybookclub; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.collaborations_communitybookclub (
    id bigint NOT NULL,
    title character varying(200) NOT NULL,
    city character varying(120) NOT NULL,
    meeting_format character varying(20) NOT NULL,
    meeting_schedule character varying(150) NOT NULL,
    link character varying(200) NOT NULL,
    description text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    submitted_by_id integer NOT NULL
);


ALTER TABLE public.collaborations_communitybookclub OWNER TO postgres;

--
-- Name: collaborations_communitybookclub_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.collaborations_communitybookclub ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.collaborations_communitybookclub_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: collaborations_reviewplatform; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.collaborations_reviewplatform (
    id bigint NOT NULL,
    name character varying(150) NOT NULL,
    url character varying(200) NOT NULL
);


ALTER TABLE public.collaborations_reviewplatform OWNER TO postgres;

--
-- Name: collaborations_reviewplatform_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.collaborations_reviewplatform ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.collaborations_reviewplatform_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO postgres;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO postgres;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO postgres;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO postgres;

--
-- Name: games_bookexchangeacceptedbook; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.games_bookexchangeacceptedbook (
    id bigint NOT NULL,
    accepted_at timestamp with time zone NOT NULL,
    finished_at timestamp with time zone,
    review_submitted_at timestamp with time zone,
    completed_at timestamp with time zone,
    updated_at timestamp with time zone NOT NULL,
    book_id bigint NOT NULL,
    challenge_id bigint NOT NULL,
    offer_id bigint NOT NULL
);


ALTER TABLE public.games_bookexchangeacceptedbook OWNER TO postgres;

--
-- Name: games_bookexchangeacceptedbook_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.games_bookexchangeacceptedbook ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.games_bookexchangeacceptedbook_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: games_bookexchangechallenge; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.games_bookexchangechallenge (
    id bigint NOT NULL,
    round_number integer NOT NULL,
    target_books integer NOT NULL,
    status character varying(20) NOT NULL,
    locked_at timestamp with time zone,
    deadline_at timestamp with time zone,
    completed_at timestamp with time zone,
    started_at timestamp with time zone NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    game_id bigint NOT NULL,
    shelf_id bigint NOT NULL,
    user_id integer NOT NULL,
    CONSTRAINT games_bookexchangechallenge_round_number_check CHECK ((round_number >= 0)),
    CONSTRAINT games_bookexchangechallenge_target_books_check CHECK ((target_books >= 0))
);


ALTER TABLE public.games_bookexchangechallenge OWNER TO postgres;

--
-- Name: games_bookexchangechallenge_genres; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.games_bookexchangechallenge_genres (
    id bigint NOT NULL,
    bookexchangechallenge_id bigint NOT NULL,
    genre_id bigint NOT NULL
);


ALTER TABLE public.games_bookexchangechallenge_genres OWNER TO postgres;

--
-- Name: games_bookexchangechallenge_genres_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.games_bookexchangechallenge_genres ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.games_bookexchangechallenge_genres_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: games_bookexchangechallenge_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.games_bookexchangechallenge ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.games_bookexchangechallenge_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: games_bookexchangeoffer; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.games_bookexchangeoffer (
    id bigint NOT NULL,
    status character varying(20) NOT NULL,
    note character varying(255) NOT NULL,
    created_at timestamp with time zone NOT NULL,
    responded_at timestamp with time zone,
    updated_at timestamp with time zone NOT NULL,
    book_id bigint NOT NULL,
    challenge_id bigint NOT NULL,
    offered_by_id integer NOT NULL
);


ALTER TABLE public.games_bookexchangeoffer OWNER TO postgres;

--
-- Name: games_bookexchangeoffer_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.games_bookexchangeoffer ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.games_bookexchangeoffer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: games_bookjourneyassignment; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.games_bookjourneyassignment (
    id bigint NOT NULL,
    stage_number smallint NOT NULL,
    status character varying(20) NOT NULL,
    started_at timestamp with time zone NOT NULL,
    completed_at timestamp with time zone,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    book_id bigint NOT NULL,
    user_id integer NOT NULL,
    CONSTRAINT games_bookjourneyassignment_stage_number_check CHECK ((stage_number >= 0))
);


ALTER TABLE public.games_bookjourneyassignment OWNER TO postgres;

--
-- Name: games_bookjourneyassignment_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.games_bookjourneyassignment ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.games_bookjourneyassignment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: games_forgottenbookentry; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.games_forgottenbookentry (
    id bigint NOT NULL,
    added_at timestamp with time zone NOT NULL,
    selected_month date,
    selected_at timestamp with time zone,
    finished_at timestamp with time zone,
    review_submitted_at timestamp with time zone,
    completed_at timestamp with time zone,
    updated_at timestamp with time zone NOT NULL,
    book_id bigint NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.games_forgottenbookentry OWNER TO postgres;

--
-- Name: games_forgottenbookentry_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.games_forgottenbookentry ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.games_forgottenbookentry_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: games_game; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.games_game (
    id bigint NOT NULL,
    slug character varying(64) NOT NULL,
    title character varying(200) NOT NULL,
    description text NOT NULL,
    is_active boolean NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL
);


ALTER TABLE public.games_game OWNER TO postgres;

--
-- Name: games_game_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.games_game ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.games_game_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: games_gameshelfbook; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.games_gameshelfbook (
    id bigint NOT NULL,
    pages_logged integer NOT NULL,
    bonus_awarded boolean NOT NULL,
    reviewed_at timestamp with time zone,
    purchased_at timestamp with time zone,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    book_id bigint NOT NULL,
    state_id bigint NOT NULL,
    CONSTRAINT games_gameshelfbook_pages_logged_check CHECK ((pages_logged >= 0))
);


ALTER TABLE public.games_gameshelfbook OWNER TO postgres;

--
-- Name: games_gameshelfbook_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.games_gameshelfbook ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.games_gameshelfbook_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: games_gameshelfpurchase; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.games_gameshelfpurchase (
    id bigint NOT NULL,
    points_spent integer NOT NULL,
    created_at timestamp with time zone NOT NULL,
    book_id bigint,
    state_id bigint NOT NULL,
    CONSTRAINT games_gameshelfpurchase_points_spent_check CHECK ((points_spent >= 0))
);


ALTER TABLE public.games_gameshelfpurchase OWNER TO postgres;

--
-- Name: games_gameshelfpurchase_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.games_gameshelfpurchase ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.games_gameshelfpurchase_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: games_gameshelfstate; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.games_gameshelfstate (
    id bigint NOT NULL,
    points_balance integer NOT NULL,
    total_points_earned integer NOT NULL,
    books_purchased integer NOT NULL,
    books_reviewed integer NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    game_id bigint NOT NULL,
    shelf_id bigint NOT NULL,
    user_id integer NOT NULL,
    started_at timestamp with time zone NOT NULL,
    CONSTRAINT games_gameshelfstate_books_purchased_check CHECK ((books_purchased >= 0)),
    CONSTRAINT games_gameshelfstate_books_reviewed_check CHECK ((books_reviewed >= 0)),
    CONSTRAINT games_gameshelfstate_points_balance_check CHECK ((points_balance >= 0)),
    CONSTRAINT games_gameshelfstate_total_points_earned_check CHECK ((total_points_earned >= 0))
);


ALTER TABLE public.games_gameshelfstate OWNER TO postgres;

--
-- Name: games_gameshelfstate_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.games_gameshelfstate ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.games_gameshelfstate_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: reading_clubs_discussionpost; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.reading_clubs_discussionpost (
    id bigint NOT NULL,
    content text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    author_id integer NOT NULL,
    topic_id bigint NOT NULL,
    parent_id bigint
);


ALTER TABLE public.reading_clubs_discussionpost OWNER TO postgres;

--
-- Name: reading_clubs_discussionpost_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.reading_clubs_discussionpost ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.reading_clubs_discussionpost_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: reading_clubs_readingclub; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.reading_clubs_readingclub (
    id bigint NOT NULL,
    title character varying(255) NOT NULL,
    description text NOT NULL,
    start_date date NOT NULL,
    end_date date,
    join_policy character varying(20) NOT NULL,
    slug character varying(255) NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    book_id bigint NOT NULL,
    creator_id integer NOT NULL
);


ALTER TABLE public.reading_clubs_readingclub OWNER TO postgres;

--
-- Name: reading_clubs_readingclub_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.reading_clubs_readingclub ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.reading_clubs_readingclub_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: reading_clubs_readingnorm; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.reading_clubs_readingnorm (
    id bigint NOT NULL,
    title character varying(255) NOT NULL,
    description text NOT NULL,
    "order" integer NOT NULL,
    discussion_opens_at date NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    reading_id bigint NOT NULL,
    CONSTRAINT reading_clubs_readingnorm_order_check CHECK (("order" >= 0))
);


ALTER TABLE public.reading_clubs_readingnorm OWNER TO postgres;

--
-- Name: reading_clubs_readingnorm_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.reading_clubs_readingnorm ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.reading_clubs_readingnorm_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: reading_clubs_readingparticipant; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.reading_clubs_readingparticipant (
    id bigint NOT NULL,
    status character varying(20) NOT NULL,
    joined_at timestamp with time zone NOT NULL,
    reading_id bigint NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.reading_clubs_readingparticipant OWNER TO postgres;

--
-- Name: reading_clubs_readingparticipant_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.reading_clubs_readingparticipant ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.reading_clubs_readingparticipant_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: reading_marathons_marathonentry; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.reading_marathons_marathonentry (
    id bigint NOT NULL,
    status character varying(20) NOT NULL,
    progress integer NOT NULL,
    book_approved boolean NOT NULL,
    completion_status character varying(20) NOT NULL,
    notes text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    book_id bigint NOT NULL,
    participant_id bigint NOT NULL,
    theme_id bigint NOT NULL,
    CONSTRAINT reading_marathons_marathonentry_progress_check CHECK ((progress >= 0))
);


ALTER TABLE public.reading_marathons_marathonentry OWNER TO postgres;

--
-- Name: reading_marathons_marathonentry_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.reading_marathons_marathonentry ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.reading_marathons_marathonentry_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: reading_marathons_marathonparticipant; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.reading_marathons_marathonparticipant (
    id bigint NOT NULL,
    status character varying(20) NOT NULL,
    joined_at timestamp with time zone NOT NULL,
    marathon_id bigint NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.reading_marathons_marathonparticipant OWNER TO postgres;

--
-- Name: reading_marathons_marathonparticipant_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.reading_marathons_marathonparticipant ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.reading_marathons_marathonparticipant_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: reading_marathons_marathontheme; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.reading_marathons_marathontheme (
    id bigint NOT NULL,
    title character varying(255) NOT NULL,
    description text NOT NULL,
    "order" integer NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    marathon_id bigint NOT NULL,
    CONSTRAINT reading_marathons_marathontheme_order_check CHECK (("order" >= 0))
);


ALTER TABLE public.reading_marathons_marathontheme OWNER TO postgres;

--
-- Name: reading_marathons_marathontheme_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.reading_marathons_marathontheme ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.reading_marathons_marathontheme_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: reading_marathons_readingmarathon; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.reading_marathons_readingmarathon (
    id bigint NOT NULL,
    title character varying(255) NOT NULL,
    description text NOT NULL,
    cover character varying(100),
    start_date date NOT NULL,
    end_date date,
    join_policy character varying(20) NOT NULL,
    book_submission_policy character varying(20) NOT NULL,
    completion_policy character varying(20) NOT NULL,
    slug character varying(255) NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    creator_id integer NOT NULL
);


ALTER TABLE public.reading_marathons_readingmarathon OWNER TO postgres;

--
-- Name: reading_marathons_readingmarathon_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.reading_marathons_readingmarathon ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.reading_marathons_readingmarathon_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: shelves_bookprogress; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.shelves_bookprogress (
    id bigint NOT NULL,
    percent numeric(5,2) NOT NULL,
    current_page integer,
    updated_at timestamp with time zone NOT NULL,
    book_id bigint NOT NULL,
    event_id bigint,
    user_id integer NOT NULL,
    reading_notes text NOT NULL,
    audio_length interval,
    audio_playback_speed numeric(3,1),
    custom_total_pages integer,
    format character varying(20) NOT NULL,
    audio_position interval,
    CONSTRAINT shelves_bookprogress_current_page_check CHECK ((current_page >= 0)),
    CONSTRAINT shelves_bookprogress_custom_total_pages_check CHECK ((custom_total_pages >= 0))
);


ALTER TABLE public.shelves_bookprogress OWNER TO postgres;

--
-- Name: shelves_bookprogress_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.shelves_bookprogress ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.shelves_bookprogress_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: shelves_bookprogressmedium; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.shelves_bookprogressmedium (
    id bigint NOT NULL,
    medium character varying(20) NOT NULL,
    current_page integer,
    total_pages_override integer,
    audio_position interval,
    audio_length interval,
    playback_speed numeric(3,1),
    progress_id bigint NOT NULL,
    CONSTRAINT shelves_bookprogressmedium_current_page_check CHECK ((current_page >= 0)),
    CONSTRAINT shelves_bookprogressmedium_total_pages_override_check CHECK ((total_pages_override >= 0))
);


ALTER TABLE public.shelves_bookprogressmedium OWNER TO postgres;

--
-- Name: shelves_bookprogressmedium_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.shelves_bookprogressmedium ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.shelves_bookprogressmedium_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: shelves_characternote; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.shelves_characternote (
    id bigint NOT NULL,
    name character varying(120) NOT NULL,
    description text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    progress_id bigint NOT NULL
);


ALTER TABLE public.shelves_characternote OWNER TO postgres;

--
-- Name: shelves_characternote_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.shelves_characternote ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.shelves_characternote_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: shelves_event; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.shelves_event (
    id bigint NOT NULL,
    kind character varying(20) NOT NULL,
    title character varying(200) NOT NULL,
    description text NOT NULL,
    start_at timestamp with time zone NOT NULL,
    end_at timestamp with time zone,
    is_public boolean NOT NULL,
    creator_id integer NOT NULL,
    shelf_id bigint
);


ALTER TABLE public.shelves_event OWNER TO postgres;

--
-- Name: shelves_event_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.shelves_event ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.shelves_event_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: shelves_eventparticipant; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.shelves_eventparticipant (
    id bigint NOT NULL,
    joined_at timestamp with time zone NOT NULL,
    is_moderator boolean NOT NULL,
    event_id bigint NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.shelves_eventparticipant OWNER TO postgres;

--
-- Name: shelves_eventparticipant_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.shelves_eventparticipant ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.shelves_eventparticipant_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: shelves_homelibraryentry; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.shelves_homelibraryentry (
    id bigint NOT NULL,
    edition character varying(200) NOT NULL,
    language character varying(50) NOT NULL,
    format character varying(20) NOT NULL,
    status character varying(100) NOT NULL,
    location character varying(100) NOT NULL,
    shelf_section character varying(100) NOT NULL,
    condition character varying(100) NOT NULL,
    acquired_at date,
    notes text NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    shelf_item_id bigint NOT NULL,
    disposition_note text NOT NULL,
    is_classic boolean NOT NULL,
    is_disposed boolean NOT NULL,
    series_name character varying(150) NOT NULL,
    read_at date
);


ALTER TABLE public.shelves_homelibraryentry OWNER TO postgres;

--
-- Name: shelves_homelibraryentry_custom_genres; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.shelves_homelibraryentry_custom_genres (
    id bigint NOT NULL,
    homelibraryentry_id bigint NOT NULL,
    genre_id bigint NOT NULL
);


ALTER TABLE public.shelves_homelibraryentry_custom_genres OWNER TO postgres;

--
-- Name: shelves_homelibraryentry_custom_genres_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.shelves_homelibraryentry_custom_genres ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.shelves_homelibraryentry_custom_genres_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: shelves_homelibraryentry_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.shelves_homelibraryentry ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.shelves_homelibraryentry_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: shelves_progressannotation; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.shelves_progressannotation (
    id bigint NOT NULL,
    kind character varying(20) NOT NULL,
    body text NOT NULL,
    location character varying(120) NOT NULL,
    comment text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    updated_at timestamp with time zone NOT NULL,
    progress_id bigint NOT NULL
);


ALTER TABLE public.shelves_progressannotation OWNER TO postgres;

--
-- Name: shelves_progressannotation_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.shelves_progressannotation ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.shelves_progressannotation_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: shelves_readingfeedcomment; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.shelves_readingfeedcomment (
    id bigint NOT NULL,
    body text NOT NULL,
    created_at timestamp with time zone NOT NULL,
    entry_id bigint NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.shelves_readingfeedcomment OWNER TO postgres;

--
-- Name: shelves_readingfeedcomment_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.shelves_readingfeedcomment ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.shelves_readingfeedcomment_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: shelves_readingfeedentry; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.shelves_readingfeedentry (
    id bigint NOT NULL,
    medium character varying(20) NOT NULL,
    current_page numeric(7,2),
    percent numeric(5,2),
    reaction text NOT NULL,
    is_public boolean NOT NULL,
    created_at timestamp with time zone NOT NULL,
    book_id bigint NOT NULL,
    progress_id bigint NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.shelves_readingfeedentry OWNER TO postgres;

--
-- Name: shelves_readingfeedentry_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.shelves_readingfeedentry ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.shelves_readingfeedentry_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: shelves_readinglog; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.shelves_readinglog (
    id bigint NOT NULL,
    log_date date NOT NULL,
    pages_equivalent numeric(9,2) NOT NULL,
    progress_id bigint NOT NULL,
    audio_seconds integer NOT NULL,
    medium character varying(20) NOT NULL,
    CONSTRAINT shelves_readinglog_audio_seconds_check CHECK ((audio_seconds >= 0))
);


ALTER TABLE public.shelves_readinglog OWNER TO postgres;

--
-- Name: shelves_readinglog_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.shelves_readinglog ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.shelves_readinglog_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: shelves_shelf; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.shelves_shelf (
    id bigint NOT NULL,
    name character varying(100) NOT NULL,
    is_default boolean NOT NULL,
    is_public boolean NOT NULL,
    user_id integer NOT NULL,
    is_managed boolean NOT NULL
);


ALTER TABLE public.shelves_shelf OWNER TO postgres;

--
-- Name: shelves_shelf_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.shelves_shelf ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.shelves_shelf_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: shelves_shelfitem; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.shelves_shelfitem (
    id bigint NOT NULL,
    added_at timestamp with time zone NOT NULL,
    book_id bigint NOT NULL,
    shelf_id bigint NOT NULL
);


ALTER TABLE public.shelves_shelfitem OWNER TO postgres;

--
-- Name: shelves_shelfitem_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.shelves_shelfitem ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.shelves_shelfitem_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: user_ratings_userpointevent; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.user_ratings_userpointevent (
    id bigint NOT NULL,
    event_type character varying(64) NOT NULL,
    points integer NOT NULL,
    created_at timestamp with time zone NOT NULL,
    object_id bigint,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT user_ratings_userpointevent_object_id_check CHECK ((object_id >= 0)),
    CONSTRAINT user_ratings_userpointevent_points_check CHECK ((points >= 0))
);


ALTER TABLE public.user_ratings_userpointevent OWNER TO postgres;

--
-- Name: user_ratings_userpointevent_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.user_ratings_userpointevent ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.user_ratings_userpointevent_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: accounts_premiumpayment; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.accounts_premiumpayment (id, plan, method, status, amount, currency, reference, created_at, updated_at, paid_at, notes, user_id) FROM stdin;
\.


--
-- Data for Name: accounts_premiumsubscription; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.accounts_premiumsubscription (id, start_at, end_at, created_at, source, granted_by_id, payment_id, user_id) FROM stdin;
\.


--
-- Data for Name: accounts_profile; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.accounts_profile (id, avatar, bio, website, user_id, link1, link2, link3, link4) FROM stdin;
1				1	\N	\N	\N	\N
6				6	\N	\N	\N	\N
5	avatars/JPEG_20251024_184703_8321588267135610603.jpg			5	\N	\N	\N	\N
3	avatars/JPEG_20251024_182234_3259142537381052828.jpg			3	\N	\N	\N	\N
8				8	\N	\N	\N	\N
2	avatars/1000017448.jpg			2	\N	\N	\N	\N
9				9	\N	\N	\N	\N
4	avatars/1000013732.jpg			4	\N	\N	\N	\N
10				10	\N	\N	\N	\N
12				12	\N	\N	\N	\N
7	avatars/photo_2025-10-10_19-14-37.jpg			7	\N	\N	\N	\N
11				11	\N	\N	\N	\N
13	avatars/JPEG_20251029_010331_8988990925776197596.jpg			13	\N	\N	\N	\N
14				14	\N	\N	\N	\N
\.


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group (id, name) FROM stdin;
1	reader
2	author
3	blogger
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add log entry	1	add_logentry
2	Can change log entry	1	change_logentry
3	Can delete log entry	1	delete_logentry
4	Can view log entry	1	view_logentry
5	Can add permission	2	add_permission
6	Can change permission	2	change_permission
7	Can delete permission	2	delete_permission
8	Can view permission	2	view_permission
9	Can add group	3	add_group
10	Can change group	3	change_group
11	Can delete group	3	delete_group
12	Can view group	3	view_group
13	Can add user	4	add_user
14	Can change user	4	change_user
15	Can delete user	4	delete_user
16	Can view user	4	view_user
17	Can add content type	5	add_contenttype
18	Can change content type	5	change_contenttype
19	Can delete content type	5	delete_contenttype
20	Can view content type	5	view_contenttype
21	Can add session	6	add_session
22	Can change session	6	change_session
23	Can delete session	6	delete_session
24	Can view session	6	view_session
25	Can add author	7	add_author
26	Can change author	7	change_author
27	Can delete author	7	delete_author
28	Can view author	7	view_author
29	Can add publisher	8	add_publisher
30	Can change publisher	8	change_publisher
31	Can delete publisher	8	delete_publisher
32	Can view publisher	8	view_publisher
33	Can add genre	9	add_genre
34	Can change genre	9	change_genre
35	Can delete genre	9	delete_genre
36	Can view genre	9	view_genre
37	Can add isbn model	10	add_isbnmodel
38	Can change isbn model	10	change_isbnmodel
39	Can delete isbn model	10	delete_isbnmodel
40	Can view isbn model	10	view_isbnmodel
41	Can add audio book	11	add_audiobook
42	Can change audio book	11	change_audiobook
43	Can delete audio book	11	delete_audiobook
44	Can view audio book	11	view_audiobook
45	Can add book	12	add_book
46	Can change book	12	change_book
47	Can delete book	12	delete_book
48	Can view book	12	view_book
49	Can add reading session	13	add_readingsession
50	Can change reading session	13	change_readingsession
51	Can delete reading session	13	delete_readingsession
52	Can view reading session	13	view_readingsession
53	Can add rating	14	add_rating
54	Can change rating	14	change_rating
55	Can delete rating	14	delete_rating
56	Can view rating	14	view_rating
57	Can add rating comment	15	add_ratingcomment
58	Can change rating comment	15	change_ratingcomment
59	Can delete rating comment	15	delete_ratingcomment
60	Can view rating comment	15	view_ratingcomment
61	Can add profile	16	add_profile
62	Can change profile	16	change_profile
63	Can delete profile	16	delete_profile
64	Can view profile	16	view_profile
65	Can add premium payment	17	add_premiumpayment
66	Can change premium payment	17	change_premiumpayment
67	Can delete premium payment	17	delete_premiumpayment
68	Can view premium payment	17	view_premiumpayment
69	Can add premium subscription	18	add_premiumsubscription
70	Can change premium subscription	18	change_premiumsubscription
71	Can delete premium subscription	18	delete_premiumsubscription
72	Can view premium subscription	18	view_premiumsubscription
73	Can add shelf	19	add_shelf
74	Can change shelf	19	change_shelf
75	Can delete shelf	19	delete_shelf
76	Can view shelf	19	view_shelf
77	Can add shelf item	20	add_shelfitem
78	Can change shelf item	20	change_shelfitem
79	Can delete shelf item	20	delete_shelfitem
80	Can view shelf item	20	view_shelfitem
81	Can add event	21	add_event
82	Can change event	21	change_event
83	Can delete event	21	delete_event
84	Can view event	21	view_event
85	Can add event participant	22	add_eventparticipant
86	Can change event participant	22	change_eventparticipant
87	Can delete event participant	22	delete_eventparticipant
88	Can view event participant	22	view_eventparticipant
89	Can add book progress	23	add_bookprogress
90	Can change book progress	23	change_bookprogress
91	Can delete book progress	23	delete_bookprogress
92	Can view book progress	23	view_bookprogress
93	Can add book progress medium	24	add_bookprogressmedium
94	Can change book progress medium	24	change_bookprogressmedium
95	Can delete book progress medium	24	delete_bookprogressmedium
96	Can view book progress medium	24	view_bookprogressmedium
97	Can add reading log	25	add_readinglog
98	Can change reading log	25	change_readinglog
99	Can delete reading log	25	delete_readinglog
100	Can view reading log	25	view_readinglog
101	Can add character note	26	add_characternote
102	Can change character note	26	change_characternote
103	Can delete character note	26	delete_characternote
104	Can view character note	26	view_characternote
105	Can add progress annotation	27	add_progressannotation
106	Can change progress annotation	27	change_progressannotation
107	Can delete progress annotation	27	delete_progressannotation
108	Can view progress annotation	27	view_progressannotation
109	Can add reading feed entry	28	add_readingfeedentry
110	Can change reading feed entry	28	change_readingfeedentry
111	Can delete reading feed entry	28	delete_readingfeedentry
112	Can view reading feed entry	28	view_readingfeedentry
113	Can add reading feed comment	29	add_readingfeedcomment
114	Can change reading feed comment	29	change_readingfeedcomment
115	Can delete reading feed comment	29	delete_readingfeedcomment
116	Can view reading feed comment	29	view_readingfeedcomment
117	Can add home library entry	30	add_homelibraryentry
118	Can change home library entry	30	change_homelibraryentry
119	Can delete home library entry	30	delete_homelibraryentry
120	Can view home library entry	30	view_homelibraryentry
121	Can add forgotten book entry	31	add_forgottenbookentry
122	Can change forgotten book entry	31	change_forgottenbookentry
123	Can delete forgotten book entry	31	delete_forgottenbookentry
124	Can view forgotten book entry	31	view_forgottenbookentry
125	Can add game	32	add_game
126	Can change game	32	change_game
127	Can delete game	32	delete_game
128	Can view game	32	view_game
129	Can add game shelf state	33	add_gameshelfstate
130	Can change game shelf state	33	change_gameshelfstate
131	Can delete game shelf state	33	delete_gameshelfstate
132	Can view game shelf state	33	view_gameshelfstate
133	Can add game shelf book	34	add_gameshelfbook
134	Can change game shelf book	34	change_gameshelfbook
135	Can delete game shelf book	34	delete_gameshelfbook
136	Can view game shelf book	34	view_gameshelfbook
137	Can add game shelf purchase	35	add_gameshelfpurchase
138	Can change game shelf purchase	35	change_gameshelfpurchase
139	Can delete game shelf purchase	35	delete_gameshelfpurchase
140	Can view game shelf purchase	35	view_gameshelfpurchase
141	Can add book journey assignment	36	add_bookjourneyassignment
142	Can change book journey assignment	36	change_bookjourneyassignment
143	Can delete book journey assignment	36	delete_bookjourneyassignment
144	Can view book journey assignment	36	view_bookjourneyassignment
145	Can add Платформа для отзывов	37	add_reviewplatform
146	Can change Платформа для отзывов	37	change_reviewplatform
147	Can delete Платформа для отзывов	37	delete_reviewplatform
148	Can view Платформа для отзывов	37	view_reviewplatform
149	Can add Предложение автора	38	add_authoroffer
150	Can change Предложение автора	38	change_authoroffer
151	Can delete Предложение автора	38	delete_authoroffer
152	Can view Предложение автора	38	view_authoroffer
153	Can add Заявка блогера	39	add_bloggerrequest
154	Can change Заявка блогера	39	change_bloggerrequest
155	Can delete Заявка блогера	39	delete_bloggerrequest
156	Can view Заявка блогера	39	view_bloggerrequest
157	Can add Площадка блогера	40	add_bloggerplatformpresence
158	Can change Площадка блогера	40	change_bloggerplatformpresence
159	Can delete Площадка блогера	40	delete_bloggerplatformpresence
160	Can view Площадка блогера	40	view_bloggerplatformpresence
161	Can add Отклик на предложение автора	41	add_authorofferresponse
162	Can change Отклик на предложение автора	41	change_authorofferresponse
163	Can delete Отклик на предложение автора	41	delete_authorofferresponse
164	Can view Отклик на предложение автора	41	view_authorofferresponse
165	Can add Комментарий к отклику	42	add_authorofferresponsecomment
166	Can change Комментарий к отклику	42	change_authorofferresponsecomment
167	Can delete Комментарий к отклику	42	delete_authorofferresponsecomment
168	Can view Комментарий к отклику	42	view_authorofferresponsecomment
169	Can add Отклик автора на заявку блогера	43	add_bloggerrequestresponse
170	Can change Отклик автора на заявку блогера	43	change_bloggerrequestresponse
171	Can delete Отклик автора на заявку блогера	43	delete_bloggerrequestresponse
172	Can view Отклик автора на заявку блогера	43	view_bloggerrequestresponse
173	Can add Комментарий к отклику блогеру	44	add_bloggerrequestresponsecomment
174	Can change Комментарий к отклику блогеру	44	change_bloggerrequestresponsecomment
175	Can delete Комментарий к отклику блогеру	44	delete_bloggerrequestresponsecomment
176	Can view Комментарий к отклику блогеру	44	view_bloggerrequestresponsecomment
177	Can add Приглашение блогера	45	add_bloggerinvitation
178	Can change Приглашение блогера	45	change_bloggerinvitation
179	Can delete Приглашение блогера	45	delete_bloggerinvitation
180	Can view Приглашение блогера	45	view_bloggerinvitation
181	Can add Розыгрыш блогера	46	add_bloggergiveaway
182	Can change Розыгрыш блогера	46	change_bloggergiveaway
183	Can delete Розыгрыш блогера	46	delete_bloggergiveaway
184	Can view Розыгрыш блогера	46	view_bloggergiveaway
185	Can add Книжный клуб сообщества	47	add_communitybookclub
186	Can change Книжный клуб сообщества	47	change_communitybookclub
187	Can delete Книжный клуб сообщества	47	delete_communitybookclub
188	Can view Книжный клуб сообщества	47	view_communitybookclub
189	Can add Сотрудничество	48	add_collaboration
190	Can change Сотрудничество	48	change_collaboration
191	Can delete Сотрудничество	48	delete_collaboration
192	Can view Сотрудничество	48	view_collaboration
193	Can add Сообщение сотрудничества	49	add_collaborationmessage
194	Can change Сообщение сотрудничества	49	change_collaborationmessage
195	Can delete Сообщение сотрудничества	49	delete_collaborationmessage
196	Can view Сообщение сотрудничества	49	view_collaborationmessage
197	Can add Рейтинг блогера	50	add_bloggerrating
198	Can change Рейтинг блогера	50	change_bloggerrating
199	Can delete Рейтинг блогера	50	delete_bloggerrating
200	Can view Рейтинг блогера	50	view_bloggerrating
201	Can add Совместное чтение	51	add_readingclub
202	Can change Совместное чтение	51	change_readingclub
203	Can delete Совместное чтение	51	delete_readingclub
204	Can view Совместное чтение	51	view_readingclub
205	Can add Участник совместного чтения	52	add_readingparticipant
206	Can change Участник совместного чтения	52	change_readingparticipant
207	Can delete Участник совместного чтения	52	delete_readingparticipant
208	Can view Участник совместного чтения	52	view_readingparticipant
209	Can add Норма чтения	53	add_readingnorm
210	Can change Норма чтения	53	change_readingnorm
211	Can delete Норма чтения	53	delete_readingnorm
212	Can view Норма чтения	53	view_readingnorm
213	Can add Сообщение обсуждения	54	add_discussionpost
214	Can change Сообщение обсуждения	54	change_discussionpost
215	Can delete Сообщение обсуждения	54	delete_discussionpost
216	Can view Сообщение обсуждения	54	view_discussionpost
217	Can add Книжный марафон	55	add_readingmarathon
218	Can change Книжный марафон	55	change_readingmarathon
219	Can delete Книжный марафон	55	delete_readingmarathon
220	Can view Книжный марафон	55	view_readingmarathon
221	Can add Тема марафона	56	add_marathontheme
222	Can change Тема марафона	56	change_marathontheme
223	Can delete Тема марафона	56	delete_marathontheme
224	Can view Тема марафона	56	view_marathontheme
225	Can add Участник марафона	57	add_marathonparticipant
226	Can change Участник марафона	57	change_marathonparticipant
227	Can delete Участник марафона	57	delete_marathonparticipant
228	Can view Участник марафона	57	view_marathonparticipant
229	Can add Книга в марафоне	58	add_marathonentry
230	Can change Книга в марафоне	58	change_marathonentry
231	Can delete Книга в марафоне	58	delete_marathonentry
232	Can view Книга в марафоне	58	view_marathonentry
233	Can add Событие рейтинга пользователя	59	add_userpointevent
234	Can change Событие рейтинга пользователя	59	change_userpointevent
235	Can delete Событие рейтинга пользователя	59	delete_userpointevent
236	Can view Событие рейтинга пользователя	59	view_userpointevent
237	Can add book exchange accepted book	60	add_bookexchangeacceptedbook
238	Can change book exchange accepted book	60	change_bookexchangeacceptedbook
239	Can delete book exchange accepted book	60	delete_bookexchangeacceptedbook
240	Can view book exchange accepted book	60	view_bookexchangeacceptedbook
241	Can add book exchange offer	61	add_bookexchangeoffer
242	Can change book exchange offer	61	change_bookexchangeoffer
243	Can delete book exchange offer	61	delete_bookexchangeoffer
244	Can view book exchange offer	61	view_bookexchangeoffer
245	Can add book exchange challenge	62	add_bookexchangechallenge
246	Can change book exchange challenge	62	change_bookexchangechallenge
247	Can delete book exchange challenge	62	delete_bookexchangechallenge
248	Can view book exchange challenge	62	view_bookexchangechallenge
\.


--
-- Data for Name: auth_user; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_user (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined) FROM stdin;
12	pbkdf2_sha256$600000$ttIMy9lxNE50LkcSViqySE$5jAUUOesS5tlMz8JN7E/XCJB2bwAbIFAoONtiXffU1w=	2025-10-27 10:52:09.840083+00	f	Мурбусенок			murbusenok@gmail.com	f	t	2025-10-27 10:52:09.291397+00
11	pbkdf2_sha256$600000$vOfGCmu6erBecNzPl2WGBU$GBKlihr1vHRsvxQUFW31mVS+Irw3IiAEdfJ1aVcRRR8=	2025-10-27 11:36:13.194894+00	f	Любитель_книг			chitaemknigi77@gmail.com	f	t	2025-10-26 18:57:23.938847+00
7	pbkdf2_sha256$600000$JWVrDnDoZkcY49iOQua40t$9iGJrf0VeSnUY9Z9o+xwPuw+W6dvL8zCZxF+s5OsopY=	2025-10-28 16:21:57.493784+00	f	Александра			asehina996@gmail.com	f	t	2025-10-25 11:30:46.495682+00
13	pbkdf2_sha256$600000$XDCAhwhrq413zCdIpYIlTX$51+hyHxB690RHYgMkE6heb4xxISJbgzNS5jmzgMgtoQ=	2025-10-28 22:02:23.034751+00	f	Евгения			evgenya.chegrintseva@yandex.ru	f	t	2025-10-28 22:02:22.714527+00
6	pbkdf2_sha256$600000$r1eFK7kJdl38xJiZUTOfXr$RZ4c7ZR8q3KiTFEeSWt/PIxSZlBR7ZysoWlKGagwYIY=	2025-10-24 13:23:54.91234+00	f	Dark_girl			chiernykh97@bk.ru	f	t	2025-10-24 13:23:54.463973+00
4	pbkdf2_sha256$600000$kPawnlOWqwQRBPerKrUylr$R4rZw8vS9J0IoksA+xk2plhO3sLnzREnFXk33g2uwUc=	2025-10-24 14:11:47.774584+00	f	Litgourmet			inna.tan.online@gmail.com	f	t	2025-10-24 11:55:55.884822+00
14	pbkdf2_sha256$600000$D8CSwxPD1Ag8ebQmlUz8GT$3YW+jSg6uC3TJEnOk4LMi1ey79ARLfkHalYu54aAfzs=	2025-10-29 09:16:07.913925+00	f	Katya_bookworld			e.soloviova.bh@mail.ru	f	t	2025-10-29 09:16:07.571404+00
5	pbkdf2_sha256$600000$NtW57PBZXdW1Lhf7RnJyHh$LbebC1IEtajpz9KGaK3xAjkq3eyOzqIWFM7IcQ5eq8Q=	2025-10-24 16:45:46.924243+00	f	Марина			marinchen28@yandex.ru	f	t	2025-10-24 12:44:50.451598+00
1	pbkdf2_sha256$600000$s8lXkXYgnmZBEDZTsSuqdZ$aoXJuCs4apYC4vjwbX8KF6ACY50q/Q0QFamr/2s6MXQ=	2025-10-24 17:14:15.400243+00	t	Olga			ya.ameno@yandex.ru	t	t	2025-10-24 11:06:49.158795+00
2	pbkdf2_sha256$600000$MEHNjVwjdOcXYOxRANJrFz$1+HFeE04eWsAGVE70kaIps9Z603bYZrmiBXlcYqlaCU=	2025-10-25 15:27:42.820446+00	f	ArtPie			litnistel@mail.ru	f	t	2025-10-24 11:11:28.16005+00
8	pbkdf2_sha256$600000$saYcwSjbLQZkAbt8XX9hrj$fsjcNTWIW5DSIW/qeym6eN741nA1CMlcgUjkGbQeoC8=	2025-10-25 16:40:42.717588+00	f	TarAleksin			aleksintar@gmail.com	f	t	2025-10-25 16:40:42.373217+00
9	pbkdf2_sha256$600000$4xxaC2q8SkbnBnuGRIvTE8$1Lrvv897aHvK7zWidPooLiNIe67sh9j52ViY/t8EhYs=	2025-10-25 17:30:48.893949+00	f	Mamolya			novtseva84@mail.ru	f	t	2025-10-25 17:04:20.617924+00
10	pbkdf2_sha256$600000$n6wZxCrM5pn1f8bvxJgBm1$yofhoYPRBkefjajXSbx+1HjVrexft/bN99zknBtmS50=	2025-10-26 06:15:33.939249+00	f	Mermaid			ta_nyusha74@live.ru	f	t	2025-10-26 06:12:04.177804+00
3	pbkdf2_sha256$600000$W5n5LLxPpXkt631EfP25Kr$JvuwCVeOk8UZrrHsWwv61ri6EyKx+8T7DsrKAnsk8w0=	2025-10-26 18:58:39.266101+00	f	Живу_в_библиотеке			kuznetsova1986olga@gmail.com	f	t	2025-10-24 11:12:33.281589+00
\.


--
-- Data for Name: auth_user_groups; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_user_groups (id, user_id, group_id) FROM stdin;
9	6	1
10	3	1
11	3	2
12	3	3
13	7	1
14	7	3
15	8	2
16	2	1
18	9	1
19	9	3
20	4	1
21	4	2
22	4	3
23	10	1
25	12	1
27	11	3
28	13	1
29	14	1
30	14	3
\.


--
-- Data for Name: auth_user_user_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_user_user_permissions (id, user_id, permission_id) FROM stdin;
\.


--
-- Data for Name: books_audiobook; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.books_audiobook (id, title, length, narrator, publisher_id) FROM stdin;
\.


--
-- Data for Name: books_audiobook_genre; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.books_audiobook_genre (id, audiobook_id, genre_id) FROM stdin;
\.


--
-- Data for Name: books_author; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.books_author (id, name, bio, country) FROM stdin;
1	Роберт Джордан	\N	\N
2	Брендон Сандерсон	\N	\N
3	Владимир Владимирович Набоков	\N	\N
4	Алексей Иванов	\N	\N
5	Жоэль Диккер	\N	\N
6	Роберт Голд	\N	\N
7	Сергей Лукьяненко	\N	\N
8	Аткинсон Кеит	\N	\N
9	Кейт Аткинсон	\N	\N
10	Atkinson Keit	\N	\N
11	Аткинсон Кейт	\N	\N
12	Маршалл Смит М.	\N	\N
13	Жан-Кристоф Гранже	\N	\N
14	Чак Паланик	\N	\N
15	Jean-Christophe Grangé	\N	\N
16	Виктор Гюго	\N	\N
17	Вадим Юрьевич Панов	\N	\N
18	Константин Образцов	\N	\N
19	Вадим Панов	\N	\N
20	Франк Тилье	\N	\N
21	Франкк Тхиллиез	\N	\N
22	Ми Лэй	\N	\N
23	Лэй Ми	\N	\N
24	Джо Хилл	\N	\N
25	Hill Dzh.	\N	\N
26	Чукк Палахнюк	\N	\N
27	Тар Алексин	\N	\N
28	Анастасия Князь	\N	\N
29	Джанноне Франческа	\N	\N
30	Ольга Кузнецова	\N	\N
31	Стефани Майер	\N	\N
32	Алла Белолипецкая	\N	\N
33	Анн Патчетт	\N	\N
34	Джордж Мартин	\N	\N
35	Саша Хеллмейстер	\N	\N
36	Оливи Блэйк	\N	\N
37	Эш Хейсс	\N	\N
38	Хью Хауи	\N	\N
39	Александр Касаверде	\N	\N
40	Мэрилин Маркс	\N	\N
41	Ава Райд	\N	\N
42	Эми Хармон	\N	\N
43	Леопольд Ким	\N	\N
44	Виктория Побединская	\N	\N
45	Эдди Кан	\N	\N
46	Джей Кристофф	\N	\N
47	Сьюзен Стокс-Чепмен	\N	\N
48	Трейси Чи	\N	\N
49	Дана Делон	\N	\N
50	Ксюша Левина	\N	\N
51	Грейди Хендрикс	\N	\N
52	Даха Тараторина	\N	\N
53	Алена Тимофеева	\N	\N
54	Адриана Мэзер	\N	\N
55	Сэм Андерс	\N	\N
56	Уна Харт	\N	\N
57	Ирена Мадир	\N	\N
58	Линси Миллер	\N	\N
59	Жан-Мишель Генассия	\N	\N
60	Алиса Джукич	\N	\N
61	Виталий Кириллов	\N	\N
62	Фрэнсис Мэйес	\N	\N
63	Стивен Хокинг	\N	\N
64	Ребекка Яррос	\N	\N
65	Томас Пинчон	\N	\N
66	Говард Лавкрафт	\N	\N
67	Орхан Памук	\N	\N
68	Аркадий Вайнер	\N	\N
69	Георгий Вайнер	\N	\N
70	Михаил Крутихин	\N	\N
71	Дж. Р. Р Толкин	\N	\N
72	Чунхёк Ким	\N	\N
73	Лия Арден	\N	\N
74	Юй Сы	\N	\N
75	А. Райнер	\N	\N
76	Лиз Томфорд	\N	\N
77	Девитт Тара	\N	\N
78	Эмили Генри	\N	\N
79	Емилй Хенрй	\N	\N
80	Лори Холс Андерсон	\N	\N
81	Эмили Кэрролл	\N	\N
82	Лори Холс Андерсон Емили Керролл	\N	\N
83	К. Такер	\N	\N
84	Taker K.A.	\N	\N
85	Чжоу М.	\N	\N
86	Чжоу Мо	\N	\N
87	Chzhou M.	\N	\N
88	Анастасия Вайолет	\N	\N
89	Vajolet A.	\N	\N
90	Ольга Кочешева	\N	\N
91	Борис Хантаев	\N	\N
92	Ангелина Шэн	\N	\N
93	Вероника Шэн	\N	\N
94	Вероника и Ангелина Максимовы	\N	\N
95	Шен Ангелина Шен Вероника	\N	\N
96	Евгения Сафонова	\N	\N
\.


--
-- Data for Name: books_book; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.books_book (id, title, synopsis, series, series_order, age_rating, language, audio_id, cover, primary_isbn_id, edition_group_key, created_at) FROM stdin;
1	Колесо Времени. Книга 1. Око Мира	Темный, средоточие вселенского зла, некогда заточенный Создателем в горном узилище Шайол Гул, успел навести порчу на мир, и люди, способные использовать Единую Силу и вершить с ее помощью великие деяния, ввергли мир в катастрофу, которую назвали Разломом Мира. На этом кончилась Эпоха легенд, и от прошлого в памяти человеческой остались одни лишь мифы.</p><p>И разве могло прийти в голову Ранду, Перрину или Мэту, троице неразлучных друзей из затерявшейся в лесной глуши деревеньки, что мифы скоро обрастут плотью, а им самим предстоит оказаться в самом центре событий, от исхода которых будет зависеть судьба людей на земле.\r\nВ настоящем издании тексты романов, составивших знаменитую эпопею «Колесо Времени», заново просмотрены и исправлены. Роман «Око Мира» дополнен авторским вступлением, ранее не переводившимся	Колесо времени	1	18+	Русский	\N	book_covers/metadata_40d11549dca83fd3.jpg	1	колесо времени. книга 1. око мира::роберт джордан	2025-10-24 11:44:47.350922+00
24	Сновидение	Абигэль – выдающийся психолог, специалист, которого полиция часто призывает на помощь в серьезных расследованиях. Однако ее жизнь с давних пор омрачает нарколепсия – таинственная болезнь, из-за которой сны перепутаны с действительностью. Теперь Абигэль идет по следу человека, который уже похитил троих детей, и, похоже, вскоре у полиции будет четвертая жертва… Вопросы множатся, похититель где-то совсем рядом. Но кто он? Ответ хранится в памяти Абигэль – памяти, где реальность неотвратимо сжимается, как шагреневая кожа…	\N	\N	18+	Русский	\N	book_covers/metadata_d3b55d062111fd12.jpg	24	сновидение::франк тилье	2025-10-24 18:46:02.939558+00
71	Схватка с тенями	Что происходит с человеком после смерти? Куда направляется душа – в рай или ад? А может, существует другое неизведанное место? Элисон и Сэм так и не смогли этого узнать. После смерти во время пожара в 1907 году они застряли между Землей и Небесами и стали хранителями. Ангелы выбрали их и поручили миссию – защищать человечество.\r\n\r\nВ новой жизни Сэм и Элисон наслаждаются бессмертием, нарушают ангельские правила и мечтают получить собственных подопечных. Беззаботное будущее обещает невероятные приключения. Но девушки даже не догадываются, что их смерть была запланирована много столетий назад. Элисон и Сэм стали пешками в многовековой игре и погибли, чтобы раз и навсегда изменить мир Ангелов и Демонов...\r\n\r\nДебют молодой писательницы Сэм Андерс в Freedom – городское фэнтези о Небесных хранительницах, чья миссия – защищать своих подопечных, Сару и Брайана, простых студентов из Нью-Йорка. Им предстоит сражаться с демонами, используя силу света, участвовать в состязании Земных и Небесных хранителей, а главное – защищать человечество от армии тьмы.	Young Adult. Хранители Армы	\N	16+	\N	\N	book_covers/101211949_0.jpg	71	схватка с тенями::сэм андерс	2025-10-28 09:02:09.046351+00
85	Черные дыры и молодые вселенные		\N	\N	\N	Русский	\N		\N	черные дыры и молодые вселенные::стивен хокинг	2025-10-28 14:25:05.288619+00
97	Во главе конца	Пока ради спасения любимого Кассии предстоит разгадать секреты Переправы и отыскать закрытые для всех земли Фантаса, Микеля ожидают ужасающие последствия провального плана, о котором он и не догадывался.\r\n\r\nОба уверены, что каждый из них знает правду, но во главе конца стоит нечто неподвластное даже богам.\r\n\r\nЗаключительная часть трилогии городского фэнтези "Нити судьбы" Лии Арден.	Охотники за мирами. Бестселлеры Лии Арден	\N	18+	\N	\N	book_covers/7122057943.webp	96	во главе конца::лия арден	2025-10-29 06:18:02.532321+00
48	Безмолвный Крик	Таинственный убийца в маске жестоко расправляется с подростками в небольшом городке Скарборо. Он называет себя Криком, и способы казни у него настолько изощренные, что полиция старается не распространяться о деталях происшествий, а очевидцы сходят с ума.\r\n\r\nЛесли Клайд переезжает в Скарборо, где надеется обрести тихую жизнь после смерти отца. Однако город превращается в ад, когда Крик проникает в ее дом. Вот только... после встречи с ним у Лесли остался лишь небольшой порез.\r\n\r\nОна пытается жить, словно ничего не произошло. Однажды Лесли заступается за презираемого всеми индейца и постепенно проникается к нему чувствами. Но со временем начинает находить все больше сходств между возлюбленным и Криком...	Коллекция странных дел	\N	18+	\N	\N	book_covers/7119292388.webp	48	безмолвный крик::саша хеллмейстер	2025-10-28 05:21:31.334496+00
2	Колесо Времени. Книга 3. Дракон Возрожденный	Великая битва с ордами, явившимися из-за Аритского океана, увенчалась победой Ранда, добывшего Рог Валир и призвавшего с его помощью оживших героев прошлого. Враг бежал. А люди узрели в развергшихся небесах битву между Ба’алзамоном — Темным, или Отцом Лжи, как его прозвали в народе, — и Рандом, победившим в этой небесной схватке. Чудо потрясло всех. Ранда провозгласили Драконом. Это невиданное событие заставляет вступить в игру новую опасную силу — главу Детей Света, лорда капитан-командора Пейдрона Найола, который правдами и неправдами стремится узурпировать власть. Но не он один строит козни против победителя Ба’алзамона. Слуги и приспешники Отца Лжи и другие отродья Тени тоже не могут себе позволить, чтобы Дракон Возрожденный явился в мир.\r\n В настоящем издании текст романа «Дракон Возрожденный» частично переведен заново и, как и в других романах, составивших знаменитую эпопею «Колесо Времени», заново отредактирован и исправлен	Колесо времени	3	18+	Русский	\N	book_covers/metadata_44f642580beab9f8.jpg	2	колесо времени. книга 3. дракон возрожденный::роберт джордан	2025-10-24 11:48:30.641085+00
25	Седьмой читатель	Мощный психологический триллер. Под угрозой смертельной опасности студент Фан Му обнаруживает в себе дар профайлинга.\r\n\r\nПовседневность. 1999 год. Фан Му – студент третьего курса Педагогического университета города Чанхон. Его жизнь ничем не отличается от жизни сокурсников, а самая страшная проблема – экзамены. Все меняется, когда университет потрясает новость о чудовищном убийстве: один из учащихся задушен в туалете студенческого общежития. Более того, погибший жил в одной комнате с Фан Му.\r\n\r\nБезысходность. Вскоре происходит новая трагедия. Первая красавица курса упала с двадцать четвертого этажа. Полиция склоняется к версии самоубийства, но после смерти еще двух студентов становится ясно: все не так просто.\r\n\r\nПрофайлер. Пока полицейские пытаются нащупать хоть какую-то зацепку, Фан Му не может отделаться от странного ощущения, будто он чувствует убийцу. Может смотреть на мир его глазами. В одном из учебников он находит список имен, среди которых все, кто был убит. Будущий профайлер уверен – это и есть ключ к разгадке. А оставшиеся из списка – в смертельной опасности…	Фан Му	4	18+	Русский	\N	book_covers/metadata_bf73d94f2c147062.jpg	25	седьмой читатель::ми лэй	2025-10-24 18:48:21.548969+00
99	Эпоха безумного короля	Что скрывается под маской врага?\r\n\r\nАнна Блан ненавидит вампиров, укравших ее свободу. Она поклялась отомстить и готова на все ради достижения цели.\r\n\r\nКайрон Гесс – главный воин вампирского лорда. Для него люди лишь пыль под ногами.\r\n\r\nИх сводит вместе тайный заговор против бессмертных. Анна под подозрением, Кайрон должен ее разоблачить.\r\n\r\nНо что, если у судьбы другие планы? Она ведет их от ненависти к страсти, от страсти к истинной любви. Теперь им предстоит мучительный выбор. Что важнее – запретные чувства к врагу или верность своему роду?	#trendbooks	\N	18+	\N	\N	book_covers/7535010665.webp	98	эпоха безумного короля::а. райнер	2025-10-29 06:27:28.047066+00
32	И в аду есть герои	Новый синтетический наркотик «стим» оказался способен порождать чудовищ не только в воспаленном мозгу наркоманов. Благодаря «стиму» пришел в этот мир верный слуга Великого Господина. Пришел, чтобы возродить посеянные тысячелетия назад семена Ненависти. И снова, как уже случалось в далеком прошлом, смертельная опасность заставила нынешних хозяев Земли – людей объединиться с потомками древних магов, правившими планетой в доисторические времена. С жителями Тайного Города...	Тайный город	5	18+	Русский	\N	book_covers/metadata_ef5f40363ae930ca.jpg	32	и в аду есть герои::вадим панов	2025-10-25 13:06:13.940445+00
3	Космер. Тайная история	Космер — уникальная вселенная, созданная воображением одного из популярнейших авторов в жанре фэнтези. Здесь у каждого мира собственная магическая система. Здесь можно пешком перебираться с планеты на планету. Здесь разворачиваются изощренные, головокружительные сюжеты циклов-бестселлеров «Рожденный туманом», «Архив Буресвета», «Двурожденные», «Белый песок», а также романов «Элантрис» и «Локон с Изумрудного моря». По замыслу Сандерсона, полный цикл о космере составит не менее сорока книг. Повесть «Душа императора» была удостоена премии «Хьюго», а «Гранетанцор» — это новый мини-роман из цикла «Архив Буресвета». Впервые на русском!	\N	\N	18+	Русский	\N	book_covers/metadata_3efedca57bfaacf1.jpg	3	космер. тайная история::брендон сандерсон	2025-10-24 12:43:01.159375+00
49	Ловушка для Крика	В Скарборо ходят слухи, что Крик – маньяк, жестоко расправляющийся с жителями города, – найден убитым. Однако Лесли Клайд уверена, что это не так. Крик, который стал ее личным кошмаром, не мог попасться так просто.\r\n\r\nПока полиция плетет заговор против ее возлюбленного, желая повесить на него убийства, Лесли устраивает вечеринку в честь его дня рождения. Но праздник оборачивается трагедией: двое ее друзей бесследно исчезают, а вскоре все, кроме девушки, забывают об их существовании.\r\n\r\nЕдинственный, кто может объяснить произошедшее, – это Крик. Ведь маньяк знает, что на этих землях живет древнее зло. И оно уже обратило свой леденящий взор на охотника и его идеальную жертву…	Коллекция странных дел	\N	18+	\N	\N	book_covers/7491747516.webp	49	ловушка для крика::саша хеллмейстер	2025-10-28 05:28:30.041888+00
72	Академия Весны	Брайт Масон – сирена. Она умеет обращаться птицей и убивать песней. Но вынуждена быть заложницей Ордена Пяти, чтобы сохранить жизнь своего отца. Рейв Хейз – маг земли и аристократ. Днем он староста в Академии Весны, а ночью охотник на иных. Если умрет она, умрет и он. Околдованные против воли чарами Фиама, они способны чувствовать друг друга за тысячи километров. Ненависть, притяжение, страсть они делят на двоих.\r\n\r\nЧтобы разрушить проклятие, один из них должен влюбиться. Но как это сделать, если притяжение между Брайт и Рейвом растет с каждым днем, как и опасность, которая угрожает обоим? Связь героев романа "Академия весны" – это больше, чем вражда и любовь-ненависть, это ментальная связь на физическом и эмоциональном уровнях, которую они не могут разорвать.	#trendbooks_magic	\N	16+	\N	\N	book_covers/6683755294.webp	72	академия весны::ксюша левина	2025-10-28 09:04:55.424321+00
110	Вечно дикая	Калла Флэтчер никогда не думала, что могла бы остаться жить на Аляске, а Джона ни за что бы не согласился жить в большом городе. Но вот они, счастливые и помолвленные, собираются провести рождественские каникулы в родном захолустье Трапперс-Кроссинг, прежде чем наконец пожениться в Торонто.	LAV. Романтика	\N	18+	\N	\N	book_covers/7394505010.webp	109	вечно дикая::к. такер	2025-10-29 06:58:56.886318+00
4	Взгляни на арлекинов!	В своем последнем завершенном романе «Взгляни на арлекинов!» (1974) великий художник обращается к теме таинственного влияния любви на искусство. С небывалым азартом и остроумием в этих «зеркальных мемуарах» Набоков совершает то, на что еще не отваживался ни один писатель: превращает собственную биографию в вымысел, бурлеск, арлекинаду, заставляя своего героя Вадима Вадимовича N. проделать нелегкий путь длиною в жизнь, чтобы на вершине ее обрести истинную любовь, реальность, искусство.\r\n\r\nИздание снабжено послесловием и подробными примечаниями переводчика, а также впервые публикуемыми порусски письмами Веры и Владимира Набоковых об этом романе	\N	\N	18+	Русский	\N	book_covers/metadata_7d38e072e66760d9.jpg	4	взгляни на арлекинов!::владимир владимирович набоков	2025-10-24 12:44:54.928338+00
26	Ящик Скиннера	"Профайлер. После окончания университета Фан Му поступает на службу в полицию. Теперь он - профайлер, распутывающий самые сложные преступления...Но однажды его чутье дает осечку. Убийца. Студент Люо Цзяхай задержан за убийство с особой жестокостью. Жертва--учительница, ради карьеры сломавшая жизнь его возлюбленной. Фан Му сочувствует преступнику и даже соглашается выступить в суде свидетелем защиты. Но вскоре подсудимый дерзко сбегает из изолятора. Более того, при этом друг и коллега Фан Му получает очень серьезные травмы--как физические, так и психологические. Психодрама. Чтобы помочь товарищу, профайлер соглашается на участие в психотерапевтических сеансах. Их цель: исцеление через повторное проживание травматического опыта. Но выясняется, что подобная терапия привлекает не только полицию. По городу прокатывается волна убийств, каждое из которых напоминает Фан Му кульминацию психодра-матического сеанса. А через некоторое время на месте очеред-ного убийства обнаруживается волос студента Люо Цзяхая..."--	Фан Му	2	18+	Русский	\N	book_covers/metadata_9096524d8ff31a9d.jpg	26	ящик скиннера::ми лэй	2025-10-24 18:50:13.287101+00
18	Красные цепи	Поистине ошеломляющий триллер.\r\n\r\nУнылый и чопорный дух старого города остается прежним: дух мертвеца, надменно взирающего на суету мира живых. Кажется, что даже обитатели домов остаются теми же, что и сто лет назад: люди, похожие на призраков, и призраки, похожие на людей. Гигантское болото, погребенное под тяжелой могильной плитой города, выдыхает туман, просачивающийся сквозь сырые камни к мглистому небу, и его гнилостные испарения пропитывают разум, души и тела живущих…\r\n\r\nПетербург, наши дни. В городе происходят жестокие убийства, явно совершенные адептами какого-то кровавого культа. Двое - похоронный агент, хранящий собственные мрачные тайны, и женщина-криминалист – по воле случая начинают свое расследование: официальные службы бездействуют, а неизвестных убийц защищает чьё-то могущественное покровительство. Такова завязка этой жутковатой и запутанной истории, в которой сплелись в единую цепь багрово-красные звенья средневековых мистерий, преступных страстей, безумия и одиночества.	Мистические триллеры Образцова	1	18+	Русский	\N	book_covers/JPEG_20251024_185346_3757592692098869833.jpg	18	красные цепи::константин образцов	2025-10-24 16:53:49.784395+00
22	День черной собаки	Седой юродивый бродит по Москве, раздражая богатых понаехавших речами, которые никто не хочет слышать… Стаи летучих мышей вылетают из багажников каршеринговых автомобилей, открывая то, что никто не хочет видеть. Безжалостный серийный убийца выкладывает в Сеть видеоролики с записью изощренных преступлений, и их смотрят все. Не хотят, но смотрят. Замирая от ужаса, и пытаясь понять, кто станет следующей жертвой? Как поймать того, кто бросил вызов обществу?\r\n\r\nЭто предстоит сделать майору Феликсу Вербину, но чтобы раскрыть дело, ему нужно узнать, какое отношение к потрясшим Москву убийствам имеет большая чёрная собака…	Феликс Вербин	1	18+	Русский	\N	book_covers/metadata_1100bffff9042928.jpg	22	день черной собаки::вадим панов	2025-10-24 17:12:03.39203+00
100	Миля над землей	Зандерс – самый скандальный и популярный хоккеист Чикаго. Он ввязывается в драки на льду, а затем покидает каждый матч с очередной девушкой.\r\n\r\nНа частном джете его хоккейной команды появляется новая стюардесса Стиви. И она безумно раздражает Зандерса. Парень решает сделать все, чтобы Стиви уволилась, как можно скорее.\r\n\r\nЭта ненависть взаимна. Стиви раздражает в самодовольном спортсмене абсолютно все.\r\n\r\nНо чем сильнее летят искры гнева, тем больше их тянет друг к другу. И вот уже они оба начинают ждать момент, когда Зандерс снова нажмет на кнопку вызова стюардессы...	Cupcake. Хиты Лиз Томфорд	\N	18+	\N	\N	book_covers/101343990_0.jpg	99	миля над землей::лиз томфорд	2025-10-29 06:31:43.934647+00
5	Бронепароходы	В 1918 году речными флотилиями обзавелись и 'учредиловцы' в Самаре, и Троцкий в Нижнем Новгороде, и повстанцы Ижевска, и чекисты в Перми. А в мире бушевала инженерная революция, когда паровые машины соперничали с дизельными двигателями, и в российское противостояние красных и белых властно вторгалась борьба лидеров нефтедобычи -- британского концерна 'Шелл' и русской компании братьев Нобель. Войну вели и люди, и технологии, и капиталы. В кровавой и огненной круговерти речники оказывались то красными, то белыми. Их принуждали стрелять в товарищей по главному делу жизни, принуждали топить пароходы -- славу и гордость речного флота. Как сохранить совесть посреди катастрофы? Как уберечь тех, кого ты любишь, кто тебе доверился? Как защитить прогресс, которому безразличны социальные битвы? Там, на палубах речных буксиров, капитаны искали честный путь в будущее, и маленький человек становился сильнее, чем огромный и могучий пароход.	\N	\N	18+	Русский	\N	book_covers/metadata_1d48902a3d7da398.jpg	5	бронепароходы::алексей иванов	2025-10-24 12:46:24.191805+00
73	Йага	Не ходи в темный лес! Не тревожь чащу! Не слушай плача мертвянок, не доверяй златым огням. Не отзывайся, коли кто-то по имени окликнул. И не гляди, не гляди в глаза лесной ведьме! Заворожит, заколдует так, что покой и сон позабудешь. Зверем у ног ее ляжешь, мать и отца в лицо не узнаешь. Останешься в черном ельнике, у избы на высоких курах, а вместо слов человеческих по-звериному взвоешь. Не ходи в темный лес, колдовку полюбишь!	#trendbooks_magic	\N	18+	\N	\N	book_covers/7049931297.webp	73	йага::даха тараторина	2025-10-28 09:10:50.892554+00
15	Братство камня	Диана Тиберж в отрочестве стала жертвой насилия, наложившего отпечаток на всю ее дальнейшую жизнь. Она обретает счастье и покой, усыновив в Таиланде мальчика, которого называет Люсьеном. В Париже они попадают в автомобильную катастрофу. Люсьен при смерти, но таинственный немецкий врач выводит его из комы. В ту же ночь врача убивают. У Дианы возникает подозрение, что дорожная авария была хорошо спланированным покушением на Люсьена. Расследование приводит ее в далекую Монголию. Здесь она наконец узнает правду, которая ужаснет даже закаленных читателей триллеров...	\N	\N	\N	Русский	\N	book_covers/JPEG_20251024_182442_5196165676834605509.jpg	15	братство камня::жан-кристоф гранже	2025-10-24 16:24:44.742934+00
98	Золотая клетка	Мин Сянь – четвертая принцесса Северной Сунь, но искусство влечет ее куда больше политики, и это всех устраивает. До поры.\r\n\r\nА потом всё меняется: средний брат гибнет на границе, наследник престола обвинен в преступном сговоре и казнён, а вскоре умирает и старый император. Отныне Мин Сянь – правительница-марионетка в руках группы министров во главе с ее дядей Вэй Шаопу и другом детства Шан Юем...	Алый Клен	\N	16+	\N	\N	book_covers/7126368198.webp	97	золотая клетка::юй сы	2025-10-29 06:23:59.210248+00
37	Снафф	Легендарная порнозвезда Касси Райт завершает свою карьеру.\r\nОднако уйти она намерена с таким шиком и блеском, какого мир "кино для взрослых" еще не знал.\r\nОна собирается заняться перед камерами сексом ни больше ни меньше, чем с шестьюстами мужчинами!\r\nСпециальные журналы неистовствуют.\r\nНочные программы кабельного телевидения заключают пари - получится или нет?\r\nПриглашенные поучаствовать любители с нетерпением ждут своей очереди и интригуют, чтобы пробиться вперед.\r\nСамые опытные асы порно затаили дыхание…\r\nОтсчет пошел!	\N	\N	18+	Русский	\N	book_covers/1000019275.jpg	37	снафф::чак паланик	2025-10-25 18:25:18.800132+00
6	Дикий зверь роман	Богатый и бедный сосед. Своя и чужая жена. Преступные интриги в элитном районе Женевы\r\nЗа десятилетие, прошедшее после публикации бестселлера «Правда о деле Гарри Квеберта», молодой швейцарец Жоэль Диккер, лауреат Гран-при Французской академии и Гонкуровской премии лицеистов, стал всемирно признанным мастером психологического детектива. Общий тираж его книг, переведенных на сорок языков, превышает 15 миллионов. Седьмой его роман, «Дикий зверь», едва появившись на прилавках, за первую же неделю разошелся в количестве 87 000 экземпляров.\r\nДействие разворачивается в престижном районе Женевы, где живут Софи и Арпад Браун, счастливая пара с двумя детьми, вызывающая у соседей восхищение и зависть. Неподалеку обитает еще одна пара, не столь благополучная: Грег — полицейский, Карин — продавщица в модном магазине. Знакомство между двумя семьями быстро перерастает в дружбу, однако далеко не безоблачную. Грег с первого взгляда влюбился в Софи, а случайно заметив у нее татуировку с изображением пантеры, совсем потерял голову. Забыв об осторожности, он тайком подглядывает за ней в бинокль — дом Браунов с застекленными стенами просматривается насквозь. Но за Софи, как выясняется, следит не он один. А тем временем в центре города готовится эпохальное ограбление…	\N	\N	\N	Русский	\N	book_covers/metadata_dc51bd72735731a1.jpg	6	дикий зверь роман::жоэль диккер	2025-10-24 12:48:38.699573+00
27	Профайлер	"Вампир". Весной 2002 года в китайском Цзяньбине происходит сразу три убийства. Молодые женщины задушены и выпотрошены. Найдены следы их крови, смешанной с молоком, которую пил убийца… Фан Му. В Университете Цзянбина, на отделении криминалистики учится весьма необычный студент. Замкнутый, нелюдимый, с темными тайнами в прошлом и… гений. Его настоящий дар: подмечать мельчайшие детали и делать удивительно точные психологические портреты. В свои двадцать четыре года он уже помог полиции поймать нескольких самых опасных маньяков и убийц… Смертельный экзамен. И теперь некто столь же гениальный, сколь и безумный, бросает вызов лично Фан Му. Сперва на двери его комнаты появляется пятиконечная звезда – фирменный знак знаменитого Ночного Сталкера. А на следующий день в Университете находят труп. Убийца в точности повторил способ, которым Ночной Сталкер расправлялся со своими жертвами. Не вписывается только шприц, найденный рядом с телом. Похоже, преступник предлагает профайлеру сыграть в игру: угадаешь следующего маньяка - предотвратишь новую смерть...	Фан Му	1	18+	Русский	\N	book_covers/JPEG_20251024_205500_6476300065488107930.jpg	27	профайлер::лэй ми	2025-10-24 18:55:08.072638+00
50	Шестёрка Атласа	Добро пожаловать в Александрийское общество. Раз в десять лет только шесть самых талантливых магов могут заслужить место в самом известном тайном обществе – Александрийском. Избранные получат власть и престиж, о которых и мечтать не могли. Но какую цену им придется заплатить за честь быть членом этого общества?\r\n\r\nУ каждого из новобранцев есть причины принять приглашение и бороться за место. Даже если это означает стать ближе, чем они могли себе представить, к своим опасным врагам. Даже если это означает быть преданным самыми, как казалось, надежными союзниками. Даже если это означает, что не все они переживут испытания…\r\n\r\nЗнания требуют крови.	Бестселлеры Оливи Блейк. Шестерка Атласа	\N	18+	\N	\N	book_covers/7423174772.webp	50	шестёрка атласа::оливи блэйк	2025-10-28 05:33:12.675126+00
7	12 тайн	Журналист расследует секреты английского пригорода. Детектив с мрачной атмосферой\r\nРоберта Голда нельзя назвать начинающим писателем, но прежде у него всегда был соавтор, так что «12 тайн» — это его дебют. «Герметичный детектив» всегда увлекателен, но здесь автор расширяет замкнутое пространство, где происходят преступления и их расследования, до размеров маленького городка. Жители вымышленного Хадли, расположенного неподалеку от Лондона, хорошо знают друг друга, и потому даже спустя двадцать лет после зверского убийства двух подростков это преступление живо в памяти горожан. Бен Харпер, журналист-расследователь и брат одной из жертв, самостоятельно пытается разобраться в мотивах трагедии, и ему открываются тайны его соседей и приятелей. Некоторые из этих тайн настолько жуткие, что поневоле соглашаешься со словами одного из героев книги: «Взгляд в прошлое не сулит ничего хорошего».	Бен Харпер	1	18+	Русский	\N		7	12 тайн::роберт голд	2025-10-24 12:53:56.139907+00
8	Глубина: Лабиринт отражений. Фальшивые зеркала. Прозрачные витражи	Знаменитый цикл мастера отечественной фантастики Сергея Лукьяненко, получивший культовый статус благодаря динамичному сюжету, уникальной авторской манере повествования и пророческому посылу: величайшее чудо, созданное человечеством, может оказаться как даром, так и проклятием, если использовать его бездумно.\r\n\r\nИтак, добро пожаловать в виртуальный город Диптаун — столицу киберреальности!..	Глубина	\N	16+	Русский	\N	book_covers/metadata_4b371e520d90e48b.jpg	8	глубина: лабиринт отражений. фальшивые зеркала. прозрачные витражи::сергей лукьяненко	2025-10-24 12:58:12.788193+00
9	Ждать ли добрых вестей?	СОДЕРЖИТ НЕЦЕНЗУРНУЮ БРАНЬ\r\nВ высшую лигу современной литературы Кейт Аткинсон попала с первой же попытки: ее дебютный роман «Музей моих тайн» получил престижную Уитбредовскую премию, обойдя «Прощальный вздох мавра» Салмана Рушди, а цикл романов о частном детективе Джексоне Броуди, успевший полюбиться и российскому читателю («Преступления прошлого», «Поворот к лучшему», «Ждать ли добрых вестей?», «Чуть свет, с собакою вдвоем»), Стивен Кинг окрестил «главным детективным проектом десятилетия». Суммарный тираж цикла превысил три миллиона экземпляров, а на основе первых его книг телеканал Би-би-си выпустил сериал «Преступления прошлого» с Джексоном Айзексом в главной роли.\r\nВ романе «Ждать ли добрых вестей?» действие происходит не в университетском Кембридже и не среди толп туристов, съехавшихся на Эдинбургский фестиваль, хотя шотландская столица вновь обеспечивает живописный фон происходящим событиям. А толчком к ним послужило кошмарное преступление тридцатилетней давности, всколыхнувшее тихий Девоншир и всю Англию; и вот осужденный убийца, отсидев положенное, выходит на свободу. Тем временем пропадает без вести доктор Траппер с маленьким ребенком — однако ее исчезновение тревожит, судя по всему, только ее овчарку Сейди и шестнадцатилетнюю бебиситтершу Реджи. А старший детектив-инспектор Луиза Монро озабочена другой пропажей — еще не зная, что Джексон Броуди вот-вот опять ворвется в ее жизнь, причем на всех парах (в буквальном смысле).	Джексон Броуди	3	18+	Русский	\N	book_covers/metadata_c59d3376dbc587ba.jpg	9	ждать ли добрых вестей?::аткинсон кеит	2025-10-24 13:03:39.332649+00
10	Поворот к лучшему	В высшую лигу современной литературы Кейт Аткинсон попала с первой же попытки: ее дебютный роман «Музей моих тайн» получил престижную Уитбредовскую премию, обойдя «Прощальный вздох мавра» Салмана Рушди, а цикл романов о частном детективе Джексоне Броуди, успевший полюбиться и российскому читателю («Преступления прошлого», «Поворот к лучшему», «Ждать ли добрых вестей?», «Чуть свет, с собакою вдвоем»), Стивен Кинг окрестил «главным детективным проектом десятилетия». На этот раз действие происходит в шотландской столице, наводненной туристами во время знаменитого ежегодного Эдинбургского фестиваля искусств. Снова Джексон Броуди оказывается свидетелем, казалось бы, ничем не связанных эпизодов: видный бизнесмен, под которого уже вовсю копает отдел экономических преступлений, попадает в больницу с инфарктом при весьма компрометирующих обстоятельствах; отлив оставляет на берегу тело девушки с сережками-крестиками, но прилив снова уносит его в море, несмотря на все старания случайно оказавшегося рядом Броуди. Местная полиция видит в нем в лучшем случае лжеца, а то и подозреваемого…	Джексон Броуди	2	18+	Русский	\N	book_covers/metadata_ec0e4719f701acec.jpg	10	поворот к лучшему::кейт аткинсон	2025-10-24 13:08:17.025162+00
40	Лонтано	Знакомьтесь — семейство Морван: отец возглавляет французскую полицию, старший сын следует по стопам отца, младший — успешный финансист и наркоман со стажем, дочка — актриса-неудачница, зато пользуется успехом в качестве экскорт-girl.\r\nЧлены семьи прочно привязаны друг к другу, тем более прочно, что объединяет их взаимная ненависть. Но вот во Франции возникает череда странных убийств, как две капли воды похожих на те, что совершил знаменитый серийный убийца по прозвищу Человек-гвоздь в семидесятые годы в Конго. Но ведь Морван-отец давно раскрыл те давние преступления. Кто в таком случае орудует во Франции и почему удары приходятся по семье полицейского номер один?! Сумеют ли Морваны противостоять атакам неведомого противника или же падут жертвой собственных страстей?..	\N	\N	18+	Русский	\N	book_covers/metadata_26b77182a135c256.jpg	40	лонтано::жан-кристоф гранже	2025-10-27 08:45:21.430719+00
101	Идеальный план	Райан – суперзвезда НБА, окруженный толпами фанаток, но совершенно не верит в любовь, сосредоточенный только на баскетболе.\r\n\r\nИнди уверена, что переезд к брату своей лучшей подруги – отвратительная идея, ведь он терпеть ее не может. Однако обстоятельства заставляют Райана попросить Инди сыграть роль его девушки.\r\n\r\nС каждым днем их фейковые отношения все больше наполняются искренними чувствами и неожиданными эмоциями. Инди начинает осознавать, что за образом успешного спортсмена скрывается уязвимый человек, жаждущий понимания.\r\n\r\nСможет ли Инди растопить ледяное сердце баскетболиста и научить его верить в настоящую любовь? Параллельно они оба открывают для себя, что иногда неожиданные обстоятельства могут привести к самым удивительным изменениям в жизни	Cupcake. Хиты Лиз Томфорд	\N	18+	\N	\N	book_covers/IMG_3815.webp	100	идеальный план::лиз томфорд	2025-10-29 06:34:28.11162+00
11	Чуть свет, с собакою вдвоем	В высшую лигу современной литературы Кейт Аткинсон попала с первой же попытки: ее дебютный роман «Музей моих тайн» получил престижную Уитбредовскую премию, обойдя «Прощальный вздох мавра» Салмана Рушди, а цикл романов о частном детективе Джексоне Броуди, успевший полюбиться и российскому читателю («Преступления прошлого», «Поворот к лучшему», «Ждать ли добрых вестей?», «Чуть свет, с собакою вдвоем», «Большое небо»), Стивен Кинг окрестил «главным детективным проектом десятилетия». Суммарный тираж цикла превысил три миллиона экземпляров, а на основе первых его книг телеканал Би-би-си выпустил сериал «Преступления прошлого» с Джексоном Айзексом в главной роли. После всех приключений в Кембридже и Эдинбурге Броуди возвращается в свой родной Йоркшир. Удалившийся, казалось бы, на покой частный детектив пытается выследить обчистившую его банковский счет липовую жену и отзывается, сам того не желая, на внезапное письмо из Новой Зеландии: «Меня удочерили, и я бы хотела спросить: вы не могли бы что-нибудь выяснить о моих биологических родителях?» Но сказать оказывается легче, чем сделать: ни в каких архивах родители Надин Макмастер не значатся, как и сам факт удочерения. «История потерянного и обретенного ребенка диковинным образом отражается и преломляется в историях других потерянных детей и — неожиданным образом — в истории собаки» (Галина Юзефович, «Итоги»). Двое отставных полицейских ведут каждый свое расследование в одном пространстве, до поры до времени не соприкасаясь, и за каждым — свое прошлое, свой шлейф исторических и культурных реалий. «Когда же в эту экзистенциальную сумятицу вмешивается главная детективная интрига, читатель испытывает настоящий восторг от того, с каким мастерством Аткинсон превращает причудливый танец случайностей в строгий детективный пасьянс» (Time Out).	Джексон Броуди	4	18+	Русский	\N	book_covers/metadata_d10b6ca8c9e882ee.jpg	11	чуть свет, с собакою вдвоем::аткинсон кейт	2025-10-24 13:10:36.285602+00
28	Рога	Финалист Премии Брэма Стокера.\r\n\r\nФиналист премии «Локус».\r\n\r\nФиналист премии Гудридс.\r\n\r\n\r\nИг Перриш провел ночь напиваясь. А утром проснулся не только с тяжелым похмельем и головной болью… но и с парой рогов на голове. А вместе с ними и удивительной способностью заставлять людей признаваться в самых постыдных вещах.\r\n\r\nКогда-то праведный Иг наслаждался жизнью — рожденный в привилегированном положении, сын известного музыканта и брат восходящей звезды телевидения, он рос в безопасности, богатстве и имея свое место в обществе. У Ига было все, и даже больше — у него была Меррин и любовь.\r\n\r\nНо смерть девушки разрушила все. Несмотря на то что Иг был единственным подозреваемым в преступлении, его так и не привлекли к суду, ведь богатые и влиятельные родители смогли замять это дело. Но люди не сомневаются в его причастности к преступлению, что бы ни говорил Перриш и как бы ни желал мести настоящему убийце. Кажется, что все, включая Бога, оказались против него. Все, кроме дьявола внутри…	\N	\N	18+	Русский	\N	book_covers/cover1__w820.jpg	28	рога::джо хилл	2025-10-25 12:50:11.690477+00
12	Слуга смерти	Уорд Хопкинс, бывший агент ЦРУ, в погоне за «соломенными людьми» застает среди лесистых каньонов в окрестностях городка Якима, штат Вашингтон, жуткую по жестокости картину: тело мужчины, привязанное к металлическому шесту таким образом, что кажется, он шагает к определенному месту. Далее обнаруживается еще один труп, а невдалеке от него — хижина, полная мертвых тел. Уорд понимает, что время пассивных действий прошло и настала пора перейти к активным поискам тайного дирижера всей этой кровавой симфонии...	Соломенные люди	2	18+	Русский	\N	book_covers/metadata_11a3845bf3955255.jpg	12	слуга смерти::маршалл смит м.	2025-10-24 13:13:30.790052+00
33	Невидимки	Роман «Невидимки» американского писателя Чака Паланика впервые был опубликован в 1999 году. Весь сюжет крутится вокруг трех главных героев, путешествующих по Северной Америке.\r\n\r\nШеннон Макфарленд – бывшая топ-модель. Ее невероятную карьеру перечеркнул роковой случай, когда выстрелом из винтовки ей изуродовали пол-лица. Теперь она невидимка, постоянно прячущая внешность под вуалью. Вместе со своим бывшим Манусом и красавицей-незнакомкой Брэнди она занимается мошенничеством. Жизнь катится по наклонной, вот только Шеннон не торопится с ней проститься – она еще не отомстила обидчикам…	\N	\N	18+	Русский	\N	book_covers/JPEG_20251025_182439_8532639384670956918.jpg	33	невидимки::чак паланик	2025-10-25 15:24:46.415073+00
13	Полет аистов	Луи Антиош, молодой ученый-философ, получает странное предложение от известного швейцарского орнитолога Бема: проследить путь миграции аистов и попытаться выяснить, почему несколько сотен окольцованных птиц не вернулись в Европу	\N	\N	18+	Русский	\N	book_covers/IMG_3795.jpeg	13	полет аистов::жан-кристоф гранже	2025-10-24 13:52:40.251526+00
41	Эта книга будет удалена		\N	\N	\N	\N	\N		41	эта книга будет удалена::ольга кузнецова	2025-10-27 11:56:21.606596+00
14	Пигмей		\N	\N	\N	Русский	\N	book_covers/metadata_a06c821897f94411.jpg	14	пигмей::чак паланик	2025-10-24 16:07:55.635353+00
16	Собор Парижской Богоматери	Виктор Гюго — создатель романтической драмы, великолепный писатель, чьи произведения до сих пор увлекают читателей во всем мире. Романы Гюго отмечены богатством творческого воображения, сюжеты их обычно сложны, развязки эффектны, чувства героев сильны и трагичны. Обращаясь к национальной истории, автор создает убедительные картины прошлого и яркие, запоминающиеся характеры.\r\nОсобенно это касается самого известного романа Виктора Гюго – «Собор Парижской Богоматери». Невозможно забыть гордую цыганку Эсмеральду, уродливого звонаря собора Нотр-Дам Квазимодо, блистательного и жестокосердного красавца Феба, терзаемого ревностью священника Фролло. Как невозможно забыть и Французское средневековье, воссозданное в романе с поразительной силой воображения!\r\n В настоящем издании текст сопровождается иллюстрациями французских художников XIX века.	\N	\N	\N	Русский	\N	book_covers/metadata_274c84995e329eef.jpg	16	собор парижской богоматери::виктор гюго	2025-10-24 16:41:48.048198+00
51	Парадокс Атласа	Но это лишь начало пути.\r\n\r\nПришло время узнать, что на самом деле представляет собой Александрийское общество и что за необузданная сила за ним стоит. Пришло время укреплять альянсы, предавать и забирать жизни.\r\n\r\nИгра на выживание началась. И за ней стоит тот, кто способен изменить саму реальность. Кто уже начал это делать.	Бестселлеры Оливи Блейк. Шестерка Атласа	\N	18+	\N	\N	book_covers/7722544874.webp	51	парадокс атласа::оливи блэйк	2025-10-28 05:36:14.753386+00
17	Царь горы	Книга для тех, кому интересно не просто жить, но искать в заурядных вещах необычное и завораживающее, кому интересно фантазировать и творить и кто еще не разучился удивляться	Тайный город	12	16+	Русский	\N	book_covers/metadata_9132d9757e6f401a.jpg	17	царь горы::вадим юрьевич панов	2025-10-24 16:49:08.935598+00
29	Командор войны	Человечество - отнюдь не единственная разумная раса на нашей планете. Потомки давно исчезнувших цивилизаций и сейчас обитают в магическом Тайном Городе, многие тысячи лет существующем на территории Москвы и скрытом от глаз людей защитными чарами	Тайный город	2	18+	Русский	\N	book_covers/metadata_1caa256efbc5f3f7.jpg	29	командор войны::вадим юрьевич панов	2025-10-25 12:56:28.564471+00
74	Аир. Хозяин болота	"Не ходите к болоту! – учила старая бабка Иву с братьями сызмальства. – Утащит Хозяин – век не сыщем!"\r\n\r\nСтрашна любовь господина болот! Но за нелюбимого замуж – куда страшнее.\r\n\r\nИве казалось, она с жизнью прощалась, когда шла в запретную чащу и молила Хозяина болота о помощи. Одного не ждала – что страшная сказка оживет, а Хозяин отзовется и примет жертву.\r\n\r\nСтала девица невестой чудовища, стали волосы ее зелены, а всякая нечисть – верным слугой. Страшна любовь господина болот! Но та беда, что принес он в деревню, куда страшнее.\r\n\r\n"Я приду за тобой, дорогая невеста. Приду. И тогда помоги вам всем боги".\r\n\r\n"Аир. Хозяин болота" затягивает напевным, самобытным слогом автора и увлекает в мир, где живут невидимые глазу смертных духи и нечисть, где старые сказки становятся явью и оборачиваются кошмаром.	#trendbooks_magic	\N	18+	\N	\N	book_covers/7129899449.webp	74	аир. хозяин болота::даха тараторина	2025-10-28 09:12:56.729781+00
111	Покорение дворца Янси. Том 1. Пут служанки	В эпоху тайных заговоров династии Цин Вэй Инло решает вступить в Запретный Город, чтобы разгадать загадку смерти своей сестры.\r\n\r\nВ мире интриг и опасности она обнаруживает, что любовь и предательство переплетаются в самых неожиданных местах.\r\n\r\n"Покорение дворца Яньси" – это история о риске, любви и тайнах, где каждое решение может стать роковым.	Гаремы китайских императоров	\N	16+	Русский	\N	book_covers/101334674_0_1.jpg	110	покорение дворца янси. том 1. пут служанки::чжоу м.	2025-10-29 07:03:07.81936+00
19	Войны начинают неудачники	Порой войны начинаются буднично. Среди белого дня из машин, припаркованных на обыкновенной московской улице, выскакивают мужчины и, никого не стесняясь, открывают шквальный огонь из автоматов. И целятся они при этом в группку каких-то невзрачных коротышек в красных банданах, только что отоварившихся в ближайшем «Макдоналдсе». Разумеется, тут же начинается паника, прохожие кидаются врассыпную, а один из них вдруг переворачивает столик уличного кафе и укрывается за ним, прижимая к груди свой рюкзачок.И правильно делает.Ведь в отличие от большинства обывателей Артем хорошо знает, что за всем этим последует. Одна из причин начинающейся войны как раз лежит в его рюкзаке. Единственное, чего не знает Артем, – что в Тайном Городе войны начинают неудачники, но заканчивают их герои.Пока не знает...	Тайный город	1	16+	Русский	\N	book_covers/metadata_ba4a43c328504684.jpg	19	войны начинают неудачники::вадим панов	2025-10-24 16:54:17.263244+00
30	Атака по правилам	Кровавое побоище в ночном клубе, устроенное прелестной стриптизершей, неожиданно превратившейся в устрашающего монстра, стало лишь одним из эпизодов чудовищного заговора против обитателей Тайного Города. Последние представители древних рас, предки которых правили Землей тысячи веков назад, вовсе не были заинтересованы в конфронтации с людьми. Слишком свежи в их памяти костры Инквизиции.Судьбы магов и колдунов, загадка библиотеки Ивана Грозного, возведение и снос Сухаревой башни, невероятные происшествия на улицах сегодняшней Москвы – все это причудливо переплелось в коварной интриге, порожденной желанием одной-единственной ведьмы обмануть Время...	Тайный город	3	18+	Русский	\N	book_covers/metadata_3ea635d22cf3b963.jpg	30	атака по правилам::вадим юрьевич панов	2025-10-25 12:58:29.715402+00
34	Наложницы ненависти	Усеченная пирамида в центре кровавой площади содрогнулась. Тот, кто уже много десятилетий был заключен в стеклянном саркофаге, рвался на свободу. Но площадь – древняя зона контакта с Преисподней – была перекрыта могущественными обитателями Тайного Города. Последние представители давно исчезнувших цивилизаций здесь, в центре Москвы, в бою с иерархами ада спасали не только себя, но и нынешнее человечество от Великого Господина, воплотившего в себе всю ненависть этого мира...	Тайный город	6	18+	Русский	\N	book_covers/metadata_85795ea495b9723f.jpg	34	наложницы ненависти::вадим панов	2025-10-25 16:08:13.114618+00
35	Пока город спит: страшные "сказки"	Когда город засыпает, скамейки, где днём звучал детский смех, пустеют, и даже самый знакомый парк становится чужим. Но самые страшные истории рождаются не там, где кто-то прячется в кустах, а там, где делают вид, что не видят чужой беды.\r\nЭтот сборник — не о чудовищах под кроватью. Здесь страшное всегда рядом: в тихих двора и парках, в том, что мы учимся не замечать.\r\nЭто страшные сказки — для тех, кто знает цену свету, потому что видел тьму.\r\nВедь самая тёмная тень — та, которую бросает человек.	\N	\N	18+	Русский	\N	book_covers/Обложка_сказки_5l7gQCF.jpg	35	пока город спит: страшные "сказки"::тар алексин	2025-10-25 16:43:42.545625+00
20	Демон скучающий	Персональная выставка Абедалониума — известного на весь мир художника, тщательно хранящего своё инкогнито, должна была стать культурным событием года для Санкт-Петербурга и всей России. А стала культурным кошмаром, когда неожиданно выяснилось, что на одном из полотен мастера изображён исчезнувший восемь лет назад ребёнок. Разразившийся скандал запустил круговорот событий, в центре которого оказался «Демон скучающий» — самая знаменитая работа художника, картина-проклятие, все владельцы которой умерли насильственной смертью. Картина, которую боятся выставлять все музеи планеты.\r\nКак связан «Демон скучающий» с серией преступлений, произошедших в Санкт-Петербурге теперь и много лет назад? На этот вопрос предстоит ответить майору Феликсу Вербину, явившемуся в Северную столицу по следу одного московского убийцы…	Феликс Вербин	4	18+	Русский	\N	book_covers/metadata_ef106cb4c3ac09f1.jpg	20	демон скучающий::вадим панов	2025-10-24 16:57:34.138782+00
75	Держись от него подальше	Костров... Скорее всего, она меня просто использует, чтобы избавиться от своего недалекого бывшего. Она позлит его и испарится. Между нами все несерьезно. Мне не нужно ей верить, но очень хочется. Лискина...\r\n\r\nПарень из дома напротив не выходит из моей головы. Мы противоположности и поэтому притягиваемся, как магниты. Я утверждаю, что он мне нравится. А он утверждает, что я ему нет. Кто-то из нас точно лжет.	#trendbooks summer	\N	18+	\N	\N	book_covers/7524815728.webp	75	держись от него подальше::ксюша левина	2025-10-28 09:14:29.515567+00
21	Девочка с куклами	"Февральский День всех влюблённых ознаменовался ужасным происшествием: в запертой квартире была обнаружена мёртвая девушка по имени Виктория Рыкова. Её смерть вряд ли бы привлекла внимание, если не поразительные обстоятельства -- Виктория полулежала на кровати, одетая в воздушное белое платье и окружённая шестью нарядными куклами. Всё говорило о том, что несчастная покончила с собой, и это подтверждал дневник Вики, где она подробно описала день, час и обстоятельства своей будущей смерти. Следствие склонялось к версии самоубийства, но майор Феликс Вербин имел другое мнение. Он считал, что у девушки не было причин добровольно расстаться с жизнью, к тому же из-за страшных видений Вика избегала кукол, так откуда же взялись те, которые сидели вокруг нее на смертном ложе? Кто их купил? За что надо было убивать красивую молодую девушку? Кому могла насолить юная студенточка? Что же на самом деле произошло в ее квартире в День святого Валентина?На все эти вопросы взялся ответить старший оперуполномоченный майор Вербин -- человек, обладающий особым даром задавать нужным людям нужные вопросы..." --	Феликс Вербин	2	18+	Русский	\N	book_covers/metadata_5fbee453deb4d976.jpg	21	девочка с куклами::вадим панов	2025-10-24 17:08:13.486145+00
86	Четвертое крыло	Двадцатилетняя Вайолет Сорренгейл готовилась стать писцом и спокойно жить среди книг и пыльных документов. Но ее мать – прославленный генерал, и она не потерпит слабости ни в каком виде. Поэтому Вайолет вынуждена присоединиться к сотням молодых людей, стремящихся стать элитой Наварры – всадниками на драконах. Однако из военной академии Басгиат есть только два выхода: окончить ее или умереть. Смерть ходит по пятам за каждым кадетом, потому что драконы не выбирают слабаков. Они их сжигают. Сами кадеты тоже будут убивать, чтобы повысить свои шансы на успех. Некоторые готовы прикончить Вайолет только за то, что она дочь своей матери. Например, Ксейден Риорсон – сильный и безжалостный командир крыла в квадранте всадников.Тем временем война, которую ведет Наварра, становится все более тяжелой, и совсем скоро Вайолет придется вступить в бой.Книга содержит нецензурную лексику.	\N	\N	16+	Русский	\N	book_covers/metadata_6d03c1425122240b.jpg	85	четвертое крыло::ребекка яррос	2025-10-28 19:49:54.216989+00
23	Кто-то просит прощения	На пустынном берегу Байкала находят умершего от сердечного приступа рыбака. Ситуация кажется очевидной — смерть по естественным причинам, однако у Феликса Вербина возникают сомнения и он берётся за расследование дела, которого нет, чтобы узнать о старой экспедиции к загадочному мысу Рытому, все участники которой считаются умершими, и о том, как она связана со страшными событиями в современном Иркутске.\r\n\r\nБайкал древнее, священное море… На его берегах легенды сплетаются с реальностью и становятся частью повседневности, наполняя жизнь необъяснимым. Одни пытаются исследовать загадки Байкала с научной точки зрения, другие — верят в их мистическую суть. Кто-то старается держаться от необычного подальше, а для кого-то обращение к Тайне становится последним шансом на спасение. Но у всего на свете есть цена и иногда она оказывается непомерно высокой.	Феликс Вербин	2	18+	Русский	\N	book_covers/IMG_3802.jpeg	23	кто-то просит прощения::вадим панов	2025-10-24 17:20:54.776145+00
31	Все оттенки черного	Это не было наваждением. Ослепительная красавица, завершая свой танец, действительно впилась в горло юного партнера. И отрезанная голова ребенка, вылетевшая на сцену из зрительской ложи, тоже не была бутафорией. «Только дьявол разрешит тебе все» – похоже, девиз «Заведения Мрака» не обманывал.Но владельцы ночного клуба не знали, какие могущественные силы выступят против них. Обитатели Тайного Города, последние представители давно исчезнувших с лица Земли цивилизаций, никогда не примирились бы с такой грязной конкуренцией. К тому же в их памяти еще свежи были воспоминания о страшных временах Инквизиции...	Тайный город	4	18+	Русский	\N	book_covers/metadata_524ad9403651b080.jpg	31	все оттенки черного::вадим панов	2025-10-25 13:00:49.914618+00
52	Предатель в красном	Во вселенной Эфилениум живут не только люди, но и эфилеаны: ночнорожденные существа, оборотни, ведьмы и стихийники, способные управлять ветром, восполнять реки, создавать огонь и взращивать леса. Они – хранители мира, что поддерживают природный баланс на Земле и не позволяют планете умереть.\r\n\r\nЭлен – последний эфилеан огня, случайно выживший после трагедии, в которой загадочным образом был уничтожен весь ее подвид. Отвергнутая и заклейменная "отродьем", Элен отправляется на поиски белого города в надежде отыскать дом, где никто ее не осудит за то, кто она есть.\r\n\r\nДве реликвии, изменившие мир две тысячи лет назад, по воле разгневанного Бога снова должны оказаться в эфилеанских руках. Кому-то предстоит предать себя и облачиться в красный цвет. Однако Элен – не единственная, кто может коснуться ужасающих реликвий и потерять все.\r\n\r\nТак кто же станет предателем? И что, если реликвии, от которых содрогнулся мир в прошлом, могут спасти его в будущем?	Young Adult. Эфилениум	\N	18+	\N	\N	book_covers/7235188090.webp	52	предатель в красном::эш хейсс	2025-10-28 05:38:19.900005+00
56	Принц запретов	1926 год. Время гламура, богатства и запретов. Время, когда за вечной праздничной атмосферой и звуками джаза скрывались мрачные, зловещие и совсем не человеческие тайны...\r\n\r\nАделина Колтон была проклята с детства. Каждый месяц она видела сны... о темном принце в мрачном лесу. Ночные видения продолжили преследовать повзрослевшую Аделину. Но ее настоящим наваждением стал Джек Уоррен. Миллионер, гангстер и опасный контрабандист.\r\n\r\nОн открыл для нее мир роскоши, любви и свободы. Стал для нее олицетворением всего самого запретного, а потому и желанного. Вопреки воле семьи Аделина готова последовать за Джеком в тьму. Но что, если он не человек, не зверь, и даже не дьявол, а существо гораздо, гораздо более опасное?	Trendbooks magic	\N	18+	\N	\N	book_covers/101396048_0.jpg	56	принц запретов::мэрилин маркс	2025-10-28 07:43:10.643892+00
36	Куколка Последней Надежды	Маги сокрытого от непосвященных Тайного Города, основанного на берегах Москвы-реки потомками древних властителей Земли, могли многое. Почти все. И тем удивительнее, что Куколка Последней Надежды, обманывающая саму смерть, была создана вовсе не ими, а Целителями, принадлежащими к человеческой расе. Великие Дома Тайного Города давно наложили запрет на использование Куколок – ведь спасти кого-либо можно было лишь ценой чужой жизни. Но что значит любой запрет для того, чьим смыслом жизни стала месть? И тот, кто много лет боролся со смертью, сам решается на убийство...	Тайный город	7	18+	Русский	\N	book_covers/metadata_2ee6e619766b5bd7.jpg	36	куколка последней надежды::вадим панов	2025-10-25 17:50:17.296824+00
102	Неуловимая подача	"Она любит убегать, и последнее, чего она хочет, – чтобы ее поймали."\r\n\r\nКай – звездный питчер и отец-одиночка, который никак не может подобрать няню. Тренер решает эту проблему своеобразным методом: нанимает свою дочь Миллер присматривать за сыном Кая, и уж от этой няни чемпион не может так просто отказаться.\r\n\r\nОсобенно учитывая, что Миллер и не няня вовсе. Она – шеф-кондитер ресторанов Мишлен. Получив высшую награду в своей отрасли, Миллер не справилась с давлением, взяла отпуск и… Теперь она в Чикаго нянчит малыша, единственная девушка среди мужской команды бейсбольного клуба.\r\n\r\nДля нее это всего лишь перевалочный пункт и повод побыть вместе с отцом, Кай же доверяет ей самое важное в своей жизни. Сумеют ли они оба найти идеальный баланс?	Cupcake. Хиты Лиз Томфорд	\N	\N	18+	\N	book_covers/7348114268.webp	101	неуловимая подача::лиз томфорд	2025-10-29 06:41:02.564645+00
53	Песок	В мире, занесенном слоем песка толщиной в сотни метров, самая востребованная профессия – дайверы. Это люди, которые с помощью специального снаряжения погружаются в песчаные глубины, добывая оттуда реликты старой цивилизации – предмет жестокой борьбы между соперничающими бандитскими группировками. Одна из преступных групп нанимает Палмера и его сестру Викторию, дайверов с большим опытом, для того, чтобы они спустились на глубину, где, по сведениям их нанимателей, прячется под песком Данвар, город-мечта всех дайверов. Брату и сестре невдомек, что цель преступников-террористов – не легендарный город, а хранилище с ядерными боезапасами, расположенное в окрестностях Данвара. И задумали они ни много ни мало – новый атомный апокалипсис...	The Big Book	\N	16+	\N	\N	book_covers/7184006660.webp	53	песок::хью хауи	2025-10-28 05:41:50.919125+00
76	Троллий пик	Люди не исчезают из самолетов – это невозможно. Так думала и шестнадцатилетняя Грейс, пока ее мать не пропала, когда летела домой.\r\n\r\nУ Грейс нет ни отца, ни братьев, ни сестер. Но неожиданно появляется Вивиан, сестра матери, готовая взять девочку к себе. Вот только почему она живет в уединенном доме в лесу и никогда не приглашает гостей? Зачем на окнах железные решетки, в гардеробной гора красных туфель и куда тетка исчезает по ночам?\r\n\r\nЗапертые двери, которые нужно открыть. Таинственные создания, которых предстоит встретить. Волшебные загадки, которые придется решить...\r\n\r\nГрейс готова на все, чтобы найти мать. Но готова ли она узнать правду о своей семье?	Young Adult. Книжный бунт. Фантастика	\N	16+	\N	\N	book_covers/6007830761.webp	76	троллий пик::уна харт	2025-10-28 09:16:46.908385+00
38	Скиталец.Лживые предания	Три сотни лет минуло со Дня Чёрного Солнца, но мир так и не стал прежним. Нечисть бродит по земле: русалки, волколаки, черти, лешие — все они чудовища, бывшие когда-то людьми. А чтоб обернуться одним из них, достаточно поддаться своим порокам и самым тёмным желаниям. Скиталец — проклятый, убивающий себе подобных. С бедой обращается к нему простой люд, а богатеи сулят деньги за исполнение своих желаний. Искушают людей предания о чудесах, но знает Скиталец — не все они правдивы. Так что помни, путник, какие бы истории ни рассказывали тебе: о папоротнике на Купалью ночь, исцеляющем пере жар-птицы или красавице арысь-поле из степных земель — предания о них могут быть очень лживы.	Страшные сказки со всего света.Реттелинги	\N	18+	Русский	\N	book_covers/JPEG_20251026_164231_84708765446175590.jpg	38	скиталец.лживые предания::анастасия князь	2025-10-26 15:42:52.339419+00
46	Пламя и кровь. Пляска смерти	История расцвета и мощи династии Таргариенов, длиною в 300 лет. Гражданская война на драконах, кровосмешение и хитроумные интриги.\r\nУзнайте же, как пала Валирия, как была построена Королевская Гавань и выкован Железный Трон, как сходили с ума в борьбе за власть лучшие из Таргариенов, и что бывает, если один дракон решил погубить другого, рискуя испепелить весь континент.\r\nМанускрипты из-под пера архимейстера не отличить от басен и легенд. Ведь славные битвы и жестокие междоусобицы слишком величественны, чтобы оказаться правдой. Или всё так и было на самом деле?..	Мастера фэнтези	\N	16+	\N	\N	book_covers/6558314572.webp	46	пламя и кровь. пляска смерти::джордж мартин	2025-10-28 05:10:54.06116+00
47	Мистер Буги, или Хэлло, дорогая	В штате Нью-Джерси ходят леденящие душу легенды о Мистере Буги – маньяке, который на протяжении шестнадцати лет совершает массовые убийства в канун Хэллоуина.\r\n\r\nЗа неделю до праздника двадцатилетняя Конни Мун решает организовать вечеринку для друзей в доме покойной бабушки. Чтобы получить дубликат ключа, она связывается с двоюродным дядей – Хэлом Оуэном… не подозревая, что именно он держит в страхе побережье.\r\n\r\nУзнав о планах племянницы, Хэл решает нанести ей визит в разгар вечеринки. Однако впервые за много лет он чувствует, что убить девушку будет нет так-то просто…	Коллекция странных дел	\N	18+	\N	\N	book_covers/7872671038.webp	47	мистер буги, или хэлло, дорогая::саша хеллмейстер	2025-10-28 05:19:36.862944+00
54	Через пески	Старый мир погребен под песками. Те, кому удалось выжить, или нашли пристанище в бесплодной колорадской пустыне, среди постоянно перемещающихся дюн, или поселились в небольшом полудиком городе, в буквальном смысле построенном на песке. Особо отчаянные пустынножители пересекают Ничейную землю, чтобы попытать счастья во враждебной чужой империи, но, кроме рабской работы на рудниках и постоянной угрозы смерти, им там ничего не светит. Палмер и его сестра Лилия, оба профессиональные драйверы, наняты одной из местных преступных групп для поисков под слоями песка древних бункеров с ядерными боеголовками. Им пока еще невдомек, что этими своими находками они вскоре поставят под угрозу не только собственное существование, но и будущее окружающего их мира...	The Big Book	\N	16+	\N	\N	book_covers/7055918031.webp	54	через пески::хью хауи	2025-10-28 07:36:18.242401+00
39	Почтальонша	Дебютный роман молодой итальянской писательницы Франчески Джанноне, ставший литературной сенсацией в Италии — раскуплено уже более 580 000 экземпляров, а права на издание проданы 37 странам.\r\nРоман основан на истории прабабушки автора, в нем рассказывается о жизни Анны — молодой женщины с севера Италии, в 1934 году переехавшей вместе с семьей на юг страны, на родину мужа. Став первой женщиной-почтальоном в Лиццанелло, Анна бросает вызов патриархальным устоям общества. Более 20 лет, сначала пешком, а затем на велосипеде, она доставляет жителям важную корреспонденцию — это и письма солдат с фронта, и открытки от тех, кто навсегда покинул Италию, и послания тайных любовников. Анна читает письма неграмотным и даже учит их читать и писать. Сама того не замечая, смелая «чужачка» с севера многое изменит в южном городке и серьезно повлияет на положение женщин в нем.	\N	\N	18+	Русский	\N	book_covers/JPEG_20251026_235328_6086120671374706866.jpg	39	почтальонша::джанноне франческа	2025-10-26 22:54:10.253936+00
77	Серпентарий	Пташка\r\n\r\nНура уверена, что ее сестра не могла погибнуть случайно. Но когда полиция бездействует, приходится самой идти по следу убийцы. А он ведет прямиком в серпентарий – преступный мир столицы, в котором переплетены искушение и тайны, и нельзя доверять ни одному змею. Особенно тому, кто следит из тьмы…\r\n\r\nЗмей\r\n\r\nТайна, которую он так долго хранил, под угрозой. Чтобы защититься, нужно найти информацию, спрятанную одной назойливой девчонкой. Та убита, но к ценным документам может привести ее сестра. Однако план рушится, когда Нура оказывается чудесной пташкой, которой змей хочет обладать. Он должен использовать ее, но искушение поддаться порочным желаниям оказывается сильнее…	Young Adult. Темный мир Шарана. Вселенная Ирены Мадир	\N	18+	\N	\N	book_covers/101421369_0.jpg	77	серпентарий::ирена мадир	2025-10-28 09:19:18.759922+00
103	Обманный бросок	Исайя влюбился в Кеннеди с первого взгляда, но и представить не мог, что после пьяной ночи проснется с ней, врачом своей команды, в одной постели, подписав брачный договор. Такое утро могло быть самым счастливым в его жизни, если бы не одно но: контракт с бейсбольным клубом, запрещающий случайные связи и все, что может подмочить репутацию команды. Теперь обоим грозит увольнение… если только их чувство не окажется настоящим, а брак – подлинным. Хотя бы до конца сезона.\r\n\r\nСумеет ли Кеннеди полюбить Исайю, или все вернется на круги своя?	Cupcake. Хиты Лиз Томфорд	\N	18+	\N	\N	book_covers/7892453989.webp	102	обманный бросок::лиз томфорд	2025-10-29 06:42:23.287602+00
112	Покорение дворка Янси. Том 2. Работнйй дом	Вэй Инло отправляют в работный дом, где она обретает неожиданного союзника в лице евнуха. Тем временем, чтобы спасти Вэй Инло, ее возлюбленный вынужден жениться на другой. Но истины и тайны, сокрытые в глубинах Запретного Города, могут изменить все.\r\n\r\nВэй Инло предстоит вновь погрузиться в пучину дворцовых интриг, чтобы спасти себя и тех, кто ей дорог. "Покорение дворца Яньси" – это история о риске, любви и тайнах, где каждое решение может стать роковым.	Гаремы китайских императоров	\N	16+	Русский	\N	book_covers/101361081_0.jpg	111	покорение дворка янси. том 2. работнйй дом::чжоу мо	2025-10-29 07:03:29.909226+00
42	Гостья	Землю поработили инопланетяне.\r\n\r\nБесплотные создания, именующие себя Душами, проникают в мозг человека, изгоняя его разум. Лишь немногие способны сопротивляться невидимым захватчикам, и юная Мелани Страйдер – из их числа. Девушка упорно отказывается умирать, а ее решимость поддерживает любовь к Джареду – находчивому молодому человеку, которому удалось скрыться от пришельцев.\r\n\r\nЧтобы сломить сопротивление Мелани, а также выведать местонахождение уцелевших, в тело девушки подселяют Странницу – сильную и храбрую Душу, побывавшую уже на множестве планет. Однако яркие воспоминания Мелани, ее бунтарский характер и искренние чувства к Джареду вызывают у Странницы не испытанные прежде эмоции – и вот уже она пытается помочь Мелани сбежать и добраться до других выживших.\r\n\r\nНо что, если незваная гостья ведет двойную игру?	Стефани Майер: Возвращение	\N	16+	Русский	\N	book_covers/101415193_0.jpg	42	гостья::стефани майер	2025-10-27 12:21:36.375658+00
43	Купеческий сын и живые мертвецы	Лето 1872 года. Невиданное бедствие обрушивается на тихий уездный городок: мертвые начинают восставать из могил. Ходячие мертвецы готовы заживо сожрать всякого, кто встанет у них на пути. Но их появление в городе — не случайность. Воевать с нежитью и доискиваться, кто вызвал ее нашествие, выпадает девятнадцатилетнему Ивану: прямодушному и неискушенному в жизни купеческому сыну. Восстание живых мертвецов как-то связано с загадочной смертью его предка — купца-миллионщика Алтынова. И теперь молодой наследник алтыновского дела должен будет распрощаться с ролью Иванушки-дурачка, которую он всегда играл. Иначе ему не выжить и не спасти тех, кого он любит…	Нечисть уездной России	1	16+	Русский	\N	book_covers/JPEG_20251027_215021_7370088974199929466.jpg	43	купеческий сын и живые мертвецы::алла белолипецкая	2025-10-27 20:50:28.474865+00
113	Покорение дворца Яньси. Том 3. Хозяйка дворца	Чтобы докопаться до правды и наказать всех виновных в смерти своей прошлой госпожи, Вэй Инло становится хозяйкой дворца Яньси и любимицей императора.\r\n\r\nДвор – опасное место, и девушке предстоит использовать всю свою смекалку, чтобы справедливость наконец восторжествовала.\r\n\r\n"Покорение дворца Яньси" – это история о риске, любви и тайнах, где каждое решение может стать роковым.	Гаремы китайских императоров	\N	16+	Русский	\N	book_covers/101378069_0.jpg	112	покорение дворца яньси. том 3. хозяйка дворца::чжоу м.	2025-10-29 07:03:47.972244+00
44	Голландский дом	«Новый роман американской писательницы Энн Пэтчетт напоминает сказку братьев Гримм, разросшуюся до масштабов семейного эпоса. История главных героев, Дэнни Конроя и его сестры Мэйв, охватывает всю вторую половину ХХ века, а их судьбы оказываются роковым образом переплетены с Голландским домом--особняком на востоке Пенсильвании, когда-то принадлежавшим разорившейся династии нидерландских магнатов Ванхубейков. Сам по себе Голландский дом не населен призраками, но каждый, кто переступает его порог, в каком-то смысле становится призраком дома--куда бы он потом ни отправился, где бы впоследствии ни жил, повсюду носит с собой этот образ. У Дэнни и Мэйв только это и есть: безвременно ушедший из жизни отец, давным-давно превратившаяся в воспоминание мать, будто бы вышедшая из ночного кошмара мачеха и зловещий фамильный особняк. А также взрослая жизнь, которая все никак не начнется: проклятие детства, печать сиротства, невозможность разорвать однажды сформировавшиеся узы. «Голландский дом»--история о победе любви над злом. Победе, замешенной на потерях и во многом неочевидной, потому что в конечном счете читателю предстоит разобраться самому, на чьей он стороне и был ли здесь злодей. И если был--то кто?»--Title page verso.	\N	\N	\N	Русский	\N	book_covers/metadata_7066af424f875b7a.jpg	44	голландский дом::анн патчетт	2025-10-27 22:30:56.655681+00
55	Электрические киты	Лёне по прозвищу Леннон девятнадцать лет – идеальное время, чтобы отправиться в безумное путешествие с любимой девушкой.\r\n\r\nПриключения Леннона начинаются с провала экзамена на инязе и новости о смерти отца. Считая себя неудачником, Леннон решает свести счеты с жизнью. Но случайно найденные детские рисунки, на которых изображены киты, и странная записка меняют его планы. А еще Леннон влюбился. Дерзкая Лана зовет его поучаствовать в запрещенных мотогонках на мифическом острове: она будет фотографировать, а Леннон – писать репортаж.\r\n\r\nНо кое-что мешает Леннону насладиться поездкой: в детстве он попал в автокатастрофу и ничего не помнит о том, что было с ним до шести лет, а единственное его воспоминание об аварии – песня "Любовь, похожая на сон", которая в тот момент звучала из автомагнитолы. Теперь у Леннона панические атаки. А еще ему необходимо разобраться с несколькими слепыми пятнами собственного прошлого и обязательно увидеть китов у Гебридских островов.\r\n\r\nЭта история взросления похожа на безумное роуд-муви, где герои ищут смысл жизни в голливудском кино, дают концерты, играя на воображаемых гитарах, участвуют в нелегальных мотогонках и едут через весь континент, чтобы обрести себя.\r\n\r\nАлександр Касаверде родился в Москве в 1982 году. Поступил в институт иностранных языков, проходил практику в Испании и Великобритании. Защитил диссертацию по теории литературы. Несколько лет прожил в Индии, где изучал традиции буддизма и философию веданты. Вернувшись на родину, работал учителем, журналистом, режиссером, автором научно-популярных фильмов. В настоящее время живет на окраине столицы, пишет романы и создает образовательные программы для творческих людей.	Азбука. Голоса	\N	18+	\N	\N	book_covers/7768644248.webp	55	электрические киты::александр касаверде	2025-10-28 07:41:18.778027+00
45	Пламя и кровь. Кровь драконов	Тирион Ланнистер еще не стал заложником жестокого рока, Бран Старк еще не сделался калекой, а голова его отца Неда Старка еще не скатилась с эшафота. Ни один человек в Королевствах не смеет даже предположить, что Дейенерис Таргариен когда-нибудь назовут Матерью Драконов. Вестерос не привел к покорности соседние государства, и Железный Трон, который, согласно поговорке, ковался в крови и пламени, далеко еще не насытился. Древняя, как сам мир, история сходит со страниц ветхих манускриптов, и только мы, септоны, можем отделить правдивые события от жалких басен, и истину от клеветнических наветов.\r\nПрисядьте же поближе к огню, добрые слушатели, и вы узнаете:\r\n-как Королевская Гавань стала столицей столиц;\r\n-как свершались славные подвиги, неподвластные воображению, \r\n-и как братья и сестры, отцы и матери теряли разум в кровавой борьбе за власть;\r\n- как драконье племя постепенно уступало место драконам в человеческом обличье;\r\n- а также и многие другие были и старины – смешные и невыразимо ужасные, бряцающие железом доспехов и играющие на песельных дудках, наполняющее наши сердца гордостью и печалью...	Мастера фантазии	\N	18+	\N	\N	book_covers/6862411821.webp	45	пламя и кровь. кровь драконов::джордж мартин	2025-10-28 05:05:21.69015+00
58	Бандит Ноубл Солт	Что будет, если украсть сердце у самого известного бандита Америки?  \r\n\r\nБутч Кэссиди – самый известный преступник Америки, легенда Дикого Запада. За его голову назначена высокая награда, и, чтобы выжить, он должен стать другим человеком. \r\n\r\nОдна случайная встреча с юной певицей Джейн Туссейнт, и его судьба решена. Теперь у него новое имя, Ноубл Солт, и новая мечта – любовь прекрасной незнакомки. \r\n\r\nКазалось, их судьбы не могли быть более разными. Время бандитов прошло, а перед Джейн только открываются все двери. Но что, если оба они заложники темных секретов прошлого, обоим грозит смертельная опасность, а ценой их жизни будет любовь?	Романы Эми Хармон	\N	18+	\N	\N	book_covers/7512968068.webp	58	бандит ноубл солт::эми хармон	2025-10-28 07:47:50.453959+00
60	Парадокс Севера	"Парадокс Севера" – это история любви, противостояния сложных характеров и выбора, которые каждый день делают герои. Быть страстным и обжигать холодом...\r\nТрость, черная карточка и холодный блеск серых глаз. В академии Севера знают все. Его боятся, его хотят, ему поклоняются.\r\nФехтование – ее страсть. Диана учится в академии благодаря своему таланту. Но ей здесь не место.\r\nЧто связывает Севера и бедную девочку с окраин? У любви и ненависти нет правил, как и у шрамов прошлого нет срока давности. У них на двоих одна боль и одна страсть.	Trendbooks. Романы Виктории Побединской (подарочные)	\N	18+	\N	\N	book_covers/101428157_0.jpg	60	парадокс севера::виктория побединская	2025-10-28 08:13:56.578523+00
57	Этюд багровых вод	Эффи Сэйр всегда верила в сказки. С детства её преследуют сны о Короле фейри. Потрёпанный томик "Ангарад" – роман Эмриса Мирддина о смертной девушке, которая влюбляется в Короля фейри, а затем губит его, – единственное, что придаёт ей сил во время учёбы в престижном архитектурном колледже.\r\n\r\nКогда сын Мирддина объявляет конкурс на перепланировку поместья покойного отца, Эффи уверена: это судьба.\r\n\r\nНо ветхое поместье Хирайт таит много секретов, а его обитатели отнюдь не гостеприимны. Там же Эффи встречает дерзкого молодого литературоведа Престона, который жаждет доказать, что Эмрис Мирддин – мошенник. Пока два соперника узнают о наследии Мирддина всё больше, тёмные силы не дремлют.\r\n\r\nИ когда Эффи с Престоном откроют всю правду, багровые воды захлестнут их...	New Adult. Фейри. Жестокие и прекрасные	\N	16+	\N	\N	book_covers/6906315849.webp	57	этюд багровых вод::ава райд	2025-10-28 07:44:44.446983+00
78	Аконит	Меня прозвали Аконит. Именно этот ядовитый цветок я оставляю как дар для тех, кто умер под лезвием моего ножа, и как послание тем, кто еще падет от моей руки. Вся столица Королевства шепчется, пробуя на вкус яд страха, а полиция ищет того, кто не оставляет улик – меня.\r\n\r\nКорнелия Нортвуд жаждет знать обо мне все, раскрыть мою личность и подтвердить собственные догадки, чтобы сделать карьеру журналистки. Я – билет к исполнению ее желаний. И я хочу только ее, мою Рубиновую даму, мою богиню. Не могу отвести взгляд от Коры и желаю быть к ней как можно ближе. Эта потребность постоянна, а моя зависимость опасна...\r\n\r\n"Скажи, Кора, ты все еще любишь меня?".	Young Adult. Темный мир Шарана. Вселенная Ирены Мадир	\N	18+	\N	\N	book_covers/7303221501.webp	78	аконит::ирена мадир	2025-10-28 09:25:26.203252+00
87	Радуга тяготения	Томас Пинчон — наряду с Сэлинджером, «великий американский затворник», один из крупнейших писателей мировой литературы XX, а теперь и XXI века, после первых же публикаций единодушно признанный классиком уровня Набокова, Джойса и Борхеса. Его «Радуга тяготения» — это главный послевоенный роман мировой литературы, вобравший в себя вторую половину XX века так же, как джойсовский «Улисс» вобрал первую. Это грандиозный постмодернистский эпос и едкая сатира, это помноженная на фарс трагедия и радикальнейшее антивоенное высказывание, это контркультурная библия и взрывчатая смесь иронии с конспирологией; это, наконец, уникальный читательский опыт и сюрреалистический травелог через преисподнюю нашего коллективного прошлого. Без «Радуги тяготения» не было бы ни «Маятника Фуко» Умберто Эко, ни всего киберпанка вместе взятого, да и сам пейзаж современной литературы был бы совершенно иным. Вот уже почти полвека в этой книге что ни день то открывают новые смыслы, но единственное правильное прочтение так и остается, к счастью, недостижимым. Получившая главную американскую литературную награду — Национальную книжную премию США, номинированная на десяток других престижных премий и своим радикализмом вызвавшая лавину отставок почтенных жюри, «Радуга тяготения» остается вне оценочной шкалы и вне времени.\r\nПеревод публикуется в новой редакции.	\N	\N	18+	Русский	\N	book_covers/metadata_3993681a9426f102.jpg	86	радуга тяготения::томас пинчон	2025-10-28 19:55:19.32367+00
104	Лови момент	Он старше тебя. Он опытнее тебя. И он безумно вкусно готовит. Пальчики оближешь!\r\n\r\nСейдж живет в прибрежном городке Спунс. Она обожает свою ферму и твердо знает: животные никогда не предадут, в отличие от ее парня, который сделал предложение... другой! Сейдж срочно нужна перезагрузка, и ежегодный городской фестиваль – идеальная возможность проявить себя и снова почувствовать вкус жизни.\r\n\r\nФишер приехал в Спунс из Нью-Йорка, где работал в лучшем ресторане города, но был уволен за драку с кулинарным критиком. Если за лето он откроет ресторан на новом месте, его примут обратно.\r\n\r\nСейдж предлагает помочь Фишеру с местными властями, а он взамен должен составить ей компанию на фестивале. Историческая викторина, кулинарный конкурс, гонка на каноэ – только вдвоем можно одержать победу. Главное – не потерять голову от любви.	Cupcake	\N	\N	18+	\N	book_covers/7075992635.webp	103	лови момент::девитт тара	2025-10-29 06:47:49.452882+00
59	Жизнь по обмену	"Жизнь по обмену" – история, наполненная путешествиями, долгими разговорами и ароматом кофе.\r\n\r\nХолли – популярный блогер, она снимает ролики о создании уюта. Окружающим кажется, что она идеальна, но за маской скрывается душевная боль. Паскаль снимает видео о жизни в минимализме. Все уверены, что он любит спокойствие, но в его сердце бушуют страсти.\r\n\r\nОба делают вид, что счастливы, хотя на самом деле одиноки. Они противоположности, которым предстоит поменяться жизнями на четыре недели.\r\n\r\nСмогут ли милые переписки, фотографии, разговоры по душам и аромат кофе сделать их ближе? Получится ли у Паскаля разнести по кирпичику стены, которые Холли возвела вокруг своего сердца?\r\n\r\nЧетыре недели, чтобы начать новую жизнь... Четыре недели, чтобы влюбиться...	#trendbooks	\N	18+	\N	\N	book_covers/6820945246.webp	59	жизнь по обмену::леопольд ким	2025-10-28 07:50:32.583917+00
61	Эпоха крови и пурпурных слёз	Вон Мирэ – успешная оценщица произведений культурного наследия в крупнейшем аукционном доме Сеула. У нее всего одна цель – подняться по должности выше. Однажды ей выпадает шанс добиться желаемого, но все в одночасье меняется из-за случайного столкновения с незнакомцем в традиционном ханбоке.\r\n\r\nВсего одна встреча подводит жизнь Мирэ к смертельной угрозе.\r\n\r\nВ обыденность врываются злые духи и покушения. В стремлении выжить и добиться поставленной цели Вон Мирэ идет на страшный риск, чтобы вернуть утерянный артефакт аукционному дому, становится жертвой преследования и попадает в жуткую череду событий.\r\n\r\nКак противостоять развернувшемуся кошмару и удержать крошечный огонек счастья, цена которого – душа Мирэ?	Mainstream. Мистический триллер	\N	18+	\N	\N	book_covers/7584485425.webp	61	эпоха крови и пурпурных слёз::эдди кан	2025-10-28 08:21:50.806679+00
62	Репликант-13	В постапокалиптическом мире, в гигантской пустыне под радиоактивным небом, продолжается жизнь – и где-то там, на свалке, спрятаны смертельные секреты. Однако Ив не до чужих тайн – у нее свои заботы. Робот-гладиатор, над которым она работала полгода, случайно уничтожен; последние сбережения потеряны, к тому же Ив узнает, что у нее есть враги и они уже заказали гроб ее размера...\r\n\r\nХудшего дня у девушки, кажется, не было. Но нежданно обретенный друг меняет все в ее жизни: в компании робота, собачки-киборга и лучшей подруги они вместе рассекают пустыню, гоняясь за тайнами, которые нужно выведать, чтобы выжить.	Миры Джея Кристоффа	\N	16+	\N	\N	book_covers/10833142_0.jpg	62	репликант-13::джей кристофф	2025-10-28 08:26:02.059395+00
79	Фантом	Они зовут меня Фантом. \r\n Я неуловимый призрак, который прячется в тенях, чтобы облегчить чужие карманы от тяжести золотых монет. Многие жаждут разгадать тайну моей личности, и даже Хэлла — иллюстратор в местной газетенке — мечтает сорвать с меня маску. \r\n Но жителям города стоит беспокоиться не о богатствах — тени улиц скрывают личность куда более опасную. Пока я граблю, таинственный Глиф убивает лордов, оставляя на их телах загадочные символы. Глиф мой друг или враг? Никто не знает, даже инспектор полиции Максимилиан Уорд. Он охотится на нас двоих, не понимая, что я единственный шанс на спасение столицы…\r\n Я — обличитель тайн и монстр, который нужен, чтобы победить еще более страшное зло. Но если вы хотите моей помощи, меня придется хотя бы догнать…\r\n «Игра началась. Поймайте меня, если сможете».	Young Adult. Темный мир Шарана. Вселенная Ирены Мадир	\N	18+	\N	\N	book_covers/8171993943.webp	79	фантом::ирена мадир	2025-10-28 09:28:54.896347+00
105	Всё сложно	Она – начинающий стендапер. Он – профессиональный комик.\r\n\r\nШутки кончились. Им нужно изображать влюбленных. Короче, все сложно.\r\n\r\nФарли – новичок в мире стендапа, но уже подает большие надежды. Она обожает свое дело, но не все так просто. Фарли по уши влюблена в собственного красавчика-менеджера Майера, который ни о чем не догадывается.\r\n\r\nОднажды звезды стендапа приглашают Фарли принять участие в большом гастрольном туре, но есть одно условие: чтобы привлечь внимание прессы, Фарли нужно найти фиктивного бойфренда, и Майер – идеальный вариант.\r\n\r\nЧем закончится эта авантюрная идея, которая очень скоро начинает казаться Фарли и Майеру чем угодно, но только не шуткой?	Cupcake	\N	18+	\N	\N	book_covers/6876788542.webp	104	всё сложно::девитт тара	2025-10-29 06:48:15.86715+00
88	Зов Ктулху	Американский писатель Говард Филлипс Лавкрафт при жизни не опубликовал ни одной книги, печатаясь только в журналах. Признание пришло к нему спустя десятилетия после смерти. Лавкрафта называют основателем литературы «сверхъестественного ужаса», «литературным Коперником» и «Эдгаром По ХХ века». Фигура писателя окружена покровом домыслов, мифов и загадок.	\N	\N	16+	Русский	\N	book_covers/metadata_1a0e62c2bc433b87.jpg	87	зов ктулху::говард лавкрафт	2025-10-28 20:28:35.784126+00
94	Стиратели. Исчезнуть без следа	Стирание – древняя техника, пришедшая из черной магии.\r\n\r\nВ наши дни уже мало кто в такое верит – и уж точно не следователь О Чэдо, ведущий дело об исчезновении девушки Со Хаюн. Опытный полицейский знает, что "стирателями" прикидываются обыкновенные шарлатаны, желающие набить себе цену. Разве под силу им по-настоящему "стереть" человека из мира? Да и кому нужны эти детские сказки, если Кан Чхиу, молодой человек, с которым Со Хаюн рассталась за полгода до своего исчезновения, явно увиливает от ответов. Конечно, он популярный писатель и умеет красиво говорить, только что-то не очень он расстроен ее исчезновением.\r\n\r\nНайдет ли следователь девушку, если в этом странном деле все не то, чем кажется? И может, иногда, в очень редких случаях, детские сказки не врут...	Хиты корейской волны	\N	16+	\N	\N	book_covers/101306101_0.jpg	93	стиратели. исчезнуть без следа::чунхёк ким	2025-10-29 06:02:51.256968+00
63	Пандора	Лондон, 1799 год. Дора Блейк, начинающая художница-ювелир, живет со своей ручной сорокой в лавке древностей. Ныне место принадлежит ее дяде и находится в упадке, но в былые времена магазинчик родителей Доры был очень известным благодаря широкому ассортименту подлинных произведений искусства. Появление пифоса – загадочной древнегреческой вазы – и скрываемые им секреты меняют жизнь девушки: она видит шанс вернуть магазин и избавиться от гнета дяди. Однако заинтересованных в пифосе оказывается слишком много: кто-то благодаря ему может проложить дорогу в академическое будущее, другой – потешить самолюбие, а третий – сполна удовлетворить жажду денег. Что за тайны скрывает древняя находка и какой ключ способен их открыть?	Novel. Мировые хиты	\N	16+	\N	\N	book_covers/6640504753.webp	63	пандора::сьюзен стокс-чепмен	2025-10-28 08:30:52.179442+00
64	Тысяча шагов в ночь	В королевстве Авара, где боги, демоны и смертные существуют бок о бок, жила девушка по имени Миуко, которая давно смирилась с ничем не примечательными буднями дочери трактирщика.\r\n\r\nВ день, когда ее губы слились в горько-сладком поцелуе с демоном, на Миуко обрушилось проклятие и она стала изгоем. Постепенно девушка и сама начинает превращаться в демона, чье прикосновение убивает все живое. Теперь у нее только один путь: отправиться на поиски противоядия, чтобы вернуть себе прежний вид. С помощью очаровательного юноши в обличье сороки и загадочного принца демонов Миуко должна перехитрить врагов, скрыться от охотников и встретиться с Лунными богами.\r\n\r\nНо, возможно, остаться никому не подвластным демоном для Миуко единственный шанс на спасение?	Young Adult. Азиатское магическое фэнтези	\N	18+	\N	\N	book_covers/6717028554.webp	64	тысяча шагов в ночь::трейси чи	2025-10-28 08:34:56.626181+00
106	Отпуск на двоих	Два лучших друга. Десять совместных поездок летом. Последний шанс влюбиться.\r\n\r\nПоппи и Алекс. У них нет ничего общего: она – эмоциональная и непредсказуемая, он – сдержанный и любящий все планировать. У нее – страсть к путешествиям, он предпочитает оставаться дома с книгой.\r\n\r\nНо несмотря на непохожесть, каждое лето после окончания колледжа они проводили вместе. До той самой ссоры. Но неугомонная Поппи не собирается сдаваться и решает убедить своего бывшего лучшего друга снова съездить в отпуск вместе. Хватит ли ей недели, чтобы полностью изменить их жизнь?	Подарок судьбы	\N	18+	Русский	\N	book_covers/101138889_0.jpg	105	отпуск на двоих::эмили генри	2025-10-29 06:50:17.765862+00
114	Вечный сон	Гренландия, 1800 год. В суровых, занесенных снегом землях живут девушка Анэ и её отец-шаман.\r\nОднажды ночью они проводят очередной ритуал, но из тьмы вырываются древние силы, и Анэ переносится в двухтысячный год.\r\n\r\nВместо привычных хижин она видит большой незнакомый поселок. Новый мир кажется ей кошмаром – из клубящейся бури появляются существа, уничтожающие все на своем пути.\r\n\r\nАнэ нужно выжить и найти способ вернуться, но главное – узнать страшные тайны своего отца и разгадать секрет ритуала, что перенес ее в будущее.	Страшные сказки со всего света. Ретеллинги	\N	16+	\N	\N	book_covers/7062615157.webp	113	вечный сон::анастасия вайолет	2025-10-29 07:06:26.802772+00
117	Канашибари. Пока не погаснет последний фонарь. Том 2	Этот город окружают сто синих фонарей. В этом городе нельзя ни есть, ни пить, а без оберега тебя разорвут на части ночные монстры. В этом городе существует одно правило: пока ты выигрываешь – ты жив. Добро пожаловать в мир оживших кайданов – японских историй ужасов! Сражайся за свою жизнь каждый день. Выбирай, кто из игроков поневоле погибнет сегодня.\r\n\r\nИ помни: самое страшное произойдет, когда погаснет последний фонарь!	Канашибари	\N	16+	Русский	\N	book_covers/101351633_0.jpg	116	канашибари. пока не погаснет последний фонарь. том 2::ангелина шэн::вероника шэн	2025-10-29 07:35:20.214699+00
65	Drama Queens, или Переполох на школьном балу	Когда‑то Тейлор, Пенни и Кэтрин были подругами. Все изменила сгоревшая в Новый год елка и омела под потолком в доме Люка Уилсона.\r\n\r\nС тех пор прошло шесть лет. Пенни все так же влюблена в друга детства без надежды на взаимность. Ведь он звезда баскетбола, а она всего лишь заурядная девушка, поющая в хоре. Тейлор готовится стать королевой бала. Но, чтобы получить школьную корону, ей нужно найти спутника на вечер. Кэт занимается организацией школьного бала и воспитанием обаятельного хулигана, который норовит украсть ее сердце и превратить праздник в новогоднее безумие.\r\n\r\nКогда часы пробьют полночь, кому достанется корона, поцелуй и сердце красавчика?	#trendbooks	\N	18+	\N	\N	book_covers/6844356150.webp	65	drama queens, или переполох на школьном балу::виктория побединская::дана делон::ксюша левина	2025-10-28 08:37:38.998366+00
80	Принц Эрик. История любви и проклятия	Новый взгляд на знакомую историю, новые тайны и проклятия, магия, любовь, приключения и ещё больше русалок! А ещё та часть отношений русалочки и принца, что не была показана в детском мультфильме. Всё это ждёт вас в новой книге "Принц Эрик". История любви и проклятия. Добро пожаловать назад в волшебный мир Disney, который стал гораздо глубже и опаснее!\r\n\r\nПринц Эрик прожил всю жизнь под грузом невообразимой ноши – магического проклятия. Если он поцелует не ту девушку, что предначертана ему судьбой, он... умрёт. Его мать королева погибла, но оставила после себя подсказки, как найти ту, кто наложил на него страшные чары. А вот как найти свою вторую половину, она сыну не подсказала. Свадьбу нужно сыграть до коронации, но как сделать выбор, когда на кону – твоя жизнь? Что, если он ошибётся?\r\n\r\nВсё изменил внезапно налетевший шторм. Корабль Эрика разбился, однако его спасла таинственная незнакомка с чудесным голосом. Как найти её? Как понять, что она – действительно та самая? И что делать, если сердце, кажется, уже стремится к другой?	Уолт Дисней. Нерасcказанные истории	\N	18+	\N	\N	book_covers/101206396_0.jpg	80	принц эрик. история любви и проклятия::линси миллер	2025-10-28 09:30:50.426826+00
89	Имя мне — Красный	Четырем мастерам персидской миниатюры поручено проиллюстрировать тайную книгу для султана, дабы имя его и деяния обрели бессмертие и славу в веках. Однако по городу ходят слухи, что книга противоречит законам мусульманского мира, что сделана она по принципам венецианских безбожников и неосторожный свидетель, осмелившийся взглянуть на запретные страницы, неминуемо ослепнет. После жестокого убийства одного из художников становится ясно, что продолжать работу над заказом султана — смертельно опасно, а личность убийцы можно установить, лишь внимательно всмотревшись в замысловатые линии загадочного рисунка.	\N	\N	18+	Русский	\N	book_covers/metadata_7ce9b13ed92acf9b.jpg	88	имя мне — красный::орхан памук	2025-10-28 20:29:52.777159+00
91	Место встречи изменить нельзя	Роман классиков советского детектива братьев Вайнеров об оперативных сотрудниках Московского уголовного розыска (МУРа) и их борьбе с уголовными элементами в особом представлении не нуждается. Эта легендарная книга (1975) стала событием в жизни писателей, а снятый по ней телефильм (1979) обрел всенародную любовь.\r\nУспех был обеспечен не только прекрасным актерским составом и талантливой режиссурой, но и литературной основой. Как говорил о романе Владимир Высоцкий, незабываемо воплотивший на экране образ капитана Жеглова, это не просто детектив, а настоящая литература со своей драматургией: «Там две психологии сталкиваются — любопытно, и оторваться нельзя».\r\nДинамичный сюжет, правдиво переданная атмосфера послевоенной Москвы и колоритные персонажи, реплики которых пополнили словари крылатых выражений… А тема этического противостояния Жеглова и Шарапова, таких непохожих друг на друга напарников-соперников, не утратила актуальности и сегодня.	\N	\N	16+	Русский	\N	book_covers/metadata_16ef04404a65aa2d.jpg	90	место встречи изменить нельзя::аркадий вайнер::георгий вайнер	2025-10-28 20:33:59.798888+00
66	Drama Kings, или Короли неприятностей	Обаятельный спортсмен, одаренный химик и бунтарь-ловелас. Они – короли неприятностей частной школы "Алтиор". Нарушители правил, поджигатели сердец и беда школьной администрации.\r\nИх дружба – Римская империя, которую ничего не смогло бы разрушить. Ничего, кроме новенькой Энджел Бэлл.\r\nДурацкий спор, нелепая шалость. И вот отношения трещат под натиском новых чувств и старых обид. Теперь они соперники в игре за сердце девушки-ангела.\r\nИскры летят, часы вот-вот пробьют полночь, и разгорится настоящий пожар. В этом пожаре рискует сгореть не только вся школа "Алтиор", но и сердца главных поджигателей.	#trendbooks	\N	18+	\N	\N	book_covers/7201796456.webp	66	drama kings, или короли неприятностей::виктория побединская::дана делон::ксюша левина	2025-10-28 08:39:32.823974+00
107	Говори. Графический роман	Мелинда Сордино учится в старшей школе. У нее нет друзей, и она — изгой, потому что в конце прошлого учебного года позвонила в полицию и сорвала школьную вечеринку. Теперь никто не хочет не только общаться с Мелиндой, но и слушать ее. Долгое время она молчит о том, что произошло на самом деле. Однако благодаря работе над творческим проектом Мелинда находит в себе силы признать: ее изнасиловал старшеклассник, который до сих пор учится в ее школе.	\N	\N	18+	Русский	\N	book_covers/7884173255.webp	106	говори. графический роман::лори холс андерсон::эмили кэрролл	2025-10-29 06:53:39.982056+00
81	Вальс деревьев и неба	Русские читатели познакомились с этим автором, когда Ж.-М. Генассия опубликовал свою первую книгу «Клуб неисправимых оптимистов», которой французские лицеисты присудили свою Гонкуровскую премию. За Клубом последовали «Удивительная жизнь Эрнесто Че» и «Обмани-Смерть», укрепившие его репутацию великолепного рассказчика. Роман «Вальс деревьев и неба» посвящен последним дням жизни Винсента Ван Гога, когда были созданы потрясающие, взрывающие пространство и сознание картины. Что на самом деле произошло жарким летом в Овере? Действительно ли художник - «широкоплечий цветущий мужчина с улыбкой на лице» (так описывает его жена Тео Ван Гога Йоханна) покончил с собой? Жан-Мишель Генассия дает свою версию событий, где легкой тенью скользит застенчивая девятнадцатилетняя девушка по имени Маргарита.	\N	\N	16+	Русский	\N	book_covers/018f5d02-81da-7d21-960d-02b3875472d8.jpg	81	вальс деревьев и неба::жан-мишель генассия	2025-10-28 13:04:19.004047+00
90	Человек, который смеется	В этом романе есть все: атмосфера тайны, великолепные страницы, посвященные английской истории, кораблекрушение, ребенок, странный документ	\N	\N	16+	Русский	\N	book_covers/metadata_105626081aeca530.jpg	89	человек, который смеется::виктор гюго	2025-10-28 20:31:48.69478+00
92	Последние дни шахского Ирана		\N	\N	18+	Русский	\N	book_covers/JPEG_20251028_223943_3619515499384312493.jpg	91	последние дни шахского ирана::михаил крутихин	2025-10-28 21:39:49.347243+00
67	Группа поддержки для выживших девушек	Последние девушки – свидетельницы массовых убийств, которым повезло остаться в живых, убив своего монстра. Худшая ночь в их жизни заканчивается, но что происходит с ними потом?\r\n\r\nЛиннетт Таркингтон регулярно посещает группу психологической поддержки для выживших девушек. Приходит ужасная новость – убита одна из группы. События развиваются стремительно, и Линнетт понимает, что кто-то целенаправленно охотится за последними девушками. Она оказывается под перекрестным огнем – ей не верят, ее обвиняют. А монстр совсем рядом, в ночи, его нож жаждет крови.	Хозяева тьмы	\N	16+	\N	\N	book_covers/6416939491.webp	67	группа поддержки для выживших девушек::грейди хендрикс	2025-10-28 08:43:27.235257+00
82	Адские тени	Адель – теневой призрак, она способна становиться неосязаемой и прятаться во мраке. Девушка живет в каждой тени, в каждом темном переулке, везде, где тьма противостоит свету.\r\n\r\nИз-за своих способностей Адель вынуждена работать в тайном отряде королевы. Ее отправляют расследовать череду убийств, главными жертвами которых являются куртизанки. Прибыв в крупный портовый город, находящийся во власти таинственного лорда Кайлана Ле Селье, Адель вынуждена прикинуться одной из них и очутиться в самом сердце греха.\r\n\r\nНо что, если убийства девушек не случайность? А мрачный лорд, от пронзительного взгляда которого леденеет кровь, скрывает куда больше ужасающих секретов?..	Freedom. Инферно. Дарк фэнтези Алисы Джукич	\N	18+	Русский	\N	book_covers/101365697_0.jpg	82	адские тени::алиса джукич	2025-10-28 13:15:37.582783+00
96	Во главе кошмаров	За один вечер Кассия лишилась дома, выбора и прошлой жизни. Теперь ее место в Палагеде. И пока глава Дома Раздора просит помощи, другие шесть архонтов видят в ней досадную помеху, которая в состоянии разрушить их планы на обретение желанного могущества.\r\n\r\nОдновременно с этим Микель оказывается втянут в гущу политических событий, где пытается склонить царей к перемирию между мирами и разобраться, насколько реально пророчество сивилл о гибели всей Даории от рук Кассии.	Охотники за мирами. Бестселлеры Лии Арден	\N	18+	\N	\N	book_covers/7232272403.webp	95	во главе кошмаров::лия арден	2025-10-29 06:15:40.521924+00
119	Канашибари. Пока не погаснет последний фонарь. Том 4	Погас последний фонарь.\r\nНо надежда еще горит.\r\nТы выбрался из мира канашибари, но ёкаи прорвались вслед за тобой. Бежать некуда. Просить помощи бесполезно.\r\nОстался лишь один шанс – сыграть с демоном синего фонаря в последнюю игру.\r\nПоставь на кон свою жизнь. Снова.\r\nИ помни: тьма не вечна, даже КОГДА ПОГАС ПОСЛЕДНИЙ ФОНАРЬ.	Канашибари	\N	16+	Русский	\N	book_covers/101405263_0.jpg	118	канашибари. пока не погаснет последний фонарь. том 4::ангелина шэн::вероника шэн	2025-10-29 07:35:37.130779+00
68	Крапива	Тяжела жизнь проклятой девки! Отца и мать не обнять, братишек молодших не прижать к груди – всех жжет кожа Крапивы, как трава сорная.\r\nДа не всякому указ воля богов. Княжичу Власу вот дела нет, что за хворь у деревенской ведьмы. За то и поплатился нестерпимой болью. \r\nСын Мертвых земель воин Шатай богов да вождя привык слушать. Но как быть, если вождь приказывает одно, а сердце велит другое?\r\nВот и стало у девицы целых два защитника, грызутся, как коты степные, а от своего не отступятся. \r\nКого милым назвать, если оба несут погибель маленькой деревне на границе двух царствий? Деревеньке, что домом зовется.	#trendbooks_magic	\N	18+	\N	\N	book_covers/7453482760.webp	68	крапива::даха тараторина	2025-10-28 08:52:41.658221+00
69	Одержимость Беллы Холл	После ужасных событий Белла Холл уезжает в маленький, никому не нужный Лэйквуд, отстающий во времени от бурных девяностых. Живописные пейзажи кажутся слишком спокойными, а местные жители чересчур закрытыми. Но Белле это и нужно.\r\n\r\nОна находит недорогую комнату для аренды в газете, но, приехав на место, застает молодого хозяина, Тома Уорда, который предлагает ей пожить у него в самом настоящем особняке. С этого момента Белла начинает слышать настойчивый женский шепот, а тени внутри коридоров огромного имения кажутся слишком плотными. Вскоре полиция обнаруживает на берегу озера труп девушки. Основным подозреваемым становится Том.\r\n\r\nНачинается игра, на кон в которой поставлена жизнь Беллы. И таинственный шепот все настойчивее повторяет: "Беги!".	Young Adult. Тайны и кофе. Истории Алены Тимофеевой	\N	18+	\N	\N	book_covers/101365713_0.jpg	69	одержимость беллы холл::алена тимофеева	2025-10-28 08:56:07.902184+00
83	Адское пламя	Единственный, кто мог спасти Адель, предал ее. Девушку пленили в аду и насильно выдали замуж за Повелителя Смерти, но даже это не венец всего, что уготовила ей судьба.\r\n\r\nНад Абраксом сгущаются тучи, демоны проникают в королевство, стремясь обернуть его новым чистилищем, и, чтобы противостоять угрозе, Адель необходимо вернуться в мир людей, отыскать правду о своем рождении, принять новую силу, а главное, воссоединиться с тем, кто разбил ей сердце. Сможет ли она бросить вызов самому Люциферу, сделать выбор между двумя сломленными прошлым мужчинами и вновь научиться любить?	Freedom. Инферно. Дарк фэнтези Алисы Джукич	\N	18+	\N	\N	book_covers/101418316_0.jpg	83	адское пламя::алиса джукич	2025-10-28 13:18:03.142637+00
93	Хоббит	Знаменитый роман Джона Р.Р. Толкина "Хоббит" впервые публикуется на русском языке с иллюстрациями самого автора и в совершенно новом переводе Владимира Баканова и Екатерины Доброхотовой-Майковой!\r\n\r\n"В земле была нора, а в норе жил хоббит". Эта нехитрая фраза послужила началом одного из самых грандиозных и известных литературных приключений XX века. Странствия хоббита Бильбо Бэггинса покорили сердца миллионов читателей по всему миру и послужили началом возникновения удивительной вселенной - Средиземья.\r\n\r\nПокой и уют достопочтенного мистера Бильбо Бэггинса оказывается резко нарушен в один прекрасный день, когда на его пороге появляются знаменитый волшебник Гэндальф и целый отряд гномов во главе с Торином Дубощитом, Благодаря Гэндальфу гномы уверены, что без Бильбо их благородное и чрезвычайно опасное начинание обречено на поражение. А ведь гномы вознамерились пересечь леса, горы, долины и озера, добраться до далекой Одинокой горы, победить засевшего там дракона Смауга и восстановить разрушенное гномское королевство Эребор.	\N	\N	\N	Русский	\N	book_covers/metadata_7b3451b67d52288f.jpg	92	хоббит::дж. р. р толкин	2025-10-29 01:05:41.639123+00
70	Как повесить ведьму	Роман "Как повесить ведьму" переносит нас в Салем – столицу колдовства и черной магии, которая окутана тайнами прошлого по сей день.\r\n\r\nУ рода Мэзеров дурная репутация в Салеме. Много веков назад из-за священника Коттона Мэзера в городе объявили охоту на ведьм. По обвинению в колдовстве казнили десятки людей. Их потомки до сих пор хранят память о мрачной трагедии.\r\n\r\nПоявление Саманты Мэзер, одной из проклятого рода, снова приносит смерти в Салем. Девушку преследуют несчастья. Ее ненавидят и сторонятся в школе, на нее косо смотрят на улице. Духи хотят, чтобы Саманта Мэзер убралась из Салема навсегда. Жители города мечтают ей отомстить.\r\n\r\nЗа каждым домом в городе таится мрачная легенда. Каждый камень помнит историю Салема. Неужели Салемский суд повторится сотни лет спустя?	#trendbooks thriller	\N	16+	\N	\N	book_covers/6429392473.webp	70	как повесить ведьму::адриана мэзер	2025-10-28 08:59:01.169146+00
108	Дикая Флетчер	Калла Флетчер была совсем маленькой, когда мать увезла ее с Аляски в цивилизованный мир Торонто. Изоляция и экстремальные температуры оказались невыносимы для жены пилота, привыкшей ко всем удобствам большого города. Теперь Калле двадцать шесть, и оставшийся на Аляске отец долгое время был для нее прошлым, о котором она боялась вспоминать. Но теперь настала пора проделать непростой путь к пограничному городку, где она когда-то родилась.\r\n\r\nПлохие погодные условия, комары, короткий световой день, заоблачные цены – вот с чем приходится мириться ради того, чтобы стать ближе к отцу. Компанию ей составляет Джона – тихий и гордый пилот, который сразу не принимает чужестранку, слишком нежную для жизни в экстремальных условиях. В отличие от Каллы Джона не может представить себя в любом другом месте на планете и ни за что не променяет снежные горы ни на что другое. Он ждет не дождется, когда капризная девчонка наконец оставит его в покое и отправится туда, где ей самое место.\r\n\r\nВозможно, Джона и прав, но Калле не терпится уложить его на лопатки. Проходит время, и она понимает, что привязалась к ворчливому пилоту. Теперь их связывает что-то вроде дружбы или даже нечто большее, в чем они оба не могут себе признаться. В конце концов, Калла же вернется в Торонто, а Джона останется на Аляске. Было бы глупо влюбиться в человека, с которым ты никогда не сможешь быть вместе. Ведь так?	LAV. Романтика	\N	18+	\N	\N	book_covers/6620525575.webp	107	дикая флетчер::к. такер	2025-10-29 06:56:49.547554+00
84	Под солнцем Тосканы	Тоскана – настоящий рай на земле, уникальное сочетание истории, культуры и традиций. В этот регион Италии хочется возвращаться снова и снова. Что и сделала Фрэнсис Мэйес. Не устояв перед соблазном купить фермерский дом в окрестностях Кортоны, она вырвалась из суеты Сан-Франциско и решила наслаждаться солнцем, ароматами фруктов и трав, изучать этрусские традиции, мечтать и постигать тонкости местной кухни. Прекрасный язык автора, обилие деталей, яркий колорит, сезонные рецепты – вместе с Мэйес ты будто отправляешься в путешествие по живописным уголкам сельской Италии, становишься сопричастной к классической архитектуре и заново открываешь себя.	Хюгге. Уютные книги о счастье	\N	16+	\N	\N	book_covers/7153338256.webp	84	под солнцем тосканы::фрэнсис мэйес	2025-10-28 13:27:11.024349+00
115	Искусственные ужасы	Режиссер находит таинственную пьесу без названия, поставив которую он разрушит привычный мир.\r\n\r\nВ это время Аня соглашается нарисовать портрет по старой черно-белой фотографии. Простая девушка, которая недавно потеряла родителей и у которой не складываются отношения с парнем... Аня и не подозревает, что ее втянули в смертельную игру.\r\n\r\nСкоро Ане и ее друзьям придется спасать не только себя, но и весь мир, ведь зловещий некто только и ждет, когда его портрет нарисуют, а пьеса без названия соберет зрителей.\r\n\r\nГрядет возрождение древнего Зла, и лишь обычным смертным по силам его остановить... если они осмелятся взглянуть в лицо истинному ужасу.	Mainstream. Мистический триллер	\N	18+	\N	\N	book_covers/7161312471.webp	114	искусственные ужасы::борис хантаев::ольга кочешева	2025-10-29 07:27:59.71667+00
95	Во главе раздора	Первая книга трилогии городского фэнтези с авторским мироустройством, с опорой на древнегреческую мифологию богов первого поколения.\r\n\r\n"Во главе раздора" – новый виток творчества Лии Арден. Больше свободы в истории, больше решимости в героях, больше дерзости в тексте. И детальная проработка всех нюансов, где каждая мелочь играет роль, – сильная сторона Лии.\r\n\r\nСуперпопулярный цикл "Смерть и Тень", рассказывающий о Марах и Мороках, завоевал любовь у сотен тысяч читателей, а суммарные тиражи всех книг уверенно приближаются к миллиону экземпляров.\r\n\r\nГреческая мифология и неон мрачных улиц, дружба и предательство, отважные герои и мерзкие чудовища, тайны прошлого – и, конечно, любовь!	Охотники за мирами. Бестселлеры Лии Арден	\N	18+	\N	\N	book_covers/7232272420.webp	94	во главе раздора::лия арден	2025-10-29 06:13:28.396911+00
109	Дикая сердцем	Калла Флетчер возвращается в Торонто другим человеком и изо всех сил пытается жить дальше, но не может выбросить из головы сурового пилота, покорившего ее сердце. И когда Джона появляется на ее пороге, она с энтузиазмом бросается назад на Аляску, в их захватывающее совместное будущее.\r\n\r\nПроходит не так много времени, когда Калла понимает: возможно, за этот компромисс придется заплатить высокую цену. Жизнь в темной непроходимой глуши, Джона, которого вечно нет дома, соседи, один из которых хочет превратить ее в настоящую жительницу Аляски, а второй – скорее застрелит сам, чем придет на помощь... Все это – лишь часть испытаний на пути к счастью.\r\n\r\nНе похоже на то будущее, которого хотела Калла, и это заставляет задуматься: что, если она все же обречена пойти по стопам матери?..	LAV. Романтика	\N	18+	\N	\N	book_covers/7436665183.webp	108	дикая сердцем::к. такер	2025-10-29 06:58:23.42277+00
116	Канашибари. Пока не погаснет последний фонарь. Том 1	Этот город окружают сто синих фонарей. В этом городе нельзя ни есть, ни пить, а без оберега тебя разорвут на части ночные монстры. В этом городе существует одно правило: пока ты выигрываешь – ты жив. Добро пожаловать в мир оживших кайданов – японских историй ужасов! Сражайся за свою жизнь каждый день. Выбирай, кто из игроков поневоле погибнет сегодня.\r\n\r\nИ помни: самое страшное произойдет, когда погаснет последний фонарь!	Канашибари	\N	16+	Русский	\N	book_covers/101319874_0.jpg	115	канашибари. пока не погаснет последний фонарь. том 1::ангелина шэн::вероника шэн	2025-10-29 07:35:15.666618+00
118	Канашибари. Пока не погаснет последний фонарь. Том 3	Третья часть суперпопулярного азиатского фэнтези с элементами хоррора и мистики. В декорациях старых японских мифов идет сумасшедшая игра на выживание. От одного жестокого испытания к другому, от одного предательства к другому… Но что будет, когда кайданы закончатся и погаснет последний фонарь?\r\nВсе дни и ночи, что ты проводишь в городе оживших кошмаров, тебе внушают: играй по правилам – и останешься в живых.\r\nТебе врут.\r\nТы умрешь.\r\nВсе умрут, когда игра подойдет к концу.\r\nЕсть лишь один способ выжить – нарушить правила. Но чтобы исполнить свой безумный план и обыграть демонов, придется протянуть руку заклятым врагам и простить тех, кого простить невозможно.\r\nГотов ли ты поставить на кон свою жизнь? Ведь у тебя всего один шанс вырваться из этого мира, когда погаснет последний фонарь!	Канашибари	\N	16+	Русский	\N	book_covers/101405261_0.jpg	117	канашибари. пока не погаснет последний фонарь. том 3::ангелина шэн::вероника шэн	2025-10-29 07:35:30.327723+00
120	Риджийский гамбит. Дифференцировать тьму	Шахматный гений, хакер, геймер, ботан и очкарик – это Снежка. Она колючая и серьёзная, недоверчивая и мстительная. Она не верит в сказки, но попадает в одну из них. Только вместо прекрасного принца, магического дара и звания Избранной ей достаётся участь спутницы романтической героини и куклы колдуна. А ещё мир на грани войны, рабский ошейник, тюрьма жестоких Тёмных и совсем не светлые Светлые.\r\n\r\nСнежка вступает в главную игру своей жизни, где ставка – выживание и свобода. Но сможет ли она выиграть в этой партии, располагая лишь собственным интеллектом? Ведь когда всё вокруг оборачивается не тем, чем кажется, это круто меняет правила. Как и симпатия к игроку по ту сторону доски...	Охотники за мирами	\N	16+	\N	\N	book_covers/101213846_0.jpg	119	риджийский гамбит. дифференцировать тьму::евгения сафонова	2025-10-29 07:45:52.439746+00
121	Риджийский гамбит. Интегрировать свет	Шахматная партия между Тёмными и Светлыми продолжается. Семена зла, посеянные таинственным кукловодом много лет назад, проросли в настоящем. Ещё немного, и мир людей, дроу и эльфов будет сметён войной.\r\n\r\nУже не рабыня, но признанный ценный игрок, Снежка готова помериться силами с неведомым противником. Она лишена магии, но волшебной силой обладают её соратники. Только вот теперь Снежке приходится играть против человека, с которым они были близки, а отношения с придворным колдуном тёмных становятся всё сложнее...\r\n\r\nСможет ли правильно разыгранная партия изменить судьбу? Пришла пора проверить!	Охотники за мирами	\N	16+	\N	\N	book_covers/101252033_0.jpg	120	риджийский гамбит. интегрировать свет::евгения сафонова	2025-10-29 07:45:58.045765+00
122	Железное пламя	Все ожидали, что Вайолет Сорренгайл умрет на первом курсе Военного колледжа Басгиата – и Вайолет в том числе. Но молотьба была лишь первым невыполнимым испытанием, призванным отсеять слабовольных, недостойных и неудачливых.\r\n\r\nТеперь начинается настоящее обучение, и Вайолет уже задается вопросом, как она его пройдет. Дело не только в том, что тренировки изнурительны и злобно жестоки, и даже не в том, что они рассчитаны на то, что наездники не выдержат боли. Дело в новом вице-командующем, который поставил перед собой задачу научить Вайолет, насколько она беспомощна, если только не предаст любимого мужчину.\r\n\r\nХотя тело Вайолет, возможно, слабее и хрупче, чем у других, она по-прежнему обладает умом и железной волей. А руководство забывает о самом важном уроке, который преподал ей Басгиат: Всадники драконов устанавливают свои собственные правила.\r\n\r\nНо в этом году одной решимости выжить будет недостаточно.\r\n\r\nВедь Вайолет знает настоящий секрет, веками скрываемый в Военном колледже Басгиата, и ничто, даже огонь дракона, не спасет их в конце концов.	Эмпирей	\N	18+	Русский	\N	book_covers/101338263_0.jpg	121	железное пламя::ребекка яррос	2025-10-29 07:49:27.651734+00
123	Ониксовый шторм роман	Спустя полтора года после поступления в военную академию Басгиат у Вайолет Сорренгейл больше нет времени на учебу. И нет времени на сомнения. Идет война на два фронта – с врагами внешними и внутренними, и невозможно предугадать, кому можно довериться без риска для жизни.\r\n\r\nВ поисках союзников Вайолет отправляется далеко за пределы Наварры. И это путешествие испытает все ее мужество, ум и удачу. Ведь когда ты борешься за то, что дороже всего на свете, – своих драконов, свою семью, свой дом и своего мужчину – отступать некуда. Даже, если тайна, которую ты хранишь, может разрушить все.\r\n\r\nИм нужна армия. Им нужна сила. Им нужна магия. Им нужно то, что может найти только Вайолет, – правда. Но надвигается шторм... и не каждый сможет пережить его неистовый гнев.	Эмпирей	\N	18+	Русский	\N	book_covers/101380574_0.jpg	122	ониксовый шторм роман::ребекка яррос	2025-10-29 07:49:35.519376+00
\.


--
-- Data for Name: books_book_authors; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.books_book_authors (id, book_id, author_id) FROM stdin;
1	1	1
2	2	1
3	3	2
4	4	3
5	5	4
6	6	5
7	7	6
8	8	7
9	9	8
10	10	9
11	11	11
12	12	12
13	13	13
14	14	14
15	15	13
16	16	16
17	17	17
18	18	18
19	19	19
20	20	19
21	21	19
22	22	19
23	23	19
24	24	20
25	25	22
26	26	22
27	27	23
28	28	24
29	29	17
30	30	17
31	31	19
32	32	19
33	33	14
34	34	19
35	35	27
36	36	19
37	37	14
38	38	28
39	39	29
40	40	13
41	41	30
42	42	31
43	43	32
44	44	33
45	45	34
46	46	34
47	47	35
48	48	35
49	49	35
50	50	36
51	51	36
52	52	37
53	53	38
54	54	38
55	55	39
56	56	40
57	57	41
58	58	42
59	59	43
60	60	44
61	61	45
62	62	46
63	63	47
64	64	48
65	65	49
66	65	50
67	65	44
68	66	49
69	66	50
70	66	44
71	67	51
72	68	52
73	69	53
74	70	54
75	71	55
76	72	50
77	73	52
78	74	52
79	75	50
80	76	56
81	77	57
82	78	57
83	79	57
84	80	58
85	81	59
86	82	60
87	83	60
88	84	62
89	85	63
90	86	64
91	87	65
92	88	66
93	89	67
94	90	16
95	91	68
96	91	69
97	92	70
98	93	71
99	94	72
100	95	73
101	96	73
102	97	73
103	98	74
104	99	75
105	100	76
106	101	76
107	102	76
108	103	76
109	104	77
110	105	77
111	106	78
112	107	80
113	107	81
114	108	83
115	109	83
116	110	83
117	111	85
118	112	86
119	113	85
120	114	88
121	115	90
122	115	91
123	116	92
124	116	93
125	117	92
126	117	93
127	118	92
128	118	93
129	119	92
130	119	93
131	120	96
132	121	96
133	122	64
134	123	64
\.


--
-- Data for Name: books_book_contributors; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.books_book_contributors (id, book_id, user_id) FROM stdin;
1	35	8
2	41	3
\.


--
-- Data for Name: books_book_genres; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.books_book_genres (id, book_id, genre_id) FROM stdin;
1	1	1
2	1	2
3	2	1
4	2	2
5	3	1
6	3	2
7	4	3
8	5	4
9	6	5
10	6	6
11	7	5
12	7	6
13	7	7
14	8	8
15	8	2
16	9	9
17	9	5
18	9	6
19	9	7
20	10	5
21	10	6
22	11	5
23	11	6
24	12	10
25	12	5
26	13	11
27	13	12
28	13	13
29	14	1
30	15	1
31	15	12
32	16	1
33	16	14
34	16	15
36	17	2
38	18	10
39	19	1
40	19	2
41	20	10
42	20	13
43	21	1
44	21	11
45	22	10
46	22	13
47	23	11
48	23	13
49	24	1
50	24	10
51	25	10
52	26	10
53	27	10
54	28	19
55	28	18
56	28	10
58	29	2
60	30	1
61	30	2
63	31	1
64	31	2
66	32	1
67	32	2
68	33	20
71	34	1
72	34	2
73	34	23
74	35	24
75	35	25
76	35	7
78	36	1
79	36	2
80	37	26
81	37	7
82	38	18
83	38	27
84	39	7
85	40	1
86	40	6
87	41	28
88	42	2
89	43	2
90	44	24
91	44	29
92	45	2
93	46	2
94	47	18
95	47	10
96	47	30
98	48	18
99	48	10
100	48	30
102	49	18
103	49	10
104	49	30
106	50	2
107	51	2
108	52	2
109	53	32
110	53	33
111	53	34
114	55	37
115	56	2
116	57	2
117	58	3
118	58	38
119	59	3
120	59	39
121	60	39
122	61	6
123	61	40
124	61	41
125	61	10
126	61	18
127	62	32
128	62	33
129	62	34
130	62	42
131	63	5
132	63	43
133	63	44
134	63	45
135	63	46
136	64	48
137	64	2
139	65	39
140	66	39
141	67	10
142	67	19
144	68	49
145	68	2
146	69	10
147	69	18
148	69	6
150	70	10
151	70	18
152	70	6
153	71	2
155	71	23
156	72	2
157	72	51
158	73	49
159	73	2
160	74	49
161	74	2
162	75	39
163	76	2
164	76	23
165	77	2
167	77	6
168	77	23
169	78	2
170	78	30
171	78	6
172	78	23
173	79	2
174	79	30
175	79	6
176	79	23
177	80	2
178	81	1
179	81	3
180	81	4
181	81	9
182	82	2
183	83	2
184	84	3
185	84	15
186	84	7
187	85	53
188	86	54
189	87	1
190	88	1
191	88	2
192	89	1
193	89	6
194	89	55
195	90	3
196	90	14
197	91	56
198	91	6
199	92	57
200	93	8
201	93	2
202	94	48
203	95	2
205	95	23
207	96	2
209	97	2
211	97	23
212	98	48
213	98	2
214	99	2
216	100	39
218	101	39
220	102	39
222	103	39
223	104	39
224	105	39
225	106	39
226	107	59
227	108	39
228	109	39
229	110	39
230	111	48
231	112	48
232	113	48
233	114	2
234	114	60
235	115	19
236	115	10
237	115	18
238	116	48
239	116	2
240	116	18
242	117	48
243	117	2
244	117	18
246	118	48
247	118	2
248	118	18
250	119	48
251	119	2
252	119	18
254	120	2
255	121	2
256	122	2
259	123	2
\.


--
-- Data for Name: books_book_isbn; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.books_book_isbn (id, book_id, isbnmodel_id) FROM stdin;
1	1	1
2	2	2
3	3	3
4	4	4
5	5	5
6	6	6
7	7	7
8	8	8
9	9	9
10	10	10
11	11	11
12	12	12
13	13	13
14	14	14
15	15	15
16	16	16
17	17	17
18	18	18
19	19	19
20	20	20
21	21	21
22	22	22
23	23	23
24	24	24
25	25	25
26	26	26
27	27	27
28	28	28
29	29	29
30	30	30
31	31	31
32	32	32
33	33	33
34	34	34
35	35	35
36	36	36
37	37	37
38	38	38
39	39	39
40	40	40
41	41	41
42	42	42
43	43	43
44	44	44
45	45	45
46	46	46
47	47	47
48	48	48
49	49	49
50	50	50
51	51	51
52	52	52
53	53	53
54	54	54
55	55	55
56	56	56
57	57	57
58	58	58
59	59	59
60	60	60
61	61	61
62	62	62
63	63	63
64	64	64
65	65	65
66	66	66
67	67	67
68	68	68
69	69	69
70	70	70
71	71	71
72	72	72
73	73	73
74	74	74
75	75	75
76	76	76
77	77	77
78	78	78
79	79	79
80	80	80
81	81	81
82	82	82
83	83	83
84	84	84
85	86	85
86	87	86
87	88	87
88	89	88
89	90	89
90	91	90
91	92	91
92	93	92
93	94	93
94	95	94
95	96	95
96	97	96
97	98	97
98	99	98
99	100	99
100	101	100
101	102	101
102	103	102
103	104	103
104	105	104
105	106	105
106	107	106
107	108	107
108	109	108
109	110	109
110	111	110
111	112	111
112	113	112
113	114	113
114	115	114
115	116	115
116	117	116
117	118	117
118	119	118
119	120	119
120	121	120
121	122	121
122	123	122
\.


--
-- Data for Name: books_book_publisher; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.books_book_publisher (id, book_id, publisher_id) FROM stdin;
1	1	1
2	2	1
3	3	1
4	4	2
5	5	3
6	6	4
7	7	4
8	8	2
9	9	1
10	9	5
11	10	6
12	11	1
13	11	5
14	12	6
15	13	7
16	14	8
17	15	7
18	16	1
19	17	9
20	18	9
21	19	9
22	20	2
23	21	2
24	22	2
25	23	2
26	24	6
27	25	10
28	26	11
29	27	11
30	28	9
31	29	9
32	30	9
33	31	9
34	32	9
35	33	2
36	34	9
37	35	12
38	35	13
39	36	9
40	37	2
41	38	14
42	39	15
43	40	1
44	41	16
45	42	2
46	43	9
47	44	17
48	45	2
49	46	2
50	47	9
51	48	9
52	49	9
53	50	2
54	51	2
55	52	18
56	53	6
57	54	6
58	55	6
59	56	19
60	57	9
61	58	19
62	59	19
63	60	19
64	61	2
65	62	2
66	63	9
67	64	18
68	65	19
69	66	19
70	67	9
71	68	19
72	69	20
73	70	19
74	71	18
75	72	19
76	73	19
77	74	19
78	75	19
79	76	9
80	77	18
81	78	18
82	79	18
83	80	9
84	81	6
85	82	18
86	83	18
87	84	21
88	86	22
89	87	1
90	88	6
91	89	1
92	90	6
93	91	6
94	93	2
95	94	2
96	95	9
97	96	9
98	97	9
99	98	9
100	99	19
101	100	10
102	101	10
103	102	10
104	103	10
105	104	10
106	105	10
107	106	2
108	107	9
109	108	2
110	109	2
111	110	2
112	111	2
113	112	2
114	113	2
115	114	2
116	115	2
117	116	22
118	117	22
119	118	22
120	119	22
121	120	9
122	121	9
123	122	22
124	123	22
\.


--
-- Data for Name: books_genre; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.books_genre (id, name, slug) FROM stdin;
1	Художественная литература	khudozhestvennaya-literatura
2	Фэнтези	fentezi
3	Роман	roman
4	Исторический роман	istoricheskiy-roman
5	Проза	proza
6	Детектив	detektiv
7	Современная литература	sovremennaya-literatura
8	Приключения	priklyucheniya
9	Зарубежная литература	zarubezhnaya-literatura
10	Триллер	triller
11	Триллеры	trillery
12	Детективы	detektivy
13	Современная проза	sovremennaya-proza
14	Классическая литература	klassicheskaya-literatura
15	Любовные романы	lyubovnye-romany
18	Мистика	mistika-2
19	Ужасы	uzhasy
20	Контуркультура	konturkultura
23	Городское Фэнтези	gorodskoe-fentezi-2
24	Реализм	realizm
25	Саспенс	saspens
26	Контркультура	kontrkultura
27	Славянское фэнтези	slavyanskoe-fentezi
28	Романтика	romantika
29	Семейная Сага	semeynaya-saga
30	Dark Romance	dark-romance
32	Фантастика	fantastika
33	Постапокалипсис	postapokalipsis
34	Антиутопия	antiutopiya
37	Проза жизни	proza-zhizni
38	Исторический любовный роман	istoricheskiy-lyubovnyy-roman
39	Современный любовный роман	sovremennyy-lyubovnyy-roman
40	Корейская Мифология	koreyskaya-mifologiya
41	Дорама	dorama
42	Фикшн	fikshn
43	Древние артефакты	drevnie-artefakty
44	Историческая литература	istoricheskaya-literatura
45	Сентиментальные романы	sentimentalnye-romany
46	Современная зарубежная литература	sovremennaya-zarubezhnaya-literatura
48	Азиатское магическое фэнтези	aziatskoe-magicheskoe-fentezi
49	Славянское Фэнтези	slavyanskoe-fentezi-2
51	Романтическое фэнтези	romanticheskoe-fentezi
53	Нонфикшн астрофизика	nonfikshn-astrofizika
54	Подростковая литература	podrostkovaya-literatura
55	История	istoriya
56	Советская литература	sovetskaya-literatura
57	Публицистика	publitsistika
59	Комиксы и графические романы	komiksy-i-graficheskie-romany
60	Магический реализм	magicheskiy-realizm
\.


--
-- Data for Name: books_isbnmodel; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.books_isbnmodel (id, isbn, isbn13, title, publisher, publish_date, binding, total_pages, synopsis, language, subjects, image) FROM stdin;
3	9785389248502	9785389248502	Космер. Тайная история	Азбука-Аттикус	2024-02-09	\N	736	Космер — уникальная вселенная, созданная воображением одного из популярнейших авторов в жанре фэнтези. Здесь у каждого мира собственная магическая система. Здесь можно пешком перебираться с планеты на планету. Здесь разворачиваются изощренные, головокружительные сюжеты циклов-бестселлеров «Рожденный туманом», «Архив Буресвета», «Двурожденные», «Белый песок», а также романов «Элантрис» и «Локон с Изумрудного моря». По замыслу Сандерсона, полный цикл о космере составит не менее сорока книг. Повесть «Душа императора» была удостоена премии «Хьюго», а «Гранетанцор» — это новый мини-роман из цикла «Архив Буресвета». Впервые на русском!	Русский	Художественная литература, Фэнтези	book_covers/metadata_3efedca57bfaacf1.jpg
1	9785389179547	9785389179547	Колесо Времени. Книга 1. Око Мира	Азбука-Аттикус	2020-02-27	Kindle-издание	864	<p>Темный, средоточие вселенского зла, некогда заточенный Создателем в горном узилище Шайол Гул, успел навести порчу на мир, и люди, способные использовать Единую Силу и вершить с ее помощью великие деяния, ввергли мир в катастрофу, которую назвали Разломом Мира. На этом кончилась Эпоха легенд, и от прошлого в памяти человеческой остались одни лишь мифы.</p><p>И разве могло прийти в голову Ранду, Перрину или Мэту, троице неразлучных друзей из затерявшейся в лесной глуши деревеньки, что мифы скоро обрастут плотью, а им самим предстоит оказаться в самом центре событий, от исхода которых будет зависеть судьба людей на земле.</p><p>В настоящем издании тексты романов, составивших знаменитую эпопею «Колесо Времени», заново просмотрены и исправлены. Роман «Око Мира» дополнен авторским вступлением, ранее не переводившимся</p>	Русский	Художественная литература, Фэнтези	book_covers/metadata_40d11549dca83fd3.jpg
2	9785389186378	9785389186378	Колесо Времени. Книга 3. Дракон Возрожденный	Азбука-Аттикус	2020-08-25	\N	768	<p>Великая битва с ордами, явившимися из-за Аритского океана, увенчалась победой Ранда, добывшего Рог Валир и призвавшего с его помощью оживших героев прошлого. Враг бежал. А люди узрели в развергшихся небесах битву между Ба’алзамоном — Темным, или Отцом Лжи, как его прозвали в народе, — и Рандом, победившим в этой небесной схватке. Чудо потрясло всех. Ранда провозгласили Драконом. Это невиданное событие заставляет вступить в игру новую опасную силу — главу Детей Света, лорда капитан-командора Пейдрона Найола, который правдами и неправдами стремится узурпировать власть. Но не он один строит козни против победителя Ба’алзамона. Слуги и приспешники Отца Лжи и другие отродья Тени тоже не могут себе позволить, чтобы Дракон Возрожденный явился в мир.</p><p> В настоящем издании текст романа «Дракон Возрожденный» частично переведен заново и, как и в других романах, составивших знаменитую эпопею «Колесо Времени», заново отредактирован и исправлен.</p>	Русский	Художественная литература, Фэнтези	book_covers/metadata_44f642580beab9f8.jpg
81	9785389160996	9785389160996	\N	Азбука	\N	\N	\N	\N	\N	Художественная литература, Роман, Зарубежная литература, Исторический роман	book_covers/018f5d02-81da-7d21-960d-02b3875472d8.jpg
4	9785171612054	9785171612054	Взгляни на арлекинов!	АСТ	2023-12-28	Мягкая обложка	480	\N	Русский	Роман	book_covers/metadata_7d38e072e66760d9.jpg
111	9785171628680	9785171628680	Покорение дворка Янси. Том 2. Работнйй дом	АСТ	2024-01-01	Твёрдый переплёт	272	\N	Русский	Азиатское магическое фэнтези	book_covers/101361081_0.jpg
112	9785171628697	9785171628697	Pokorenie dvortsa Jansi. Tom 3. Khozjajka dvortsa	АСТ	2024	Твёрдый переплёт	640	\N	\N	Азиатское магическое фэнтези	book_covers/101378069_0.jpg
5	9785386149420	9785386149420	Бронепароходы	РИПОЛ классик	2023	Твёрдый переплёт	687	В 1918 году речными флотилиями обзавелись и 'учредиловцы' в Самаре, и Троцкий в Нижнем Новгороде, и повстанцы Ижевска, и чекисты в Перми. А в мире бушевала инженерная революция, когда паровые машины соперничали с дизельными двигателями, и в российское противостояние красных и белых властно вторгалась борьба лидеров нефтедобычи -- британского концерна 'Шелл' и русской компании братьев Нобель. Войну вели и люди, и технологии, и капиталы. В кровавой и огненной круговерти речники оказывались то красными, то белыми. Их принуждали стрелять в товарищей по главному делу жизни, принуждали топить пароходы -- славу и гордость речного флота. Как сохранить совесть посреди катастрофы? Как уберечь тех, кого ты любишь, кто тебе доверился? Как защитить прогресс, которому безразличны социальные битвы? Там, на палубах речных буксиров, капитаны искали честный путь в будущее, и маленький человек становился сильнее, чем огромный и могучий пароход.	Русский	Исторический роман	book_covers/metadata_1d48902a3d7da398.jpg
8	9785171269746	9785171269746	Глубина: Лабиринт отражений. Фальшивые зеркала. Прозрачные витражи	АСТ	2021	Твёрдый переплёт	796	Russian Book. Publisher: OOO Izdatel'stvo AST. Pages: 800. Year: 2021. Cover: Hardcover.	Русский	Фэнтези, Приключения	book_covers/metadata_4b371e520d90e48b.jpg
6	9785171634353	9785171634353	Дикий зверь роман	Корпус	2024	Твёрдый переплёт	473	\N	Русский	Проза, Детектив	book_covers/metadata_dc51bd72735731a1.jpg
7	9785171575489	9785171575489	\N	Корпус	\N	\N	\N	\N	\N	Современная литература, Детектив, Проза	\N
15	9785389040144	9785389040144	Братство камня	Иностранка	2012	Мягкая обложка	381	Диана Тиберж в отрочестве стала жертвой нападения, наложившего отпечаток на всю ее дальнейшую жизнь. Она обретает счастье и покой, усыновив в Таиланде мальчика, которого называет Люсьеном	Русский	Художественная литература, Детективы	book_covers/JPEG_20251024_182442_5196165676834605509.jpg
13	9785389037892	9785389037892	Полет аистов	Иностранка	2012	Мягкая обложка	445	Луи Антиош, молодой ученый-философ, получает странное предложение от известного швейцарского орнитолога Бема: проследить путь миграции аистов и попытаться выяснить, почему несколько сотен окольцованных птиц не вернулись в Европу	Русский	Триллеры, Детективы, Современная проза	book_covers/metadata_e2644cc3fc7b8571.jpg
9	9785389187726	9785389187726	Ждат ли добрйх вестей?	Азбука-Аттикус, М	2020	Мягкая обложка	384	\N	Русский	Зарубежная литература, Детектив, Проза, Современная литература	book_covers/metadata_c59d3376dbc587ba.jpg
14	9785271310263	9785271310263	Пигмей	Изд-во "АСТ"	2010	Твёрдый переплёт	315	\N	Русский	Художественная литература	book_covers/metadata_a06c821897f94411.jpg
10	9785389186927	9785389186927	Povorot k luchshemu	Азбука	2021	Мягкая обложка	432	\N	en	Детектив, Проза	book_covers/metadata_ec0e4719f701acec.jpg
113	9785171630966	9785171630966	Vechnyj son	АСТ	2024	Твёрдый переплёт	304	\N	\N	Фэнтези, Магический реализм	book_covers/7062615157.webp
11	9785389188495	9785389188495	Чйт свет, с собакоу вдвоем (мягк/обл.)	Азбука-Аттикус, М	2020	Мягкая обложка	416	\N	Русский	Детектив, Проза	book_covers/metadata_d10b6ca8c9e882ee.jpg
82	9785042039096	9785042039096	Русский дьявол	Фреедом	2019-11-20	Твёрдый переплёт	8	У него много имён. Ему поклоняются сильные мира сего. О нём не говорят. Мы говорим о русском дьяволе – о чёрном монахе, который расскажет вам о человеческих страстях.	Русский	Фэнтези	book_covers/101365697_0.jpg
12	9785389172029	9785389172029	Слйга смерти (мягк/обл.)	Азбука	2019	Мягкая обложка	448	\N	Русский	Триллер, Проза	book_covers/metadata_11a3845bf3955255.jpg
16	9785389229754	9785389229754	Собор Парижской Богоматери	Азбука-Аттикус	2023-03-22	\N	640	<p> Виктор Гюго — создатель романтической драмы, великолепный писатель, чьи произведения до сих пор увлекают читателей во всем мире. Романы Гюго отмечены богатством творческого воображения, сюжеты их обычно сложны, развязки эффектны, чувства героев сильны и трагичны. Обращаясь к национальной истории, автор создает убедительные картины прошлого и яркие, запоминающиеся характеры.</p><p> Особенно это касается самого известного романа Виктора Гюго – «Собор Парижской Богоматери». Невозможно забыть гордую цыганку Эсмеральду, уродливого звонаря собора Нотр-Дам Квазимодо, блистательного и жестокосердного красавца Феба, терзаемого ревностью священника Фролло. Как невозможно забыть и Французское средневековье, воссозданное в романе с поразительной силой воображения!</p><p> В настоящем издании текст сопровождается иллюстрациями французских художников XIX века.</p>	Русский	Художественная литература, Классическая литература, Любовные романы	book_covers/metadata_274c84995e329eef.jpg
19	9785425031884	9785425031884	Войны начинают неудачники	Эксмо	2007-10-01	\N	450	Порой войны начинаются буднично. Среди белого дня из машин, припаркованных на обыкновенной московской улице, выскакивают мужчины и, никого не стесняясь, открывают шквальный огонь из автоматов. И целятся они при этом в группку каких-то невзрачных коротышек в красных банданах, только что отоварившихся в ближайшем «Макдоналдсе». Разумеется, тут же начинается паника, прохожие кидаются врассыпную, а один из них вдруг переворачивает столик уличного кафе и укрывается за ним, прижимая к груди свой рюкзачок.И правильно делает.Ведь в отличие от большинства обывателей Артем хорошо знает, что за всем этим последует. Одна из причин начинающейся войны как раз лежит в его рюкзаке. Единственное, чего не знает Артем, – что в Тайном Городе войны начинают неудачники, но заканчивают их герои.Пока не знает...	Русский	Художественная литература, Фэнтези	book_covers/metadata_ba4a43c328504684.jpg
17	9785699140596	9785699140596	Царь горы	Эксмо	2005	Твёрдый переплёт	474	Книга для тех, кому интересно не просто жить, но искать в заурядных вещах необычное и завораживающее, кому интересно фантазировать и творить и кто еще не разучился удивляться	Русский	Фэнтези, Городское фэнтези	book_covers/metadata_9132d9757e6f401a.jpg
83	9785042164156	9785042164156	\N	Фреедом	\N	\N	\N	\N	\N	Фэнтези	book_covers/101418316_0.jpg
18	9785041865924	9785041865924	\N	Эксмо	\N	\N	\N	\N	\N	Триллер, мистика	book_covers/JPEG_20251024_185346_3757592692098869833.jpg
114	9785171675875	9785171675875	\N	АСТ	\N	\N	\N	\N	\N	Триллер, Мистика, Ужасы	book_covers/7161312471.webp
20	9785171738372	9785171738372	Демон скучающий	АСТ	2025	Твёрдый переплёт	479	\N	Русский	Триллер, Современная проза	book_covers/metadata_ef106cb4c3ac09f1.jpg
84	9785041020842	9785041020842	\N	Бомбора	\N	\N	\N	\N	\N	Роман, Современная литература, Любовные романы	book_covers/7153338256.webp
21	9785171665425	9785171665425	Девочка с куклами	АСТ	2025	Твёрдый переплёт	477	"Февральский День всех влюблённых ознаменовался ужасным происшествием: в запертой квартире была обнаружена мёртвая девушка по имени Виктория Рыкова. Её смерть вряд ли бы привлекла внимание, если не поразительные обстоятельства -- Виктория полулежала на кровати, одетая в воздушное белое платье и окружённая шестью нарядными куклами. Всё говорило о том, что несчастная покончила с собой, и это подтверждал дневник Вики, где она подробно описала день, час и обстоятельства своей будущей смерти. Следствие склонялось к версии самоубийства, но майор Феликс Вербин имел другое мнение. Он считал, что у девушки не было причин добровольно расстаться с жизнью, к тому же из-за страшных видений Вика избегала кукол, так откуда же взялись те, которые сидели вокруг нее на смертном ложе? Кто их купил? За что надо было убивать красивую молодую девушку? Кому могла насолить юная студенточка? Что же на самом деле произошло в ее квартире в День святого Валентина?На все эти вопросы взялся ответить старший оперуполномоченный майор Вербин -- человек, обладающий особым даром задавать нужным людям нужные вопросы..." --	Русский	Художественная литература, Триллеры	book_covers/metadata_5fbee453deb4d976.jpg
25	9785042020087	9785042020087	Седьмой читатель	Инспиря	2024	Твёрдый переплёт	348	Set in 1999 in China, this psychological thriller follows Fan Mu, an ordinary student whose life takes a dark turn after a series of gruesome murders at his university. As he discovers his unique talent for profiling, Fan Mu is drawn into a dangerous race to uncover the killer before more lives are lost. Balancing suspense, mystery, and psychological depth, the story explores the chilling journey of a young man discovering his extraordinary gift under extraordinary circumstances.	Русский	Триллер	book_covers/metadata_bf73d94f2c147062.jpg
22	9785171588380	9785171588380	День черной собаки	АСТ	2024	Твёрдый переплёт	479	Vadim Panov. Literaturno-khudozhestvennoe Izdanie--colophon. Вадим Панов. Литературно-художественное издание--colophon.	Русский	Триллер, Современная проза	book_covers/metadata_1100bffff9042928.jpg
23	9785171607524	9785171607524	\N	АСТ	\N	\N	\N	\N	\N	Триллеры, Современная проза	\N
24	9785389117082	9785389117082	Сновидение	Азбука	2017	Мягкая обложка	445	\N	Русский	Художественная литература, Триллер	book_covers/metadata_d3b55d062111fd12.jpg
115	9785353108238	9785353108238	Канашибари	Кислород	2024	Твёрдый переплёт	392	\N	Русский	Фэнтези, Мистика, Азиатское магическое фэнтези, Хоррор	book_covers/101319874_0.jpg
26	9785041992071	9785041992071	Ящик Скиннера	Инспирия	2024	Твёрдый переплёт	571	"Профайлер. После окончания университета Фан Му поступает на службу в полицию. Теперь он - профайлер, распутывающий самые сложные преступления...Но однажды его чутье дает осечку. Убийца. Студент Люо Цзяхай задержан за убийство с особой жестокостью. Жертва--учительница, ради карьеры сломавшая жизнь его возлюбленной. Фан Му сочувствует преступнику и даже соглашается выступить в суде свидетелем защиты. Но вскоре подсудимый дерзко сбегает из изолятора. Более того, при этом друг и коллега Фан Му получает очень серьезные травмы--как физические, так и психологические. Психодрама. Чтобы помочь товарищу, профайлер соглашается на участие в психотерапевтических сеансах. Их цель: исцеление через повторное проживание травматического опыта. Но выясняется, что подобная терапия привлекает не только полицию. По городу прокатывается волна убийств, каждое из которых напоминает Фан Му кульминацию психодра-матического сеанса. А через некоторое время на месте очеред-ного убийства обнаруживается волос студента Люо Цзяхая..."--	Русский	Триллер	book_covers/metadata_9096524d8ff31a9d.jpg
103	9785041867676	9785041867676	\N	Инспиря	\N	\N	\N	\N	\N	Современный любовный роман	book_covers/7075992635.webp
27	9785041767877	9785041767877	\N	Инспирия	\N	\N	\N	\N	\N	Триллер	book_covers/JPEG_20251024_205500_6476300065488107930.jpg
28	9785041975692	9785041975692	Roga	Эксмо	2024-01-01	Мягкая обложка	448	\N	\N	Мистика, Триллер, Ужасы	book_covers/cover1__w820.jpg
106	9785604785911	9785604785911	Говори графический роман	Эксмо	2023	Мягкая обложка	379	"Мелинда Сордино учится в старшей школе. У нее нет друзей, и она — изгой, потому что в конце прошлого учебного года позвонила в полицию и сорвала школьную вечеринку. Теперь никто не хочет не только общаться с Мелиндой, но и слушать ее. Долгое время она молчит о том, что произошло на самом деле. Однако благодаря работе над творческим проектом Мелинда находит в себе силы признать: ее изнасиловал старшеклассник, который до сих пор учится в ее школе." -- Back cover.	Русский	Комиксы и графические романы	book_covers/7884173255.webp
29	9785699289370	9785699289370	Командор войны	Эксмо	2008	Твёрдый переплёт	413	Человечество - отнюдь не единственная разумная раса на нашей планете. Потомки давно исчезнувших цивилизаций и сейчас обитают в магическом Тайном Городе, многие тысячи лет существующем на территории Москвы и скрытом от глаз людей защитными чарами	Русский	Фэнтези, Городское фэнтези	book_covers/metadata_1caa256efbc5f3f7.jpg
30	9785699294893	9785699294893	Атака по правилам	Эксмо	2009	Твёрдый переплёт	445	\N	Русский	Художественная литература, Фэнтези, Городское фэнтези	book_covers/metadata_3ea635d22cf3b963.jpg
31	9785425031914	9785425031914	Все оттенки черного	Эксмо	2007-12-24	\N	507	Это не было наваждением. Ослепительная красавица, завершая свой танец, действительно впилась в горло юного партнера. И отрезанная голова ребенка, вылетевшая на сцену из зрительской ложи, тоже не была бутафорией. «Только дьявол разрешит тебе все» – похоже, девиз «Заведения Мрака» не обманывал.Но владельцы ночного клуба не знали, какие могущественные силы выступят против них. Обитатели Тайного Города, последние представители давно исчезнувших с лица Земли цивилизаций, никогда не примирились бы с такой грязной конкуренцией. К тому же в их памяти еще свежи были воспоминания о страшных временах Инквизиции...	Русский	Художественная литература, Фэнтези, Городское фэнтези	book_covers/metadata_524ad9403651b080.jpg
35	9785006786219	9785006786219	\N	Ридеро, Литрес	\N	\N	\N	\N	\N	Реализм, Саспенс, Современная литература	book_covers/Обложка_сказки_5l7gQCF.jpg
32	9785425031921	9785425031921	И в аду есть герои	Эксмо	2007-12-24	\N	517	Новый синтетический наркотик «стим» оказался способен порождать чудовищ не только в воспаленном мозгу наркоманов. Благодаря «стиму» пришел в этот мир верный слуга Великого Господина. Пришел, чтобы возродить посеянные тысячелетия назад семена Ненависти. И снова, как уже случалось в далеком прошлом, смертельная опасность заставила нынешних хозяев Земли – людей объединиться с потомками древних магов, правившими планетой в доисторические времена. С жителями Тайного Города...	Русский	Художественная литература, Фэнтези, Городское фэнтези	book_covers/metadata_ef5f40363ae930ca.jpg
104	9785041787783	9785041787783	\N	Инспиря	\N	\N	\N	\N	\N	Современный любовный роман	book_covers/6876788542.webp
33	9785170231805	9785170231805	Невидимки	АСТ	2004	Твёрдый переплёт	300	\N	Русский	Контуркультура, современная проза, трансгрессивная литература	book_covers/JPEG_20251025_182439_8532639384670956918.jpg
34	9785425031938	9785425031938	Наложницы ненависти	Эксмо	2007-10-08	\N	509	Усеченная пирамида в центре кровавой площади содрогнулась. Тот, кто уже много десятилетий был заключен в стеклянном саркофаге, рвался на свободу. Но площадь – древняя зона контакта с Преисподней – была перекрыта могущественными обитателями Тайного Города. Последние представители давно исчезнувших цивилизаций здесь, в центре Москвы, в бою с иерархами ада спасали не только себя, но и нынешнее человечество от Великого Господина, воплотившего в себе всю ненависть этого мира...	Русский	Художественная литература, Фэнтези, Городское Фэнтези	book_covers/metadata_85795ea495b9723f.jpg
107	9785171447533	9785171447533	Dikaya Fletcher	АСТ	\N	Мягкая обложка	480	\N	\N	Современный любовный роман	book_covers/6620525575.webp
36	9785425031945	9785425031945	Куколка Последней Надежды	Эксмо	2007-12-24	\N	605	Маги сокрытого от непосвященных Тайного Города, основанного на берегах Москвы-реки потомками древних властителей Земли, могли многое. Почти все. И тем удивительнее, что Куколка Последней Надежды, обманывающая саму смерть, была создана вовсе не ими, а Целителями, принадлежащими к человеческой расе. Великие Дома Тайного Города давно наложили запрет на использование Куколок – ведь спасти кого-либо можно было лишь ценой чужой жизни. Но что значит любой запрет для того, чьим смыслом жизни стала месть? И тот, кто много лет боролся со смертью, сам решается на убийство...	Русский	Художественная литература, Фэнтези, Городское фэнтези	book_covers/metadata_2ee6e619766b5bd7.jpg
42	9785171676339	9785171676339	\N	АСТ	\N	\N	\N	\N	\N	Фэнтези	book_covers/101415193_0.jpg
37	9785403020954	9785403020954	Снафф	АСТ	2009	Твёрдый переплёт	254	\N	Русский	Контркультура, Современная литература	book_covers/1000019275.jpg
38	9785171696337	9785171696337	\N	Аст	\N	\N	\N	\N	\N	Славянское фэнтези, Мистика	book_covers/JPEG_20251026_164231_84708765446175590.jpg
105	9785171470647	9785171470647	Отпуск на двоих	АСТ	2023	Твёрдый переплёт	416	\N	Русский	Современный любовный роман	book_covers/101138889_0.jpg
39	9785961491647	9785961491647	\N	Бель Летр	\N	\N	\N	\N	\N	Современная литература	book_covers/JPEG_20251026_235328_6086120671374706866.jpg
43	9785042172151	9785042172151	\N	Эксмо	\N	\N	\N	\N	\N	Фэнтези	book_covers/JPEG_20251027_215021_7370088974199929466.jpg
40	9785389115408	9785389115408	Лонтано	Азбука-Аттикус	2016-04-21	\N	672	<p>После почти трехлетнего перерыва Жан Кристоф Гранже вновь радует своих  поклонников первосортным триллером «Лонтано» со сложной и захватывающей  интригой. Знакомьтесь - семейство Морван: отец возглавляет французскую  полицию, старший сын следует по стопам отца, младший – успешный   финансист, не чуждый наркобизнесу, дочка – актриса-неудачница, зато  пользуется успехом в качестве экскорт-girl. Члены семьи прочно привязаны  друг к другу, тем более прочно, что объединяет их взаимная ненависть.  Но вот во Франции возникает череда странных  убийств, как две капли воды  похожих на те, что  совершил знаменитый серийный убийца по прозвищу  Человек-Гвоздь в семидесятые годы в Конго. Но ведь Морван-отец давно  раскрыл те давние преступления. Кто в таком случае орудует во Франции и  почему удары приходятся по семье полицейского номер один?!. Сумеют ли  Морваны противостоять атакам неведомого противника или же падут жертвой  собственных страстей?..<br> Впервые на русском. <br></p>	Русский	Художественная литература, Детектив	book_covers/metadata_26b77182a135c256.jpg
41	9785389126862	9785389126862	\N	Самиздат	\N	\N	\N	\N	\N	Романтика	\N
108	9785171470616	9785171470616	\N	АСТ	\N	\N	\N	\N	\N	Современный любовный роман	book_covers/7436665183.webp
44	9785001313892	9785001313892	Голландский дом	Синдбад	2022	Мягкая обложка	317	«Новый роман американской писательницы Энн Пэтчетт напоминает сказку братьев Гримм, разросшуюся до масштабов семейного эпоса. История главных героев, Дэнни Конроя и его сестры Мэйв, охватывает всю вторую половину ХХ века, а их судьбы оказываются роковым образом переплетены с Голландским домом--особняком на востоке Пенсильвании, когда-то принадлежавшим разорившейся династии нидерландских магнатов Ванхубейков. Сам по себе Голландский дом не населен призраками, но каждый, кто переступает его порог, в каком-то смысле становится призраком дома--куда бы он потом ни отправился, где бы впоследствии ни жил, повсюду носит с собой этот образ. У Дэнни и Мэйв только это и есть: безвременно ушедший из жизни отец, давным-давно превратившаяся в воспоминание мать, будто бы вышедшая из ночного кошмара мачеха и зловещий фамильный особняк. А также взрослая жизнь, которая все никак не начнется: проклятие детства, печать сиротства, невозможность разорвать однажды сформировавшиеся узы. «Голландский дом»--история о победе любви над злом. Победе, замешенной на потерях и во многом неочевидной, потому что в конечном счете читателю предстоит разобраться самому, на чьей он стороне и был ли здесь злодей. И если был--то кто?»--Title page verso.	Русский	Реализм, Семейная Сага	book_covers/metadata_7066af424f875b7a.jpg
68	9785002522088	9785002522088	\N	КЛЕВЕР	\N	\N	\N	\N	\N	Фэнтези, Славянское Фэнтези	book_covers/7453482760.webp
45	9785171110840	9785171110840	\N	АСТ	\N	\N	\N	\N	\N	Фэнтези	book_covers/6862411821.webp
61	9785171710255	9785171710255	\N	АСТ	\N	\N	\N	\N	\N	Триллер, Мистика, Детектив, Корейская Мифология, Дорама	book_covers/7584485425.webp
46	9785171129668	9785171129668	\N	АСТ	\N	\N	\N	\N	\N	Фэнтези	book_covers/6558314572.webp
47	9785042213908	9785042213908	\N	Эксмо	\N	\N	\N	\N	\N	Мистика, Триллер, Dark Romance, Хоррор	book_covers/7872671038.webp
48	9785042006746	9785042006746	\N	Эксмо	\N	\N	\N	\N	\N	Мистика, Триллер, Dark Romance, Хоррор	book_covers/7119292388.webp
62	9785171130299	9785171130299	\N	АСТ	\N	\N	\N	\N	\N	Постапокалипсис, Антиутопия, Фикшн, Фантастика	book_covers/10833142_0.jpg
49	9785042050022	9785042050022	\N	Эксмо	\N	\N	\N	\N	\N	Мистика, Триллер, Dark Romance, Хоррор	book_covers/7491747516.webp
50	9785171470470	9785171470470	\N	АСТ	\N	\N	\N	\N	\N	Фэнтези	book_covers/7423174772.webp
72	9785002113033	9785002113033	\N	КЛЕВЕР	\N	\N	\N	\N	\N	Фэнтези, Романтическое фэнтези	book_covers/6683755294.webp
51	9785171470487	9785171470487	\N	АСТ	\N	\N	\N	\N	\N	Фэнтези	book_covers/7722544874.webp
63	9785041654924	9785041654924	\N	Эксмо	\N	\N	\N	\N	\N	Древние артефакты, Историческая литература, Проза, Сентиментальные романы, Современная зарубежная литература	book_covers/6640504753.webp
52	9785042047633	9785042047633	\N	Фреедом	\N	\N	\N	\N	\N	Фэнтези	book_covers/7235188090.webp
53	9785389246775	9785389246775	\N	Азбука	\N	\N	\N	\N	\N	Фантастика, Постапокалипсис, Антиутопия	book_covers/7184006660.webp
69	9785042035708	9785042035708	\N	Лике боок	\N	\N	\N	\N	\N	Young Adult, Триллер, Мистика, Детектив	book_covers/101365713_0.jpg
54	9785389251687	9785389251687	\N	Азбука	\N	\N	\N	\N	\N	Фантастика Постапокалипсис Антиутопия	book_covers/7055918031.webp
64	9785041694166	9785041694166	\N	Фреедом	\N	\N	\N	\N	\N	Young Adult, Азиатское магическое фэнтези, Фэнтези	book_covers/6717028554.webp
55	9785389266674	9785389266674	\N	Азбука	\N	\N	\N	\N	\N	Young adult, Проза жизни	book_covers/7768644248.webp
56	9785002520756	9785002520756	\N	КЛЕВЕР	\N	\N	\N	\N	\N	Фэнтези	book_covers/101396048_0.jpg
57	9785041952853	9785041952853	\N	Эксмо	\N	\N	\N	\N	\N	Фэнтези	book_covers/6906315849.webp
65	9785002115181	9785002115181	\N	КЛЕВЕР	\N	\N	\N	\N	\N	Современный любовный роман	book_covers/6844356150.webp
58	9785002522712	9785002522712	\N	КЛЕВЕР	\N	\N	\N	\N	\N	Роман, Исторический любовный роман	book_covers/7512968068.webp
59	9785002114801	9785002114801	\N	КЛЕВЕР	\N	\N	\N	\N	\N	Современный любовный роман, Роман	book_covers/6820945246.webp
60	9785002522071	9785002522071	\N	КЛЕВЕР	\N	\N	\N	\N	\N	Современный любовный роман	book_covers/101428157_0.jpg
66	9785002119349	9785002119349	\N	КЛЕВЕР	\N	\N	\N	\N	\N	Современный любовный роман	book_covers/7201796456.webp
70	9785001548720	9785001548720	\N	КЛЕВЕР	\N	\N	\N	\N	\N	Триллер, Мистика, Детектив	book_covers/6429392473.webp
67	9785041707583	9785041707583	\N	Эксмо	\N	\N	\N	\N	\N	Ужасы, Хоррор, Триллер	book_covers/6416939491.webp
73	9785002117932	9785002117932	\N	КЛЕВЕР	\N	\N	\N	\N	\N	Фэнтези, Славянское Фэнтези	book_covers/7049931297.webp
71	9785041770440	9785041770440	\N	Фреедом	\N	\N	\N	\N	\N	Фэнтези, Городское Фэнтези, Любовное фэнтези	book_covers/101211949_0.jpg
76	9785041082796	9785041082796	\N	Эксмо	\N	\N	\N	\N	\N	Фэнтези, Городское Фэнтези	book_covers/6007830761.webp
74	9785002119660	9785002119660	\N	КЛЕВЕР	\N	\N	\N	\N	\N	Фэнтези, Славянское Фэнтези	book_covers/7129899449.webp
75	9785002522873	9785002522873	\N	КЛЕВЕР	\N	\N	\N	\N	\N	Современный любовный роман	book_covers/7524815728.webp
77	9785042182136	9785042182136	\N	Фреедом	\N	\N	\N	\N	\N	Фэнтези, Городское Фэнтези, Dark Romans, Детектив	book_covers/101421369_0.jpg
78	9785041933364	9785041933364	\N	Фреедом	\N	\N	\N	\N	\N	Фэнтези, Городское Фэнтези, Детектив, Dark Romance	book_covers/7303221501.webp
79	9785042006517	9785042006517	\N	Фреедом	\N	\N	\N	\N	\N	Фэнтези, Городское Фэнтези, Детектив, Dark Romance	book_covers/8171993943.webp
80	9785041177607	9785041177607	\N	Эксмо	\N	\N	\N	\N	\N	Фэнтези	book_covers/101206396_0.jpg
109	9785171470623	9785171470623	\N	АСТ	\N	\N	\N	\N	\N	Современный любовный роман	book_covers/7394505010.webp
85	9785045847537	9785045847537	Четвертое крыло	Кислород	2023-10-25	\N	756	Двадцатилетняя Вайолет Сорренгейл готовилась стать писцом и спокойно жить среди книг и пыльных документов. Но ее мать – прославленный генерал, и она не потерпит слабости ни в каком виде. Поэтому Вайолет вынуждена присоединиться к сотням молодых людей, стремящихся стать элитой Наварры – всадниками на драконах. Однако из военной академии Басгиат есть только два выхода: окончить ее или умереть. Смерть ходит по пятам за каждым кадетом, потому что драконы не выбирают слабаков. Они их сжигают. Сами кадеты тоже будут убивать, чтобы повысить свои шансы на успех. Некоторые готовы прикончить Вайолет только за то, что она дочь своей матери. Например, Ксейден Риорсон – сильный и безжалостный командир крыла в квадранте всадников.Тем временем война, которую ведет Наварра, становится все более тяжелой, и совсем скоро Вайолет придется вступить в бой.Книга содержит нецензурную лексику.	Русский	Подростковая литература	book_covers/metadata_6d03c1425122240b.jpg
110	9785171628673	9785171628673	Покорение дворца Янси. Том 1. Пут служанки	АСТ	2024	Твёрдый переплёт	528	\N	Русский	Азиатское магическое фэнтези	book_covers/101334674_0_1.jpg
86	9785389206229	9785389206229	Радуга тяготения	Азбука-Аттикус	2022-01-28	Kindle-издание	928	<p>Томас Пинчон — наряду с Сэлинджером, «великий американский затворник», один из крупнейших писателей мировой литературы XX, а теперь и XXI века, после первых же публикаций единодушно признанный классиком уровня Набокова, Джойса и Борхеса. Его «Радуга тяготения» — это главный послевоенный роман мировой литературы, вобравший в себя вторую половину XX века так же, как джойсовский «Улисс» вобрал первую. Это грандиозный постмодернистский эпос и едкая сатира, это помноженная на фарс трагедия и радикальнейшее антивоенное высказывание, это контркультурная библия и взрывчатая смесь иронии с конспирологией; это, наконец, уникальный читательский опыт и сюрреалистический травелог через преисподнюю нашего коллективного прошлого. Без «Радуги тяготения» не было бы ни «Маятника Фуко» Умберто Эко, ни всего киберпанка вместе взятого, да и сам пейзаж современной литературы был бы совершенно иным. Вот уже почти полвека в этой книге что ни день то открывают новые смыслы, но единственное правильное прочтение так и остается, к счастью, недостижимым. Получившая главную американскую литературную награду — Национальную книжную премию США, номинированная на десяток других престижных премий и своим радикализмом вызвавшая лавину отставок почтенных жюри, «Радуга тяготения» остается вне оценочной шкалы и вне времени.</p><p> Перевод публикуется в новой редакции.</p>	Русский	Художественная литература	book_covers/metadata_3993681a9426f102.jpg
88	9785389091665	9785389091665	Имя мне — Красный	Азбука-Аттикус	2023-11-01	Kindle-издание	544	Четырем мастерам персидской миниатюры поручено проиллюстрировать тайную книгу для султана, дабы имя его и деяния обрели бессмертие и славу в веках. Однако по городу ходят слухи, что книга противоречит законам мусульманского мира, что сделана она по принципам венецианских безбожников и неосторожный свидетель, осмелившийся взглянуть на запретные страницы, неминуемо ослепнет. После жестокого убийства одного из художников становится ясно, что продолжать работу над заказом султана — смертельно опасно, а личность убийцы можно установить, лишь внимательно всмотревшись в замысловатые линии загадочного рисунка.	Русский	Художественная литература, Детектив, История	book_covers/metadata_7ce9b13ed92acf9b.jpg
87	9785043109705	9785043109705	Зов Ктулху	Азбука	2020-11-10	\N	436	Американский писатель Говард Филлипс Лавкрафт при жизни не опубликовал ни одной книги, печатаясь только в журналах. Признание пришло к нему спустя десятилетия после смерти. Лавкрафта называют основателем литературы «сверхъестественного ужаса», «литературным Коперником» и «Эдгаром По ХХ века». Фигура писателя окружена покровом домыслов, мифов и загадок.	Русский	Художественная литература, Фэнтези	book_covers/metadata_1a0e62c2bc433b87.jpg
89	9785389030039	9785389030039	Человек, который смеется	Азбука	2012	Мягкая обложка	670	В этом романе есть все: атмосфера тайны, великолепные страницы, посвященные английской истории, кораблекрушение, ребенок, странный документ	Русский	Роман, Классическая литература	book_covers/metadata_105626081aeca530.jpg
92	9785170828791	9785170828791	Хоббит	АСТ	2015	Твёрдый переплёт	299	Dzhon Ronald Ruel Tolkin - pisatel, poet, filolog, professor Oksfordskogo universiteta, rodonachalnik sovremennoj fentezi. V 1937 godu byl napisan "Khobbit", a v seredine 1950-kh godov uvideli svet tri knigi "Vlastelina kolets", povestvujuschie o Sredi-zeme - mire, naselennom predstaviteljami volshebnykh ras so slozhnoj kulturoj, istoriej i mifologiej.V posledujuschie gody eti romany byli perevedeny na vse mirovye jazyki, adaptirovany dlja kino, multiplikatsii, audiopes, teatra, kompjuternykh igr, komiksov i porodili massu podrazhanij i parodij.Vpervye s illjustratsijami samogo Dzhona P.P. Tolkina!Perevod Bakanova i Dobrokhotovoj	Русский	Фэнтези, Приключения	book_covers/metadata_7b3451b67d52288f.jpg
96	9785041228941	9785041228941	\N	Эксмо	\N	\N	\N	\N	\N	Фэнтези, Городское Фэнтези, Любовное фэнтези	book_covers/7122057943.webp
93	9785171561956	9785171561956	\N	АСТ	\N	\N	\N	\N	\N	Азиатское магическое фэнтези	book_covers/101306101_0.jpg
90	9785389196360	9785389196360	Место встречи изменить нельзя	Азбука	2021	Твёрдый переплёт	509	\N	Русский	Детектив, Советская литература	book_covers/metadata_16ef04404a65aa2d.jpg
91	9781326402242	9781326402242	\N	\N	\N	\N	\N	\N	\N	Публицистика	book_covers/JPEG_20251028_223943_3619515499384312493.jpg
94	9785041847340	9785041847340	\N	Эксмо	\N	\N	\N	\N	\N	Фэнтези, Городское Фэнтези, Любовное фэнтези	book_covers/7232272420.webp
99	9785041932671	9785041932671	\N	Инспиря	\N	\N	\N	\N	\N	Современный любовный роман, Спортивный любовный роман	book_covers/101343990_0.jpg
95	9785041945527	9785041945527	\N	Эксмо	\N	\N	\N	\N	\N	Фэнтези, Городское фэнтези, Любовное фэнтези	book_covers/7232272403.webp
98	9785002522705	9785002522705	\N	КЛЕВЕР	\N	\N	\N	\N	\N	Фэнтези	book_covers/7535010665.webp
97	9785041759926	9785041759926	\N	Эксмо	\N	\N	\N	\N	\N	Фэнтези, Азиатское магическое фэнтези	book_covers/7126368198.webp
100	9785041932688	9785041932688	\N	Инспиря	\N	\N	\N	\N	\N	Современный любовный роман, Спортивный любовный роман	\N
101	9785041932725	9785041932725	\N	Инспиря	\N	\N	\N	\N	\N	Современный любовный роман, Спортивный любовный роман	book_covers/7348114268.webp
102	9785042136320	9785042136320	\N	Инспиря	\N	\N	\N	\N	\N	Современный любовный роман, Спортивный любовный роман	book_covers/7892453989.webp
116	9785353108993	9785353108993	Канашибари. Том 2	Кислород	2024-01-01	Твёрдый переплёт	384	The world of kaidans that Hinata finds herself in is unforgiving: no matter how exhausted you are, no matter what wounds you receive, no matter what loved ones you lose, you must continue playing. Refusing to play means death. Losing means death. A moment of weakness or panic means death. And Hinata fights, going through one brutal kaidan after another. But what if the greatest danger awaits her not in the illusory worlds of kaidans, but in reality? What if the players that Hinata is finally ready to call friends are not who they say they are?<br/><br/>Mir kajdanov, v kotoryj popala Hinata, neumolim: kak by ty ni byl izmuchen, kakie by rany ni poluchil, kakih by blizkih lyudej ni poteryal, ty obyazan igrat dal-she. Otkaz ot igry — smert. Proigrysh — smert. Sekundnaya slabost ili panika — smert. I Hinata srazhaetsya, prohodya odin zhestokij kajdan za drugim. No chto, esli samaya bolshaya opasnost podsteregaet ee ne v illyuzornyh mirah kajdanov, a v realnosti? CHto, esli igroki, kotoryh Hinata nakonec-to gotova nazvat druzyami, ne te, za kogo sebya vydayut?<br/><br/>Мир кайданов, в который попала Хината, неумолим: как бы ты ни был измучен, какие бы раны ни получил, каких бы близких людей ни потерял, ты обязан играть даль-ше. Отказ от игры — смерть. Проигрыш — смерть. Секундная слабость или паника — смерть. И Хината сражается, проходя один жестокий кайдан за другим. Но что, если самая большая опасность подстерегает ее не в иллюзорных мирах кайданов, а в реальности? Что, если игроки, которых Хината наконец-то готова назвать друзьями, не те, за кого себя выдают?	Русский	Фэнтези, Мистика, Азиатское магическое фэнтези, Хоррор	book_covers/101351633_0.jpg
120	9785041858100	9785041858100	\N	Эксмо	\N	\N	\N	\N	\N	Фэнтези	book_covers/101252033_0.jpg
117	9785353109860	9785353109860	Шен А. и В. КАНАШИБАРИ. Пока не погаснет последний фонар. Том 3	Кислород	2025-01-01	Твёрдый переплёт	480	\N	Русский	Фэнтези, Мистика, Азиатское магическое фэнтези, Хоррор	book_covers/101405261_0.jpg
118	9785353115533	9785353115533	\N	Кислород	\N	\N	\N	\N	\N	Фэнтези, Мистика, Азиатское магическое фэнтези, Хоррор	book_covers/101405263_0.jpg
119	9785041773168	9785041773168	\N	Эксмо	\N	\N	\N	\N	\N	Фэнтези	book_covers/101213846_0.jpg
121	9785353108580	9785353108580	Железное пламя	Кислород	2024-04-09	Твёрдый переплёт	912	\N	Русский	Фэнтези, Любовное фэнтези, Young Adult	book_covers/101338263_0.jpg
122	9785353109587	9785353109587	Ониксовый шторм роман	Кислород	2025	Твёрдый переплёт	744	"В поисках союзников Вайолет отправляется далеко за пределы Наварры. И это путешествие испытает все ее мужество, ум и удачу. Ведь когда ты борешься за то, что дороже всего на свете, - своих драконов, свою семью, свой дом и своего мужчину - отступать некуда. Даже, если тайна, которую ты хранишь, может разрушить все. Им нужна армия. Им нужна сила. Им нужна магия. Им нужно то, что может найти только Вайолет, - правда. Но надвигается шторм... и не каждый сможет пережить его неистовый гнев."--Publisher.	Русский	Фэнтези, Любовное фэнтези, Young Adult	book_covers/101380574_0.jpg
\.


--
-- Data for Name: books_isbnmodel_authors; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.books_isbnmodel_authors (id, isbnmodel_id, author_id) FROM stdin;
1	1	1
2	2	1
3	3	2
4	4	3
5	5	4
6	6	5
7	8	7
8	9	8
9	10	10
10	11	8
11	12	12
12	13	13
13	14	14
14	15	13
15	15	15
16	16	16
17	17	17
18	19	19
19	20	19
20	21	19
21	22	19
22	24	21
23	25	22
24	26	22
25	28	25
26	29	17
27	30	17
28	31	19
29	32	19
30	33	26
31	34	19
32	36	19
33	37	14
34	40	13
35	44	33
36	82	61
37	85	64
38	86	65
39	87	66
40	88	67
41	89	16
42	90	68
43	90	69
44	92	71
45	105	79
46	106	82
47	107	84
48	110	85
49	111	86
50	112	87
51	113	89
52	115	94
53	116	92
54	116	93
55	117	95
56	121	64
57	122	64
\.


--
-- Data for Name: books_publisher; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.books_publisher (id, name, address) FROM stdin;
1	Азбука-Аттикус	\N
2	АСТ	\N
3	РИПОЛ классик	\N
4	Корпус	\N
5	М	\N
6	Азбука	\N
7	Иностранка	\N
8	Изд-во "АСТ"	\N
9	Эксмо	\N
10	Инспиря	\N
11	Инспирия	\N
12	Ридеро	\N
13	Литрес	\N
14	Аст	\N
15	Бель Летр	\N
16	Самиздат	\N
17	Синдбад	\N
18	Фреедом	\N
19	КЛЕВЕР	\N
20	Лике боок	\N
21	Бомбора	\N
22	Кислород	\N
\.


--
-- Data for Name: books_rating; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.books_rating (id, score, book_id, user_id, created_at, art_score, atmosphere_score, characters_score, plot_score, review) FROM stdin;
1	10	18	5	2025-10-24 19:45:06.208131+00	6	10	10	10	Пока просто -вау 😀
2	9	14	2	2025-10-24 20:42:37.980675+00	10	10	10	9	
3	\N	34	11	2025-10-28 14:12:49.247215+00	\N	\N	\N	\N	Эта серия книг  всегда напоминает мне мои юные годы, мой родной город. Персонажи этих книг стали для меня родными.
4	\N	37	2	2025-10-29 00:12:35.745227+00	\N	\N	\N	\N	
\.


--
-- Data for Name: books_ratingcomment; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.books_ratingcomment (id, body, created_at, rating_id, user_id) FROM stdin;
\.


--
-- Data for Name: books_readingsession; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.books_readingsession (id, started_at, ended_at, duration_seconds, start_page, end_page, progress_id) FROM stdin;
\.


--
-- Data for Name: collaborations_authoroffer; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.collaborations_authoroffer (id, title, offered_format, synopsis, review_requirements, text_review_length, video_review_type, video_requires_unboxing, video_requires_aesthetics, video_requires_review, considers_paid_collaboration, allow_regular_users, is_active, created_at, updated_at, author_id, book_id) FROM stdin;
4	Это будет удалено	electronic	Мосла	Алваос	1000	none	f	f	t	f	t	t	2025-10-27 13:56:39.693667+00	2025-10-27 13:56:39.693667+00	3	41
5	Пока город спит: страшные "сказки"	electronic	Когда город засыпает, скамейки, где днём звучал детский смех, пустеют, и даже самый знакомый парк становится чужим.\r\nНо самые страшные истории рождаются не там, где кто-то прячется в кустах, а там, где каждый делает вид, что не видит чужой беды.\r\nЭтот сборник – не про монстров из сказок и не о чудовищах под кроватью.\r\nЗдесь страшное всегда рядом: в тихих дворах и парках, в том, что взрослые учатся не замечать.\r\nЭто страшные сказки для взрослых – для тех, кто знает цену свету, потому что видел настоящую тьму.\r\nВедь самая тёмная тень – та, которую бросает человек.	до 30.10.25	0	none	f	t	t	f	t	t	2025-10-27 15:27:58.983228+00	2025-10-27 15:27:58.983228+00	8	35
\.


--
-- Data for Name: collaborations_authoroffer_expected_platforms; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.collaborations_authoroffer_expected_platforms (id, authoroffer_id, reviewplatform_id) FROM stdin;
11	4	1
12	4	3
13	4	5
14	5	3
15	5	5
16	5	6
\.


--
-- Data for Name: collaborations_authorofferresponse; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.collaborations_authorofferresponse (id, message, status, created_at, updated_at, offer_id, respondent_id, platform_links, author_last_read_at, last_activity_at, last_activity_by_id, respondent_last_read_at) FROM stdin;
8	Это сообщение чисто от аккаунта Читатель	accepted	2025-10-27 15:29:13.612218+00	2025-10-27 15:30:28.680536+00	5	11	здесь будут ссылки или список платформ.	2025-10-27 15:30:28.680536+00	2025-10-27 15:30:28.680536+00	8	2025-10-27 15:32:21.471805+00
9	Это сообщение от блогера	accepted	2025-10-27 15:30:14.60399+00	2025-10-27 15:31:45.643862+00	5	3	https://t.me/onepopuljarnyh	2025-10-27 15:31:52.003031+00	2025-10-27 15:31:45.643862+00	8	2025-10-27 15:35:24.990699+00
7	укауа	accepted	2025-10-27 13:58:08.122973+00	2025-10-27 13:59:35.03128+00	4	11	укеукп	2025-10-28 19:38:59.070616+00	2025-10-27 13:59:35.03128+00	3	2025-10-27 14:00:29.337711+00
10		pending	2025-10-29 08:46:55.780266+00	2025-10-29 08:46:55.806304+00	5	4		\N	2025-10-29 08:46:55.806304+00	4	2025-10-29 08:46:55.806304+00
\.


--
-- Data for Name: collaborations_authorofferresponsecomment; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.collaborations_authorofferresponsecomment (id, text, created_at, author_id, response_id) FROM stdin;
\.


--
-- Data for Name: collaborations_bloggergiveaway; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.collaborations_bloggergiveaway (id, title, description, link, deadline, is_active, created_at, blogger_id) FROM stdin;
\.


--
-- Data for Name: collaborations_bloggerinvitation; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.collaborations_bloggerinvitation (id, platform, title, link, description, created_at, blogger_id) FROM stdin;
1	telegram	Немного о писательстве, книгах и жизни	https://t.me/litgourmet1	Простыми словами о сложных книгах	2025-10-24 11:58:18.471757+00	4
2	tiktok	Поговорим о книгах?!	https://www.tiktok.com/@bookgourmet12?_t=ZM-90ofGjIxhQO&_r=1		2025-10-24 11:59:45.569637+00	4
\.


--
-- Data for Name: collaborations_bloggerplatformpresence; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.collaborations_bloggerplatformpresence (id, custom_platform_name, followers_count, platform_id, request_id) FROM stdin;
3		4000	3	2
4	Литературный гурман	5600	2	3
\.


--
-- Data for Name: collaborations_bloggerrating; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.collaborations_bloggerrating (id, score, successful_collaborations, failed_collaborations, total_collaborations, blogger_id) FROM stdin;
\.


--
-- Data for Name: collaborations_bloggerrequest; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.collaborations_bloggerrequest (id, title, accepts_paper, accepts_electronic, accepts_audio, additional_info, is_active, created_at, updated_at, blogger_id, collaboration_terms, collaboration_type, review_platform_links, target_audience, blogger_collaboration_goal, blogger_collaboration_goal_other, blogger_collaboration_platform_id, blogger_collaboration_platform_other) FROM stdin;
2	Ищу новинки	t	t	t		t	2025-10-25 17:42:45.331446+00	2025-10-25 17:42:45.331446+00	9		mixed		authors			\N	
3	Популяризирует реализм, как жанр	t	t	t	Готова популяризировать реализм русской современной прозы вместе с вами?!	t	2025-10-27 17:21:01.895873+00	2025-10-27 17:21:01.895873+00	4		barter	https://t.me/litgourmet1	authors			\N	
6	Ищу блогера для взаиморепоста	f	f	f		t	2025-10-28 19:38:13.168543+00	2025-10-28 19:38:13.168543+00	3		barter		bloggers	cross_promo		3	
\.


--
-- Data for Name: collaborations_bloggerrequest_preferred_genres; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.collaborations_bloggerrequest_preferred_genres (id, bloggerrequest_id, genre_id) FROM stdin;
5	2	2
6	2	7
7	2	11
8	2	13
10	2	18
11	2	23
12	2	24
13	3	24
14	3	13
\.


--
-- Data for Name: collaborations_bloggerrequest_review_formats; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.collaborations_bloggerrequest_review_formats (id, bloggerrequest_id, reviewplatform_id) FROM stdin;
3	2	3
4	2	5
5	2	6
6	3	1
7	3	2
8	3	3
9	3	4
10	3	5
11	3	6
14	6	1
15	6	3
\.


--
-- Data for Name: collaborations_bloggerrequestresponse; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.collaborations_bloggerrequestresponse (id, message, status, created_at, updated_at, responder_id, request_id, book_id, blogger_last_read_at, last_activity_at, last_activity_by_id, platform_link, responder_last_read_at, responder_type) FROM stdin;
1	ронрго	pending	2025-10-28 19:38:31.476767+00	2025-10-28 21:48:31.014018+00	11	6	\N	2025-10-28 21:48:31.141942+00	2025-10-28 21:48:31.014018+00	3	https://t.me/onepopuljarnyh	2025-10-28 19:38:31.485049+00	blogger
\.


--
-- Data for Name: collaborations_bloggerrequestresponsecomment; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.collaborations_bloggerrequestresponsecomment (id, text, created_at, author_id, response_id) FROM stdin;
1	Прила	2025-10-28 21:48:31.007981+00	3	1
\.


--
-- Data for Name: collaborations_collaboration; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.collaborations_collaboration (id, status, deadline, review_links, author_confirmed, partner_confirmed, completed_at, created_at, updated_at, author_id, offer_id, partner_id, request_id, author_approved, partner_approved, author_last_read_at, last_activity_at, last_activity_by_id, partner_last_read_at) FROM stdin;
5	negotiation	2025-10-30		f	f	\N	2025-10-27 15:30:28.657788+00	2025-10-27 15:41:07.816218+00	8	5	11	\N	t	t	2025-10-27 15:41:14.038266+00	2025-10-27 15:41:07.814215+00	8	2025-10-27 15:48:35.733537+00
6	negotiation	2025-10-30		f	f	\N	2025-10-27 15:31:45.624412+00	2025-10-27 15:40:56.704793+00	8	5	3	\N	t	t	2025-10-27 15:42:27.721011+00	2025-10-27 15:40:56.702845+00	8	2025-10-27 15:49:26.333719+00
4	negotiation	2025-11-04		f	f	\N	2025-10-27 13:59:35.002761+00	2025-10-27 14:00:03.83165+00	3	4	11	\N	t	t	2025-10-27 15:49:48.363895+00	2025-10-27 14:00:03.83165+00	11	2025-10-27 15:32:17.117308+00
\.


--
-- Data for Name: collaborations_collaborationmessage; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.collaborations_collaborationmessage (id, text, created_at, author_id, collaboration_id) FROM stdin;
7	укауа	2025-10-27 13:58:08.122973+00	11	4
8	Поамома	2025-10-27 13:58:36.022752+00	3	4
9	аукпку	2025-10-27 13:58:53.339703+00	11	4
10	Это сообщение чисто от аккаунта Читатель	2025-10-27 15:29:13.612218+00	11	5
11	Это сообщение от блогера	2025-10-27 15:30:14.60399+00	3	6
12	И переписка их отклика перенесется сюда	2025-10-27 15:31:58.279753+00	11	5
13	ну может так и ок\r\nа комментарии они для всех видимы?	2025-10-27 15:34:30.347774+00	8	5
14	работает	2025-10-27 15:40:56.702845+00	8	6
15	только мы их видим	2025-10-27 15:40:58.15683+00	11	5
16	работает	2025-10-27 15:41:07.814215+00	8	5
\.


--
-- Data for Name: collaborations_communitybookclub; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.collaborations_communitybookclub (id, title, city, meeting_format, meeting_schedule, link, description, created_at, submitted_by_id) FROM stdin;
\.


--
-- Data for Name: collaborations_reviewplatform; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.collaborations_reviewplatform (id, name, url) FROM stdin;
1	ВК	https://vk.com
2	ТикТок	https://www.tiktok.com
3	Телеграм	https://t.me
4	MAX	
5	LiveLib	https://www.livelib.ru
6	LitRes	https://www.litres.ru
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
1	2025-10-24 14:05:12.473583+00	13	Полет аистов	2	[{"changed": {"fields": ["Cover"]}}]	12	1
2	2025-10-24 17:22:19.819955+00	23	Кто-то просит прощения	2	[{"changed": {"fields": ["Cover"]}}]	12	1
3	2025-10-25 12:52:17.161084+00	17	мистика	3		9	1
4	2025-10-25 12:53:08.349722+00	18	Красные цепи	2	[]	12	1
5	2025-10-25 16:06:03.881558+00	22	трансгрессивная литература	3		9	1
6	2025-10-25 16:06:03.887957+00	21	современная проза	3		9	1
7	2025-10-26 23:00:20.021536+00	39	Почтальонша	2	[{"changed": {"fields": ["Title"]}}]	12	1
8	2025-10-27 08:46:58.732821+00	40	Лонтано	2	[{"changed": {"fields": ["Synopsis"]}}]	12	1
9	2025-10-27 13:44:27.476899+00	2	Живу_в_библиотеке ↔ Любитель_книг (Переговоры)	3		48	1
10	2025-10-27 13:45:00.522752+00	1	Живу_в_библиотеке → Пока город спит: страшные "сказки"	3		42	1
11	2025-10-27 13:45:00.526493+00	2	Живу_в_библиотеке → Это предложение будет удалено	3		42	1
12	2025-10-27 13:45:00.527506+00	3	Живу_в_библиотеке → Это предложение будет удалено	3		42	1
13	2025-10-27 13:45:00.529018+00	4	Живу_в_библиотеке → Это предложение будет удалено	3		42	1
14	2025-10-27 13:45:00.530037+00	5	Любитель_книг → Это предложение будет удалено	3		42	1
15	2025-10-27 13:45:00.531034+00	6	Живу_в_библиотеке → Это предложение будет удалено	3		42	1
16	2025-10-27 13:45:00.532036+00	7	Живу_в_библиотеке → Это предложение будет удалено	3		42	1
17	2025-10-27 13:45:00.534576+00	8	Любитель_книг → Это предложение будет удалено	3		42	1
18	2025-10-27 13:46:24.388731+00	2	Это предложение будет удалено — Электронная	3		38	1
19	2025-10-27 13:55:43.318132+00	3	Это предложение будет удалено — Электронная	3		38	1
20	2025-10-27 13:57:43.090387+00	3	Живу_в_библиотеке ↔ Любитель_книг (Переговоры)	3		48	1
21	2025-10-27 15:23:41.372892+00	1	TarAleksin ↔ Живу_в_библиотеке (Переговоры)	3		48	1
22	2025-10-27 15:24:11.814478+00	1	Пока город спит: страшные "сказки" — Электронная	3		38	1
23	2025-10-28 19:36:22.228473+00	5	Ищу блогера на совместный розыгрыш	3		39	1
24	2025-10-28 19:36:22.237633+00	4	Это будет удалено	3		39	1
25	2025-10-28 19:36:22.23963+00	1	Возьму электронную книгу на прочтение	3		39	1
26	2025-10-29 07:45:54.411313+00	101	Идеальный план	2	[{"changed": {"fields": ["Cover"]}}]	12	1
27	2025-10-29 08:01:10.929628+00	58	Спортивный любовный роман	3		9	1
28	2025-10-29 08:01:10.938247+00	52	Dark Romans	3		9	1
29	2025-10-29 08:01:10.941231+00	50	Любовное фэнтези	3		9	1
30	2025-10-29 08:01:10.94323+00	47	Young Adult	3		9	1
31	2025-10-29 08:01:10.946235+00	36	Young adult	3		9	1
32	2025-10-29 08:01:10.948237+00	35	Фантастика Постапокалипсис Антиутопия	3		9	1
33	2025-10-29 08:01:10.950399+00	31	Хоррор	3		9	1
34	2025-10-29 08:01:10.952526+00	16	Городское фэнтези	3		9	1
35	2025-10-29 10:30:28.506402+00	7	Ищу блогеров для взаминого репоста	3		39	1
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	admin	logentry
2	auth	permission
3	auth	group
4	auth	user
5	contenttypes	contenttype
6	sessions	session
7	books	author
8	books	publisher
9	books	genre
10	books	isbnmodel
11	books	audiobook
12	books	book
13	books	readingsession
14	books	rating
15	books	ratingcomment
16	accounts	profile
17	accounts	premiumpayment
18	accounts	premiumsubscription
19	shelves	shelf
20	shelves	shelfitem
21	shelves	event
22	shelves	eventparticipant
23	shelves	bookprogress
24	shelves	bookprogressmedium
25	shelves	readinglog
26	shelves	characternote
27	shelves	progressannotation
28	shelves	readingfeedentry
29	shelves	readingfeedcomment
30	shelves	homelibraryentry
31	games	forgottenbookentry
32	games	game
33	games	gameshelfstate
34	games	gameshelfbook
35	games	gameshelfpurchase
36	games	bookjourneyassignment
37	collaborations	reviewplatform
38	collaborations	authoroffer
39	collaborations	bloggerrequest
40	collaborations	bloggerplatformpresence
41	collaborations	authorofferresponse
42	collaborations	authorofferresponsecomment
43	collaborations	bloggerrequestresponse
44	collaborations	bloggerrequestresponsecomment
45	collaborations	bloggerinvitation
46	collaborations	bloggergiveaway
47	collaborations	communitybookclub
48	collaborations	collaboration
49	collaborations	collaborationmessage
50	collaborations	bloggerrating
51	reading_clubs	readingclub
52	reading_clubs	readingparticipant
53	reading_clubs	readingnorm
54	reading_clubs	discussionpost
55	reading_marathons	readingmarathon
56	reading_marathons	marathontheme
57	reading_marathons	marathonparticipant
58	reading_marathons	marathonentry
59	user_ratings	userpointevent
60	games	bookexchangeacceptedbook
61	games	bookexchangeoffer
62	games	bookexchangechallenge
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	contenttypes	0001_initial	2025-09-18 09:44:29.81042+00
2	auth	0001_initial	2025-09-18 09:44:29.930101+00
3	admin	0001_initial	2025-09-18 09:44:29.966141+00
4	admin	0002_logentry_remove_auto_add	2025-09-18 09:44:29.976154+00
5	admin	0003_logentry_add_action_flag_choices	2025-09-18 09:44:29.98515+00
6	contenttypes	0002_remove_content_type_name	2025-09-18 09:44:30.003165+00
7	auth	0002_alter_permission_name_max_length	2025-09-18 09:44:30.01214+00
8	auth	0003_alter_user_email_max_length	2025-09-18 09:44:30.022138+00
9	auth	0004_alter_user_username_opts	2025-09-18 09:44:30.029162+00
10	auth	0005_alter_user_last_login_null	2025-09-18 09:44:30.040145+00
11	auth	0006_require_contenttypes_0002	2025-09-18 09:44:30.043142+00
12	auth	0007_alter_validators_add_error_messages	2025-09-18 09:44:30.053142+00
13	auth	0008_alter_user_username_max_length	2025-09-18 09:44:30.072342+00
14	auth	0009_alter_user_last_name_max_length	2025-09-18 09:44:30.079751+00
15	auth	0010_alter_group_name_max_length	2025-09-18 09:44:30.090262+00
16	auth	0011_update_proxy_permissions	2025-09-18 09:44:30.097233+00
17	auth	0012_alter_user_first_name_max_length	2025-09-18 09:44:30.106499+00
18	sessions	0001_initial	2025-09-18 09:44:30.122046+00
19	books	0001_initial	2025-09-18 11:08:52.222184+00
20	books	0002_rating_created_at	2025-09-19 08:46:54.06388+00
21	books	0003_remove_book_image_book_cover_alter_book_authors_and_more	2025-09-19 09:28:02.427615+00
22	accounts	0001_initial	2025-09-19 10:08:30.587148+00
23	accounts	0002_profile_link1_profile_link2_profile_link3_and_more	2025-09-19 10:55:03.754672+00
24	shelves	0001_initial	2025-09-19 11:28:58.181034+00
25	shelves	0002_event_eventparticipant_bookprogress	2025-09-19 11:38:39.688432+00
26	books	0004_bookprogress_rename_pages_isbnmodel_total_pages_and_more	2025-09-19 16:42:30.657063+00
27	shelves	0003_alter_bookprogress_options_and_more	2025-09-22 09:57:51.41215+00
28	shelves	0004_readingsession	2025-09-22 10:02:28.075513+00
29	shelves	0005_delete_readingsession	2025-09-25 09:24:59.107688+00
30	books	0005_alter_readingsession_progress_delete_bookprogress	2025-09-25 11:02:42.056151+00
31	shelves	0006_readinglog	2025-09-25 20:07:45.725237+00
32	shelves	0007_bookprogress_character_notes_and_more	2025-09-25 20:32:59.04605+00
33	shelves	0008_remove_bookprogress_character_notes_characternote	2025-09-26 08:54:57.179403+00
34	books	0006_rating_art_score_rating_atmosphere_score_and_more	2025-09-26 09:49:32.671605+00
35	books	0007_remove_rating_language_score_and_more	2025-09-26 20:44:30.015834+00
36	books	0008_book_edition_group_key	2025-09-29 12:37:32.517332+00
37	shelves	0009_bookprogress_audio_length_and_more	2025-09-29 15:29:22.138796+00
38	games	0001_initial	2025-09-30 00:12:54.866797+00
39	games	0002_alter_gameshelfpurchase_book	2025-09-30 14:40:05.843925+00
40	shelves	0010_homelibraryentry	2025-09-30 15:44:48.782949+00
41	games	0003_gameshelfstate_started_at	2025-09-30 18:36:33.922263+00
42	games	0004_bookjourneyassignment	2025-10-01 12:03:01.542885+00
43	games	0005_forgottenbookentry	2025-10-02 19:54:27.644474+00
44	books	0009_genre_slug	2025-10-02 22:45:56.662269+00
45	books	0010_genre_ascii_slugs	2025-10-02 22:59:54.234893+00
46	shelves	0011_homelibraryentry_enhancements	2025-10-03 13:01:22.978655+00
47	shelves	0012_remove_homelibraryentry_acquired_from_and_more	2025-10-03 13:01:23.020168+00
48	collaborations	0001_initial	2025-10-03 21:19:58.070144+00
49	collaborations	0002_authoroffer_book	2025-10-03 22:06:42.091204+00
50	collaborations	0003_authorofferresponse_platform_links_and_more	2025-10-04 12:58:24.669833+00
51	collaborations	0004_authorofferresponsecomment	2025-10-04 13:58:33.131042+00
52	collaborations	0005_bloggerrequest_collaboration_type_and_more	2025-10-04 19:43:50.643094+00
53	shelves	0013_bookprogressmedium_and_log_update	2025-10-05 11:02:51.925415+00
54	shelves	0014_readingfeed	2025-10-06 12:16:09.771994+00
55	reading_clubs	0001_initial	2025-10-06 13:43:35.358026+00
56	reading_marathons	0001_initial	2025-10-06 20:48:33.33593+00
57	collaborations	0006_bloggerinvitation_bloggergiveaway	2025-10-07 21:18:47.177645+00
58	shelves	0015_progressannotation	2025-10-08 19:12:10.890952+00
59	books	0011_ratingcomment	2025-10-10 17:23:03.664375+00
60	collaborations	0007_communitybookclub	2025-10-11 20:16:54.691292+00
61	user_ratings	0001_initial	2025-10-11 21:34:57.982552+00
62	books	0012_book_created_at	2025-10-13 18:11:00.172873+00
63	shelves	0016_homelibraryentry_read_at	2025-10-20 21:40:33.223534+00
64	reading_clubs	0002_discussionpost_parent	2025-10-21 12:22:17.132807+00
65	books	0013_book_contributors	2025-10-22 23:10:09.289059+00
66	accounts	0003_premiumpayment_premiumsubscription	2025-10-23 11:59:42.256399+00
67	collaborations	0008_collaborationmessage	2025-10-23 19:41:55.068164+00
68	accounts	0004_rename_accounts_premium_sub_user_end_idx_accounts_pr_user_id_5c1663_idx	2025-10-24 11:24:29.119719+00
69	books	0014_alter_ratingcomment_id	2025-10-24 11:24:29.229845+00
70	reading_clubs	0003_alter_readingclub_slug	2025-10-24 11:24:29.320566+00
71	user_ratings	0002_rename_user_events_idx_user_rating_user_id_3ba47c_idx_and_more	2025-10-24 11:24:29.392351+00
72	games	0006_bookexchange	2025-10-25 10:59:55.727593+00
73	collaborations	0009_add_default_review_platforms	2025-10-25 15:43:06.94683+00
74	collaborations	0010_collaboration_approvals	2025-10-27 11:30:27.663998+00
75	collaborations	0011_activity_tracking	2025-10-27 12:48:05.302252+00
76	shelves	0017_shelf_is_managed	2025-10-28 13:45:54.646272+00
77	collaborations	0007_bloggerrequest_target_audience_and_more	2025-10-28 19:10:51.718641+00
78	collaborations	0012_merge_20251028_2010	2025-10-28 19:10:51.723649+00
79	collaborations	0013_bloggerrequest_blogger_collaboration_fields	2025-10-28 19:35:40.46821+00
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
z9j07ctr4lnvb3elnjoj40603v4orxu0	.eJxVi0sKwjAQhu-StZQkje3oUvAc4Z-ZhBS1gmlW4t1toQvdfo-3iWhLia2mV5zUnI03h1_GkFuaNwGRZ5uX2u2odtcHpvtlD_6uglrWRQan2eLoQhJN7AYOnkDEhNHLKbGCQdlltdxTP9otXKcgAb1mNp8vcu01Hg:1vCFhg:MCB3kVYECKJhhVvrPnSt68ucYofXVbfVMaqfvJoxsws	2025-11-07 11:11:28.470604+00
bala3a0doqrflil254fsv2yaz9k3pny6	.eJxVi0sKwjAQhu-StZRE86pLwXOEmfkTUtQKplmJd7eFLnT7Pd4qUV9q6i2_0gR1VkYdfhmT3PK8CRJ59nlpw47acH3QdL_swd9VqdV1gQk-gm3J0I5GVyx7XYzEEwBvGCUHjRACC4_i6GhEiDVZC0gsWX2-cyk1kA:1vDIq1:lnsAFOlFaEN0yFjyd77_vFEDBPw7jvYW1exUiwYkSu0	2025-11-10 08:44:25.410354+00
0ahy9rn940f5iv3bg30a39foee6lq5st	.eJxVi0sKwyAQQO_iuoTojL8uCzmHjKNiaJtCjavSuyeBLNrt-3xEoL7W0Ft-hzmJqwBx-WWR-J6XQxDzqy9rG07UhulJ8-N2Bn9XpVb3BSFqWaRKZEhSARdRj6NJyEZF2GUmDzopK62znK0CdJ5BYy4KnAfx3QA0czL1:1vCFij:n-VGTIs1WTXOIp2CZd_zmwFp1l7au5-SqjTX1LkBeAg	2025-11-07 11:12:33.684154+00
o0p2x9kzskw5kbcpdqtxt8v0cstxe2eh	.eJxVjMEKwjAQRP8lZymbVJOuR6HfESbbDSlqBdOcxH_XQg86xzdv5mUi2lpiq_qM82TOJpjDL0uQqy5bAZFHW9ba7ah24x3z7bILf6uCWrYvzwTrT9axJiWLBD66obc54RvnHXrhTCSZIYGVMwJbDDwFRx7m_QFHezQR:1vDKbp:7UMyNhJRrGDCdNQizPj_lDeivIq_s0zjXPfmug44zLE	2025-11-10 10:37:53.097046+00
efrg2rw4s2v6sbay8gebot4ywaecw4sx	.eJxVi0sKwjAQQO-StZR8Jj-XgucIM5MJKWoF067Eu6vQhW7f56kKbmsv25BHmas6KmPV4RcS8kWWr0Hm-7asY9rRmM43nK-nPfi7Oo7-WVqOlis0xBq8QWddSiETRdGYsiGIZLj60CRyBGaG5qhqByLgUQf1egN-4zSp:1vDKpd:uxRhFg8DLC2fgpXASNqnWVKDJ6Efy4dQKD8OLYdYs3Q	2025-11-10 10:52:09.844145+00
kfuijn828or9116fuhleee82nevogxuo	.eJxVizsOwjAMQO_iGVXUdWjCiNRzRE5sKxVQJNJMiLvzUQdY3-cBkdtaYqt6j7PAEQh2vyxxPuvyEZzzrS1r7TZUu-nK8-W0BX9X4Vq-Cwr6oIYkGnRQCmFM4uzgs6L43tDtExsyOfOYsu_TiOoGMnkLhecLauU0tw:1vCGOi:n7GzPRzYTEkU6FeLzd64sB8fXMTk3DehUtO6RwrjFB4	2025-11-07 11:55:56.296805+00
shtxj50j1umtb43k39zwvav19irbqxlm	.eJxVi0EKwjAQRe-StZSZdCahLgXPESaThBS1gmlWxbtboQvdfd5_bzNB-lpDb_kV5mTOBtGcfmEUveXl-4jqsy9rGw7UhutD5vvlEP6qKq3uSSkOJ7Iw-ZRHr5glMQPEsYwMnkmjWt6nUrQAJJFBqCASO6vFsXl_AFKVMzM:1vDLWH:WUvHqyd7Kj1YeZCebfZxlZpzetd6TsoB0UCdl-5nGx0	2025-11-10 11:36:13.199224+00
dr931znadfhjo4qyxbfbs6eohjsq30ju	.eJxVi80OwiAMgN-lZ7OsDDrwaOJzkFJoWNSZyDgZ311NdtDr9_OEyH2rsbfyiEuGIzg4_LLEcinrV7DIva9bG3bUhvONl-tpD_6uyq1-FrTiyScURTZ2norHMEqyzDirMRQ0G1R2gazkLI4y6UTo_YiJQrHwegM_UjOP:1vCHA2:I4ZhMUYJYXXb2oC_supu6g2G7WzmrzD6pB3Y7XwaeiA	2025-11-07 12:44:50.852241+00
slxkuxzql34h22shlcpv6lpli196z6cp	.eJxVi0kKwjAUhu-StZTMg0uh5wgvL7-kqBVMsxLvrkIXuv2Gp8g0tpZHxyMvVRyFF4dfVogvWL-CmO9j3fq0oz7NN1qupz34uxr19ll0MT4qjRCStMVY6ZxKScsQHTycBkKqwROYrT-XamGkZdYeQIysxOsNGZszcA:1vCHlq:ZGEe1VR9yoVTuHw1UmGWg1wp0wek4sRlRZCQhtAh6FI	2025-11-07 13:23:54.915339+00
wfz7bzubdj7l18aoog34lpz5x7m3mr8y	.eJxVjMEKwjAQRP8lZymbVJOuR6HfESbbDSlqBdOcxH_XQg86xzdv5mUi2lpiq_qM82TOJpjDL0uQqy5bAZFHW9ba7ah24x3z7bILf6uCWrYvzwTrT9axJiWLBD66obc54RvnHXrhTCSZIYGVMwJbDDwFRx7m_QFHezQR:1vDlgX:ENPhKW4FdyBsBv9EsujH1wYKAvOpyvV2EyI6RvKd5PU	2025-11-11 15:32:33.179845+00
u1ssmq22o0bqcr6dsthlfh09yocj47ov	.eJxVjMEKwjAQRP8lZymbVJOuR6HfESbbDSlqBdOcxH_XQg86xzdv5mUi2lpiq_qM82TOJpjDL0uQqy5bAZFHW9ba7ah24x3z7bILf6uCWrYvzwTrT9axJiWLBD66obc54RvnHXrhTCSZIYGVMwJbDDwFRx7m_QFHezQR:1vDmSL:9RoxsiaOU8I3PE4PuhnJ1pNcDlxxikMIMdwjE5Tqzho	2025-11-11 16:21:57.499427+00
nwncz35kl98jlvfu5dw2g2djeyw2utv9	.eJxVizsOwjAMQO_iGVXUdWjCiNRzRE5sKxVQJNJMiLvzUQdY3-cBkdtaYqt6j7PAEQh2vyxxPuvyEZzzrS1r7TZUu-nK8-W0BX9X4Vq-Cwr6oIYkGnRQCmFM4uzgs6L43tDtExsyOfOYsu_TiOoGMnkLhecLauU0tw:1vCIWB:pKS6HZ0gNPetCc3Oxcb4bMOP4adTJYe-JiYcHgwmh2Y	2025-11-07 14:11:47.77661+00
srjrqly1tjdka1ofg7fb93bdzxo4nh1a	.eJxVi0sKwyAQQO_iuoTojL8uCzmHjKNiaJtCjavSuyeBLNrt-3xEoL7W0Ft-hzmJqwBx-WWR-J6XQxDzqy9rG07UhulJ8-N2Bn9XpVb3BSFqWaRKZEhSARdRj6NJyEZF2GUmDzopK62znK0CdJ5BYy4KnAfx3QA0czL1:1vCK4U:gJBlpAVKvJMamDfGlzorBNiAIG2Dgcqy5CuM269OOTw	2025-11-07 15:51:18.68683+00
oisxes54h2z34drnje1zt26atbmykz72	.eJxVi80KwjAMgN-lZxnJsraZR2HPUZK00qFOsNtJfHcVdtDr9_N0Sba1pq2VR5qzOzokd_iFKnYpy9eI2X1b1tbtqHXTTebraQ_-riqtfpYQDdWr4hi5oDckkjNrDn2E6JWAh4IaQYCYhKgHEQ-MPA4hZGP3egNNJzLn:1vDrln:rhSqvefLwhIFYVtL5CB_97mJr3E_hIecloGNBQN7ZtI	2025-11-11 22:02:23.036739+00
67o4kigmtqe0l515zlo36l66dsnmap2m	.eJxVi0sKwyAQQO_iuoTojL8uCzmHjKNiaJtCjavSuyeBLNrt-3xEoL7W0Ft-hzmJqwBx-WWR-J6XQxDzqy9rG07UhulJ8-N2Bn9XpVb3BSFqWaRKZEhSARdRj6NJyEZF2GUmDzopK62znK0CdJ5BYy4KnAfx3QA0czL1:1vCKIH:rZInDxfYX6zz5mGL7bzfSUrNXbeXCUDvTDz1Yxb0X10	2025-11-07 16:05:33.087777+00
m8wrcc3xo1ved97u39xk4v0f3ub4xv50	.eJxVi0sOwiAQhu_C2jRAURiXJp6DzAx_Q6PWRMrKeHc16UK33-NpMve15t7wyHMxR-OC2f1CYb1g-RpWvfdlbcOG2nC-8Xw9bcHfVbnVz-JTIiuiB2USjxHeWU-FECb1AQlRaYwsgoipOGtBySHukyCoIpjXG34yNOk:1vE2Hn:HWdjnyFgj7UqO5FaosxS5xtOkSgujBWgsLL1Bw0MtJQ	2025-11-12 09:16:07.918269+00
cejiidu4kpb4gg0ilt1bnz8bjrnydq56	.eJxVi80OwiAMgN-lZ7OsDDrwaOJzkFJoWNSZyDgZ311NdtDr9_OEyH2rsbfyiEuGIzg4_LLEcinrV7DIva9bG3bUhvONl-tpD_6uyq1-FrTiyScURTZ2norHMEqyzDirMRQ0G1R2gazkLI4y6UTo_YiJQrHwegM_UjOP:1vCKvC:ZWOvV4PgMXfemougkP3t6Tnim1TCcyZPIUYJa9d1ANo	2025-11-07 16:45:46.927984+00
msya8jyus3il9egf3vtwddx1u1oj60hh	.eJxVi0sKwjAQhu-StZQkje3oUvAc4Z-ZhBS1gmlW4t1toQvdfo-3iWhLia2mV5zUnI03h1_GkFuaNwGRZ5uX2u2odtcHpvtlD_6uglrWRQan2eLoQhJN7AYOnkDEhNHLKbGCQdlltdxTP9otXKcgAb1mNp8vcu01Hg:1vCOa0:M62MB6qbS6WnOGa7LjMa0rgZc2EWOUFAWN86nUVtOw8	2025-11-07 20:40:08.164143+00
o46cmnqnllnl2lpvci8dpt8bhow7n3bl	.eJxVjMEKwjAQRP8lZymbVJOuR6HfESbbDSlqBdOcxH_XQg86xzdv5mUi2lpiq_qM82TOJpjDL0uQqy5bAZFHW9ba7ah24x3z7bILf6uCWrYvzwTrT9axJiWLBD66obc54RvnHXrhTCSZIYGVMwJbDDwFRx7m_QFHezQR:1vCcTu:v7u5YW9i_tkjtIKNiGG7qZTy6KWpUeGrpJdLRDYSleg	2025-11-08 11:30:46.844938+00
6q1s2k28ecau88q25phfodo9nzzjvafe	.eJxVi0sKwjAQhu-StZQkje3oUvAc4Z-ZhBS1gmlW4t1toQvdfo-3iWhLia2mV5zUnI03h1_GkFuaNwGRZ5uX2u2odtcHpvtlD_6uglrWRQan2eLoQhJN7AYOnkDEhNHLKbGCQdlltdxTP9otXKcgAb1mNp8vcu01Hg:1vCgBC:Zcyvk5XeDtyJQRCaABtNC-rB2kZnFpHuRwZ51pBZ7SM	2025-11-08 15:27:42.823485+00
er5kndl2mz4blzcnvz674dcti0e40zdg	.eJxVjEEKwjAQRe-StZSmaSYzLgXPEWYmU1LUCqZdiXeXQhe6ff_993aZt7Xmrdkrz8WdHbrTLxPWmy37wKrPbVlbd6DWXR883y-H8Peq3Ore0iRAQ0BPhEMIClw0TZRYpjSahB4NE0VjRONIcRQW8MYA0IMv7vMFPnIztA:1vChJq:cbAnbsS2pEzqD4krGIDTeJZWKm-FGRWAGfBbdxaai8o	2025-11-08 16:40:42.722616+00
xlqiaujo7gu1c0pv4uwutfrf0zuopfp6	.eJxVi0EOgjAQRe_StSFQhil1acI5mulMJyUqJpaujHcHEha6_O-_9zGB6ppDLekdZjFX483ll0Xie1qOg5hfdVlLc6LSTE-aH7dT-KsylbwnLrFAN3iivrWA2AHuGwRIWhxJves9iY3eRSYroKygzmEcoyrKYL4bRW40Wg:1vChgi:6OANVWU89NVPrI1g9L8SB1a5-QlLBz6U3PYIst73qM4	2025-11-08 17:04:20.914345+00
eliq94mw0vx2yww5s1s0v6cyeoynsk3m	.eJxVi0EOgjAQRe_StSFQhil1acI5mulMJyUqJpaujHcHEha6_O-_9zGB6ppDLekdZjFX483ll0Xie1qOg5hfdVlLc6LSTE-aH7dT-KsylbwnLrFAN3iivrWA2AHuGwRIWhxJves9iY3eRSYroKygzmEcoyrKYL4bRW40Wg:1vCi6K:A5J7pYjhsywhqJouZJ_GSBY31CnS7CPiOMVH6iQLGvI	2025-11-08 17:30:48.896965+00
wuvqw98d77j0qpzikp99a42oibogz5as	.eJxVi0sKwjAQhu-StZQkje3oUvAc4Z-ZhBS1gmlW4t1toQvdfo-3iWhLia2mV5zUnI03h1_GkFuaNwGRZ5uX2u2odtcHpvtlD_6uglrWRQan2eLoQhJN7AYOnkDEhNHLKbGCQdlltdxTP9otXKcgAb1mNp8vcu01Hg:1vCioI:c_-3M-btr1T7CKBkhFbexkbhG7jLwMEZsIrvNZb_Yc8	2025-11-08 18:16:14.917464+00
eqjyq7voznxq112vm1kwnr6wthgh7kq7	.eJxVi0sKwyAQQO_iuoTojL8uCzmHjKNiaJtCjavSuyeBLNrt-3xEoL7W0Ft-hzmJqwBx-WWR-J6XQxDzqy9rG07UhulJ8-N2Bn9XpVb3BSFqWaRKZEhSARdRj6NJyEZF2GUmDzopK62znK0CdJ5BYy4KnAfx3QA0czL1:1vCoSp:P-8OoodbJV5jPUXE7lSlmNaJpctHa2nW8JpSkdsHBAI	2025-11-09 00:18:27.573997+00
\.


--
-- Data for Name: games_bookexchangeacceptedbook; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.games_bookexchangeacceptedbook (id, accepted_at, finished_at, review_submitted_at, completed_at, updated_at, book_id, challenge_id, offer_id) FROM stdin;
1	2025-10-28 14:09:25.577221+00	2025-10-28 14:11:25.685864+00	2025-10-28 14:12:49.247215+00	2025-10-28 14:12:49.247215+00	2025-10-28 14:12:49.287679+00	34	4	3
\.


--
-- Data for Name: games_bookexchangechallenge; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.games_bookexchangechallenge (id, round_number, target_books, status, locked_at, deadline_at, completed_at, started_at, created_at, updated_at, game_id, shelf_id, user_id) FROM stdin;
1	1	5	active	\N	\N	\N	2025-10-25 11:01:56.866622+00	2025-10-25 11:01:56.866622+00	2025-10-25 11:01:56.866622+00	3	25	3
2	1	1	active	\N	\N	\N	2025-10-25 15:28:09.666544+00	2025-10-25 15:28:09.666544+00	2025-10-25 15:28:09.666544+00	3	30	2
3	1	1	active	\N	\N	\N	2025-10-27 10:38:44.399306+00	2025-10-27 10:38:44.399306+00	2025-10-27 10:38:44.399306+00	3	49	7
4	1	2	active	\N	\N	\N	2025-10-28 14:05:21.42812+00	2025-10-28 14:05:21.42812+00	2025-10-28 14:05:21.42812+00	3	54	11
\.


--
-- Data for Name: games_bookexchangechallenge_genres; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.games_bookexchangechallenge_genres (id, bookexchangechallenge_id, genre_id) FROM stdin;
1	1	2
2	1	4
3	1	6
4	1	9
5	1	10
6	1	11
7	1	12
10	2	8
11	2	9
12	2	12
13	2	6
14	3	6
15	3	10
17	3	18
18	3	19
19	3	23
20	4	12
21	4	4
22	4	6
23	4	23
\.


--
-- Data for Name: games_bookexchangeoffer; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.games_bookexchangeoffer (id, status, note, created_at, responded_at, updated_at, book_id, challenge_id, offered_by_id) FROM stdin;
1	pending		2025-10-25 20:34:21.247839+00	\N	2025-10-25 20:34:21.247839+00	8	2	3
2	pending		2025-10-27 19:55:51.98269+00	\N	2025-10-27 19:55:51.98269+00	27	3	3
3	accepted		2025-10-28 14:06:13.465436+00	2025-10-28 14:09:25.567224+00	2025-10-28 14:09:25.567224+00	34	4	3
\.


--
-- Data for Name: games_bookjourneyassignment; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.games_bookjourneyassignment (id, stage_number, status, started_at, completed_at, created_at, updated_at, book_id, user_id) FROM stdin;
1	1	in_progress	2025-10-27 20:36:06.730861+00	\N	2025-10-27 20:36:06.719858+00	2025-10-27 20:36:06.730861+00	35	12
\.


--
-- Data for Name: games_forgottenbookentry; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.games_forgottenbookentry (id, added_at, selected_month, selected_at, finished_at, review_submitted_at, completed_at, updated_at, book_id, user_id) FROM stdin;
\.


--
-- Data for Name: games_game; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.games_game (id, slug, title, description, is_active, created_at, updated_at) FROM stdin;
1	read-before-buy	Читай прежде чем покупать	Получайте по одному баллу за каждую прочитанную страницу и дополнительные бонусы за большие книги. Накапливайте 1300 баллов, чтобы добавить новую книгу на полку.	t	2025-10-24 11:08:23.154907+00	2025-10-24 11:08:23.154907+00
2	forgotten-books-12	12 забытых книг	Соберите двенадцать книг из своей домашней библиотеки и каждый месяц читайте одну новую. Первый день месяца выбирает следующую книгу случайным образом — у вас есть целый месяц, чтобы прочитать её и написать отзыв.	t	2025-10-24 11:08:23.163447+00	2025-10-24 11:08:23.163447+00
3	book-exchange-challenge	Обмен читательскими вызовами	Выберите, сколько новых книг готовы принять, укажите предпочтительные жанры и позвольте другим игрокам пополнять вашу игровую полку прочитанными историями.	t	2025-10-25 11:00:42.428843+00	2025-10-25 11:00:42.428843+00
\.


--
-- Data for Name: games_gameshelfbook; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.games_gameshelfbook (id, pages_logged, bonus_awarded, reviewed_at, purchased_at, created_at, updated_at, book_id, state_id) FROM stdin;
\.


--
-- Data for Name: games_gameshelfpurchase; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.games_gameshelfpurchase (id, points_spent, created_at, book_id, state_id) FROM stdin;
\.


--
-- Data for Name: games_gameshelfstate; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.games_gameshelfstate (id, points_balance, total_points_earned, books_purchased, books_reviewed, created_at, updated_at, game_id, shelf_id, user_id, started_at) FROM stdin;
1	0	0	0	0	2025-10-27 15:21:19.115011+00	2025-10-27 15:21:19.115011+00	1	53	12	2025-10-27 15:21:19.115011+00
\.


--
-- Data for Name: reading_clubs_discussionpost; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.reading_clubs_discussionpost (id, content, created_at, updated_at, author_id, topic_id, parent_id) FROM stdin;
\.


--
-- Data for Name: reading_clubs_readingclub; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.reading_clubs_readingclub (id, title, description, start_date, end_date, join_policy, slug, created_at, updated_at, book_id, creator_id) FROM stdin;
1	Почтальонша	Я люблю книги итальянских писателей и буду рада, если вы присоединитесь ко мне в этих чтениях	2025-10-27	2025-11-27	open	reading	2025-10-26 23:01:59.980115+00	2025-10-26 23:01:59.980115+00	39	3
\.


--
-- Data for Name: reading_clubs_readingnorm; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.reading_clubs_readingnorm (id, title, description, "order", discussion_opens_at, created_at, updated_at, reading_id) FROM stdin;
1	Пролог	Обсуждаем Пролог книги "Почтальонша"	1	2025-10-27	2025-10-26 23:05:23.057677+00	2025-10-26 23:05:23.057677+00	1
4	Часть 2	Обсуждаем 2 часть книги Почтальонша	3	2025-10-31	2025-10-26 23:07:29.663614+00	2025-10-26 23:54:08.72696+00	1
3	Часть 3	Обсуждаем 3 часть книги Почтальонша	4	2025-11-04	2025-10-26 23:06:38.893505+00	2025-10-26 23:54:23.955879+00	1
2	Часть 1	Обсуждаем 1 часть книги Почтальонша	2	2025-10-27	2025-10-26 23:05:58.640927+00	2025-10-27 09:00:23.163684+00	1
\.


--
-- Data for Name: reading_clubs_readingparticipant; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.reading_clubs_readingparticipant (id, status, joined_at, reading_id, user_id) FROM stdin;
1	approved	2025-10-26 23:01:59.994081+00	1	3
\.


--
-- Data for Name: reading_marathons_marathonentry; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.reading_marathons_marathonentry (id, status, progress, book_approved, completion_status, notes, created_at, updated_at, book_id, participant_id, theme_id) FROM stdin;
\.


--
-- Data for Name: reading_marathons_marathonparticipant; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.reading_marathons_marathonparticipant (id, status, joined_at, marathon_id, user_id) FROM stdin;
\.


--
-- Data for Name: reading_marathons_marathontheme; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.reading_marathons_marathontheme (id, title, description, "order", created_at, updated_at, marathon_id) FROM stdin;
\.


--
-- Data for Name: reading_marathons_readingmarathon; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.reading_marathons_readingmarathon (id, title, description, cover, start_date, end_date, join_policy, book_submission_policy, completion_policy, slug, created_at, updated_at, creator_id) FROM stdin;
\.


--
-- Data for Name: shelves_bookprogress; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.shelves_bookprogress (id, percent, current_page, updated_at, book_id, event_id, user_id, reading_notes, audio_length, audio_playback_speed, custom_total_pages, format, audio_position) FROM stdin;
6	75.03	544	2025-10-26 15:45:58.93273+00	38	\N	5		\N	\N	725	ebook	\N
2	100.00	576	2025-10-24 19:44:04.467689+00	18	\N	5		\N	\N	576	paper	\N
7	1.12	11	2025-10-27 00:29:54.659873+00	39	\N	3		12:41:00	1.0	978	ebook	00:08:31
8	0.00	0	2025-10-27 14:27:34.499543+00	35	\N	12		\N	\N	\N	paper	\N
10	9.11	35	2025-10-28 05:14:34.516228+00	45	\N	7		\N	\N	384	paper	\N
1	100.00	474	2025-10-25 23:44:49.810174+00	17	\N	3		14:29:00	1.0	\N	paper	14:29:00
3	100.00	605	2025-10-25 23:46:53.297164+00	36	\N	3		\N	\N	\N	paper	\N
4	100.00	509	2025-10-26 00:09:39.304708+00	34	\N	3		\N	\N	\N	paper	\N
9	24.82	239	2025-10-28 07:07:01.034837+00	43	\N	3		12:06:12	1.5	963	ebook	03:00:00
11	100.00	509	2025-10-28 14:11:25.685864+00	34	\N	11		\N	\N	\N	paper	\N
12	0.00	0	2025-10-28 17:23:49.451454+00	84	\N	11		\N	\N	\N	paper	\N
5	100.00	517	2025-10-26 00:18:27.318884+00	32	\N	3		\N	\N	\N	paper	\N
13	0.00	0	2025-10-28 21:40:36.359439+00	92	\N	4		\N	\N	\N	paper	\N
14	100.00	256	2025-10-29 06:07:43.534637+00	94	\N	7		\N	\N	256	ebook	\N
15	0.00	0	2025-10-29 06:10:29.802388+00	47	\N	7		\N	\N	400	paper	\N
\.


--
-- Data for Name: shelves_bookprogressmedium; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.shelves_bookprogressmedium (id, medium, current_page, total_pages_override, audio_position, audio_length, playback_speed, progress_id) FROM stdin;
16	ebook	168	168	\N	\N	\N	14
17	paper	0	400	\N	\N	\N	15
3	paper	576	576	\N	\N	\N	2
1	paper	474	\N	\N	\N	\N	1
2	audiobook	\N	\N	14:29:00	14:29:00	1.0	1
4	ebook	922	922	\N	\N	\N	1
5	paper	605	\N	\N	\N	\N	3
6	paper	509	\N	\N	\N	\N	4
7	paper	517	\N	\N	\N	\N	5
9	ebook	544	725	\N	\N	\N	6
10	ebook	11	978	\N	\N	\N	7
11	audiobook	\N	\N	00:08:31	12:41:00	1.0	7
14	paper	35	384	\N	\N	\N	10
13	audiobook	\N	\N	03:00:00	12:06:12	1.5	9
12	ebook	239	963	\N	\N	\N	9
15	paper	509	\N	\N	\N	\N	11
\.


--
-- Data for Name: shelves_characternote; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.shelves_characternote (id, name, description, created_at, progress_id) FROM stdin;
\.


--
-- Data for Name: shelves_event; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.shelves_event (id, kind, title, description, start_at, end_at, is_public, creator_id, shelf_id) FROM stdin;
\.


--
-- Data for Name: shelves_eventparticipant; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.shelves_eventparticipant (id, joined_at, is_moderator, event_id, user_id) FROM stdin;
\.


--
-- Data for Name: shelves_homelibraryentry; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.shelves_homelibraryentry (id, edition, language, format, status, location, shelf_section, condition, acquired_at, notes, updated_at, shelf_item_id, disposition_note, is_classic, is_disposed, series_name, read_at) FROM stdin;
1			paper					2020-10-24		2025-10-24 14:06:19.852162+00	6		f	f		\N
2			paper					2021-01-08		2025-10-24 14:08:24.98812+00	7		f	f	Глубина	2023-02-02
34			paper					2025-08-15		2025-10-28 08:26:22.745924+00	81		f	f	Миры Джея Кристоффа	\N
49			paper					2025-07-30		2025-10-28 09:19:43.308655+00	96		f	f	Young Adult. Темный мир Шарана. Вселенная Ирены Мадир	2025-08-10
53			paper					2025-07-10		2025-10-28 13:15:50.131179+00	100		f	f	Freedom. Инферно. Дарк фэнтези Алисы Джукич	\N
8			paper					2023-09-05		2025-10-24 21:25:11.138955+00	32		f	f	Феликс Вербин	2023-11-16
20			paper					2025-01-01		2025-10-28 05:22:16.878252+00	67		f	f	Коллекция странных дел	2025-01-01
9			paper					2024-01-03		2025-10-24 21:34:14.230814+00	34		f	f	Феликс Вербин	2024-02-03
10			paper					\N		2025-10-25 15:26:26.45521+00	36		f	f		\N
11	АСТ	Русский	paper	В коллекции	Шкаф			2011-03-25		2025-10-25 18:30:37.440311+00	37		f	f	Альтернативная проза	\N
39			paper					2025-08-12		2025-10-28 08:43:35.630585+00	86		f	f	Хозяева тьмы	\N
13		Русский	ebook					\N		2025-10-26 15:52:33.907418+00	55		f	f	Страшные сказки со всего света.Реттелинги	\N
3		Русский	ebook	В коллекции	Полка			2024-09-04		2025-10-26 18:03:15.604501+00	10		f	f	Мистические триллеры Образцова	\N
14			paper					\N		2025-10-27 10:56:43.457568+00	58		f	f		\N
15			paper					\N		2025-10-27 12:25:24.125207+00	59		f	f	Стефани Майер: Возвращение	\N
16			paper					2024-10-18		2025-10-27 22:31:30.313419+00	62		f	f		\N
17			paper					2025-06-12		2025-10-28 05:07:02.363863+00	63		f	f	Мастера фантазии	\N
43			paper					2025-07-30		2025-10-28 09:02:18.346331+00	90		f	f	Young Adult. Хранители Армы	\N
18			paper					2025-06-12		2025-10-28 05:11:32.315081+00	64		f	f	Мастера фэнтези	\N
48			paper					2025-10-07		2025-10-28 09:17:08.069901+00	95		f	f	Young Adult. Книжный бунт. Фантастика	\N
36			paper					2025-09-17		2025-10-28 08:35:03.815208+00	83		f	f	Young Adult. Азиатское магическое фэнтези	\N
51			paper					2025-03-12		2025-10-28 09:29:11.744703+00	98		f	f	Young Adult. Темный мир Шарана. Вселенная Ирены Мадир	\N
26			paper					2025-10-06		2025-10-28 07:36:43.738308+00	73		f	f	The Big Book	\N
22			paper					2025-10-24		2025-10-28 05:37:14.39674+00	69		f	f	Бестселлеры Оливи Блейк. Шестерка Атласа	\N
54			paper					\N		2025-10-28 21:40:25.692845+00	107		f	f		\N
27			paper					2025-10-10		2025-10-28 07:41:27.121517+00	74		f	f	Азбука. Голоса	\N
33			paper					2025-08-06		2025-10-28 08:22:29.431679+00	80		f	f	Mainstream. Мистический триллер	2025-09-30
12			paper					\N		2025-10-29 00:12:35.805075+00	41		f	f		2025-10-29
29			paper					2025-09-12		2025-10-28 07:45:20.434233+00	76		f	f	New Adult. Фейри. Жестокие и прекрасные	\N
56			paper					\N		2025-10-29 06:07:43.565092+00	113		f	f	Хиты корейской волны	2025-10-29
47			paper					2025-10-09		2025-10-28 09:14:46.611118+00	94		f	f	#trendbooks summer	\N
55			paper					2025-02-05		2025-10-29 05:59:07.119242+00	112		f	f		\N
31			paper					2025-09-12		2025-10-28 07:50:53.030787+00	78		f	f	#trendbooks	\N
57			paper					2025-07-01		2025-10-29 06:14:07.62192+00	117		f	f	Охотники за мирами. Бестселлеры Лии Арден	2025-07-04
45			paper					2025-07-23		2025-10-28 09:11:26.361259+00	92		f	f	#trendbooks_magic	\N
58			paper					2025-07-01		2025-10-29 06:15:54.594445+00	118		f	f	Охотники за мирами. Бестселлеры Лии Арден	2025-07-10
59			paper					2025-07-01		2025-10-29 06:18:19.620747+00	119		f	f	Охотники за мирами. Бестселлеры Лии Арден	2025-07-14
42			paper					2025-08-22		2025-10-28 08:59:09.61189+00	89		f	f	#trendbooks thriller	\N
60			paper					2025-07-24		2025-10-29 06:21:49.76593+00	120		f	f		\N
38			paper					2025-08-28		2025-10-28 08:39:41.416618+00	85		f	f	#trendbooks	\N
37			paper					2025-08-07		2025-10-28 08:37:46.825823+00	84		f	f	#trendbooks	\N
46			paper					2025-07-23		2025-10-28 09:13:07.555629+00	93		f	f	#trendbooks_magic	\N
44			paper					2025-07-11		2025-10-28 09:05:13.887372+00	91		f	f	#trendbooks_magic	\N
50			paper					2024-09-12		2025-10-28 09:26:30.579112+00	97		f	f	Young Adult. Темный мир Шарана. Вселенная Ирены Мадир	2024-11-13
30			paper					2025-09-12		2025-10-28 07:48:42.112499+00	77		f	f	Романы Эми Хармон	\N
40			paper					2025-08-06		2025-10-28 08:53:01.841611+00	87		f	f	#trendbooks_magic	2025-08-22
21			paper					2025-07-16		2025-10-28 05:29:05.419675+00	68		f	f	Коллекция странных дел	2025-10-26
19			paper					2025-10-08		2025-10-28 05:19:52.086515+00	66		f	f	Коллекция странных дел	\N
41			paper					2025-08-07		2025-10-28 08:56:42.754637+00	88		f	f	Young Adult. Тайны и кофе. Истории Алены Тимофеевой	\N
35			paper					2025-09-05		2025-10-28 08:30:59.633631+00	82		f	f	Novel. Мировые хиты	\N
23			paper					2025-10-24		2025-10-28 05:36:22.660649+00	70		f	f	Бестселлеры Оливи Блейк. Шестерка Атласа	\N
32			paper					2025-08-22		2025-10-28 08:14:10.389019+00	79		f	f	Trendbooks. Романы Виктории Побединской (подарочные)	\N
25			paper					2025-08-21		2025-10-28 05:42:01.376888+00	72		f	f	The Big Book	\N
24			paper					2025-10-24		2025-10-28 05:38:32.318329+00	71		f	f	Young Adult. Эфилениум	\N
28			paper					2025-09-16		2025-10-28 07:43:23.905308+00	75		f	f	Trendbooks magic	\N
52			paper					2025-08-28		2025-10-28 09:31:00.900072+00	99		f	f	Уолт Дисней. Нерасcказанные истории	\N
61			paper					2025-07-17		2025-10-29 06:24:10.010057+00	121		f	f		\N
62			paper					2025-07-25		2025-10-29 06:27:56.033642+00	122		f	f		\N
63			paper					2025-07-08		2025-10-29 06:32:13.237646+00	123		f	f		2025-07-17
64			paper					2025-07-16		2025-10-29 06:48:08.221311+00	124		f	f		2025-07-31
65			paper					2024-05-15		2025-10-29 06:48:38.934712+00	125		f	f		2024-05-30
66			paper					2025-07-24		2025-10-29 06:50:24.301397+00	126		f	f		\N
67			paper					2025-07-10		2025-10-29 06:53:45.894565+00	127		f	f		\N
68			paper					2025-07-17		2025-10-29 06:56:55.30671+00	128		f	f		\N
69			paper					2025-06-04		2025-10-29 07:03:14.098042+00	129		f	f		\N
70			paper					2025-07-18		2025-10-29 07:06:32.623896+00	130		f	f		\N
71			paper					2025-07-11		2025-10-29 07:28:05.269739+00	131		f	f		\N
72			paper					2025-01-09		2025-10-29 07:37:35.655688+00	132		f	f		2025-01-28
73			paper					2025-07-16		2025-10-29 07:37:54.381801+00	133		f	f		\N
74			paper					2025-07-16		2025-10-29 07:38:08.732833+00	134		f	f		\N
75			paper					2025-06-04		2025-10-29 07:46:09.840853+00	135		f	f		\N
76			paper					2025-06-04		2025-10-29 07:46:16.359094+00	136		f	f		\N
77			paper					2025-06-05		2025-10-29 07:50:04.577384+00	137		f	f		2025-06-17
78			paper					2025-06-10		2025-10-29 07:50:25.025917+00	138		f	f		2025-06-27
79			paper					\N		2025-10-29 08:01:01.472059+00	140		f	f		\N
\.


--
-- Data for Name: shelves_homelibraryentry_custom_genres; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.shelves_homelibraryentry_custom_genres (id, homelibraryentry_id, genre_id) FROM stdin;
1	2	8
2	2	2
3	1	11
4	1	12
5	1	13
7	3	10
14	8	10
15	8	13
16	9	11
17	9	13
18	11	20
21	10	1
22	12	26
23	12	7
24	13	18
25	13	27
26	15	2
27	14	24
28	14	25
29	14	7
30	17	2
31	18	2
32	38	39
33	37	39
34	46	49
35	46	2
36	44	2
37	44	51
38	50	2
39	50	23
40	50	30
41	50	6
42	30	3
43	30	38
44	20	18
45	20	10
46	20	30
48	39	10
49	39	19
51	47	39
52	31	3
53	31	39
54	45	49
55	45	2
56	42	10
57	42	18
58	42	6
59	40	49
60	40	2
61	21	18
62	21	10
63	21	30
65	19	18
66	19	10
67	19	30
69	41	10
70	41	18
71	41	6
73	35	5
74	35	43
75	35	44
76	35	45
77	35	46
78	23	2
79	32	39
80	25	32
81	25	33
82	25	34
83	24	2
84	28	2
85	52	2
86	34	32
87	34	33
88	34	34
89	34	42
90	49	2
92	49	6
93	49	23
94	43	2
96	43	23
97	48	2
98	48	23
99	36	48
100	36	2
102	51	2
103	51	23
104	51	30
105	51	6
107	22	2
109	27	37
110	33	6
111	33	40
112	33	41
113	33	10
114	33	18
115	29	2
116	53	2
117	16	24
118	16	29
119	55	2
120	59	2
122	59	23
124	58	2
126	57	2
128	57	23
129	56	48
\.


--
-- Data for Name: shelves_progressannotation; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.shelves_progressannotation (id, kind, body, location, comment, created_at, updated_at, progress_id) FROM stdin;
\.


--
-- Data for Name: shelves_readingfeedcomment; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.shelves_readingfeedcomment (id, body, created_at, entry_id, user_id) FROM stdin;
\.


--
-- Data for Name: shelves_readingfeedentry; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.shelves_readingfeedentry (id, medium, current_page, percent, reaction, is_public, created_at, book_id, progress_id, user_id) FROM stdin;
\.


--
-- Data for Name: shelves_readinglog; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.shelves_readinglog (id, log_date, pages_equivalent, progress_id, audio_seconds, medium) FROM stdin;
1	2025-10-24	10.90	1	1200	audiobook
3	2025-10-24	24.98	1	0	paper
2	2025-10-24	576.00	2	0	paper
4	2025-10-25	100.34	1	11040	audiobook
6	2025-10-26	328.01	1	0	paper
7	2025-10-26	328.01	1	36081	audiobook
5	2025-10-26	337.77	1	0	ebook
8	2025-10-26	605.00	3	0	paper
9	2025-10-26	509.00	4	0	paper
10	2025-10-26	517.00	5	0	paper
11	2025-10-27	9.97	7	0	ebook
12	2025-10-27	59.71	9	2700	audiobook
13	2025-10-28	179.02	9	8100	audiobook
14	2025-10-28	509.00	11	0	paper
15	2025-10-29	256.00	14	0	ebook
\.


--
-- Data for Name: shelves_shelf; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.shelves_shelf (id, name, is_default, is_public, user_id, is_managed) FROM stdin;
1	Хочу прочитать	t	t	1	f
2	Читаю	t	t	1	f
3	Прочитал	t	t	1	f
4	Моя домашняя библиотека	t	f	1	f
5	Хочу прочитать	t	t	2	f
6	Читаю	t	t	2	f
7	Прочитал	t	t	2	f
8	Моя домашняя библиотека	t	f	2	f
9	Хочу прочитать	t	t	3	f
10	Читаю	t	t	3	f
11	Прочитал	t	t	3	f
12	Моя домашняя библиотека	t	f	3	f
13	Хочу прочитать	t	t	4	f
14	Читаю	t	t	4	f
15	Прочитал	t	t	4	f
16	Моя домашняя библиотека	t	f	4	f
17	Хочу прочитать	t	t	5	f
18	Читаю	t	t	5	f
19	Прочитал	t	t	5	f
20	Моя домашняя библиотека	t	f	5	f
21	Хочу прочитать	t	t	6	f
22	Читаю	t	t	6	f
23	Прочитал	t	t	6	f
24	Моя домашняя библиотека	t	f	6	f
26	Хочу прочитать	t	t	7	f
27	Читаю	t	t	7	f
28	Прочитал	t	t	7	f
29	Моя домашняя библиотека	t	f	7	f
31	Хочу прочитать	t	t	8	f
32	Читаю	t	t	8	f
33	Прочитал	t	t	8	f
34	Моя домашняя библиотека	t	f	8	f
35	Хочу прочитать	t	t	9	f
36	Читаю	t	t	9	f
37	Прочитал	t	t	9	f
38	Моя домашняя библиотека	t	f	9	f
39	Хочу прочитать	t	t	10	f
40	Читаю	t	t	10	f
41	Прочитал	t	t	10	f
42	Моя домашняя библиотека	t	f	10	f
43	парапр	f	t	10	f
44	Проситано	f	t	4	f
45	Хочу прочитать	t	t	11	f
46	Читаю	t	t	11	f
47	Прочитал	t	t	11	f
48	Моя домашняя библиотека	t	f	11	f
50	Хочу прочитать	t	t	12	f
51	Читаю	t	t	12	f
52	Прочитал	t	t	12	f
53	Моя домашняя библиотека	t	f	12	f
25	Игровой обмен — Раунд 1	f	f	3	t
30	Игровой обмен — Раунд 1	f	f	2	t
49	Игровой обмен — Раунд 1	f	f	7	t
54	Игровой обмен — Игровая полка	f	f	11	t
55	Хочу прочитать	t	t	13	f
56	Читаю	t	t	13	f
57	Прочитал	t	t	13	f
58	Моя домашняя библиотека	t	f	13	f
59	Хочу прочитать	t	t	14	f
60	Читаю	t	t	14	f
61	Прочитал	t	t	14	f
62	Моя домашняя библиотека	t	f	14	f
\.


--
-- Data for Name: shelves_shelfitem; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.shelves_shelfitem (id, added_at, book_id, shelf_id) FROM stdin;
1	2025-10-24 13:04:53.741105+00	9	9
2	2025-10-24 13:10:59.900151+00	6	9
3	2025-10-24 13:11:05.193138+00	4	9
4	2025-10-24 13:11:09.39364+00	5	9
6	2025-10-24 14:06:19.840208+00	13	12
7	2025-10-24 14:08:24.909856+00	8	12
8	2025-10-24 14:09:31.547444+00	8	11
10	2025-10-24 16:54:40.869567+00	18	20
12	2025-05-27 21:00:00+00	20	11
15	2025-10-24 19:45:06.281646+00	18	19
110	2025-10-29 00:12:35.795929+00	37	7
19	2023-10-17 21:00:00+00	27	11
21	2022-08-10 21:00:00+00	26	11
111	2025-10-29 01:05:54.36649+00	93	7
112	2025-10-29 05:58:13.58744+00	86	29
113	2025-10-29 06:05:00.292258+00	94	29
28	2021-06-30 21:00:00+00	18	11
115	2025-10-29 06:07:43.556639+00	94	28
31	2019-12-05 21:00:00+00	14	11
32	2025-10-24 21:25:11.128275+00	22	12
33	2010-11-24 21:00:00+00	14	7
34	2025-10-24 21:34:14.220253+00	23	12
35	2010-04-24 20:00:00+00	33	7
36	2025-10-25 15:26:26.451096+00	14	8
37	2025-10-25 15:26:37.81326+00	33	8
38	2025-10-25 17:04:45.216308+00	28	35
39	2025-10-25 17:19:46.640226+00	5	35
41	2025-10-25 18:27:19.054389+00	37	8
42	2025-10-25 23:44:49.847287+00	17	11
44	2025-10-25 23:46:53.332569+00	36	11
46	2025-10-26 00:09:39.325995+00	34	11
52	2025-10-26 00:18:27.350089+00	32	11
54	2025-10-26 15:43:23.564542+00	38	19
55	2025-10-26 15:51:53.169144+00	38	20
57	2025-10-26 23:56:37.229093+00	39	10
58	2025-10-27 10:56:43.452554+00	35	53
59	2025-10-27 12:25:24.118619+00	42	29
60	2025-10-27 14:27:07.314504+00	35	51
61	2025-10-27 20:50:43.83368+00	43	10
62	2025-10-27 22:31:30.30252+00	44	16
63	2025-10-28 05:07:02.35541+00	45	29
64	2025-10-28 05:11:32.305697+00	46	29
65	2025-10-28 05:13:05.88317+00	45	27
66	2025-10-28 05:19:52.077519+00	47	29
67	2025-10-28 05:22:16.872346+00	48	29
68	2025-10-28 05:28:47.940349+00	49	29
69	2025-10-28 05:34:30.499041+00	50	29
70	2025-10-28 05:36:22.652621+00	51	29
71	2025-10-28 05:38:32.309207+00	52	29
72	2025-10-28 05:42:01.369864+00	53	29
73	2025-10-28 07:36:43.73084+00	54	29
74	2025-10-28 07:41:27.111505+00	55	29
75	2025-10-28 07:43:23.89568+00	56	29
76	2025-10-28 07:45:20.425791+00	57	29
77	2025-10-28 07:48:42.101125+00	58	29
78	2025-10-28 07:50:53.024774+00	59	29
79	2025-10-28 08:14:10.38177+00	60	29
80	2025-10-28 08:22:29.425198+00	61	29
81	2025-10-28 08:26:22.737914+00	62	29
82	2025-10-28 08:30:59.62694+00	63	29
83	2025-10-28 08:35:03.808449+00	64	29
84	2025-10-28 08:37:46.819673+00	65	29
85	2025-10-28 08:39:41.409513+00	66	29
86	2025-10-28 08:43:35.620571+00	67	29
87	2025-10-28 08:53:01.834602+00	68	29
88	2025-10-28 08:56:42.747095+00	69	29
89	2025-10-28 08:59:09.604732+00	70	29
90	2025-10-28 09:02:18.3393+00	71	29
91	2025-10-28 09:05:13.879473+00	72	29
92	2025-10-28 09:11:26.351961+00	73	29
93	2025-10-28 09:13:07.548656+00	74	29
94	2025-10-28 09:14:46.602106+00	75	29
95	2025-10-28 09:17:08.06189+00	76	29
96	2025-10-28 09:19:43.300653+00	77	29
97	2025-10-28 09:26:30.571752+00	78	29
98	2025-10-28 09:29:11.737729+00	79	29
99	2025-10-28 09:31:00.892986+00	80	29
100	2025-10-28 13:15:50.121156+00	82	29
101	2025-10-28 14:09:25.591243+00	34	54
104	2025-10-28 14:12:49.35364+00	34	47
105	2025-10-28 14:19:32.469986+00	18	13
106	2025-10-28 17:23:49.298157+00	84	46
107	2025-10-28 21:40:25.689118+00	92	16
108	2025-10-28 21:40:36.232227+00	92	14
109	2025-10-28 21:40:50.041611+00	44	14
116	2025-10-29 06:09:46.744237+00	47	27
117	2025-10-29 06:14:07.612791+00	95	29
118	2025-10-29 06:15:54.586403+00	96	29
119	2025-10-29 06:18:19.613734+00	97	29
120	2025-10-29 06:21:49.756928+00	84	29
121	2025-10-29 06:24:10.003025+00	98	29
122	2025-10-29 06:27:56.025642+00	99	29
123	2025-10-29 06:32:13.228759+00	100	29
124	2025-10-29 06:48:08.211889+00	104	29
125	2025-10-29 06:48:38.927548+00	105	29
126	2025-10-29 06:50:24.293685+00	106	29
127	2025-10-29 06:53:45.885417+00	107	29
128	2025-10-29 06:56:55.298622+00	108	29
129	2025-10-29 07:03:14.088644+00	111	29
130	2025-10-29 07:06:32.615209+00	114	29
131	2025-10-29 07:28:05.260675+00	115	29
132	2025-10-29 07:37:35.64846+00	116	29
133	2025-10-29 07:37:54.372697+00	117	29
134	2025-10-29 07:38:08.726561+00	118	29
135	2025-10-29 07:46:09.833286+00	120	29
136	2025-10-29 07:46:16.349569+00	121	29
137	2025-10-29 07:50:04.569057+00	122	29
138	2025-10-29 07:50:25.019185+00	123	29
139	2025-10-29 07:59:28.223248+00	38	35
140	2025-10-29 08:01:01.467274+00	5	38
\.


--
-- Data for Name: user_ratings_userpointevent; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.user_ratings_userpointevent (id, event_type, points, created_at, object_id, content_type_id, user_id) FROM stdin;
1	book_completed	50	2025-10-24 19:44:04.528154+00	18	12	5
2	review_written	30	2025-10-24 19:45:06.239748+00	1	14	5
3	book_completed	50	2025-10-25 23:44:49.878673+00	17	12	3
4	book_completed	50	2025-10-25 23:46:53.353194+00	36	12	3
5	book_completed	50	2025-10-26 15:43:23.588418+00	38	12	5
6	book_completed	50	2025-10-28 14:11:25.764822+00	34	12	11
7	review_written	30	2025-10-28 14:12:49.307343+00	3	14	11
8	book_completed	50	2025-10-29 06:07:43.58849+00	94	12	7
\.


--
-- Name: accounts_premiumpayment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.accounts_premiumpayment_id_seq', 1, false);


--
-- Name: accounts_premiumsubscription_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.accounts_premiumsubscription_id_seq', 1, false);


--
-- Name: accounts_profile_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.accounts_profile_id_seq', 14, true);


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 3, true);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 248, true);


--
-- Name: auth_user_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_user_groups_id_seq', 30, true);


--
-- Name: auth_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_user_id_seq', 14, true);


--
-- Name: auth_user_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_user_user_permissions_id_seq', 1, false);


--
-- Name: books_audiobook_genre_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.books_audiobook_genre_id_seq', 1, false);


--
-- Name: books_audiobook_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.books_audiobook_id_seq', 1, false);


--
-- Name: books_author_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.books_author_id_seq', 96, true);


--
-- Name: books_book_authors_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.books_book_authors_id_seq', 134, true);


--
-- Name: books_book_contributors_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.books_book_contributors_id_seq', 2, true);


--
-- Name: books_book_genres_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.books_book_genres_id_seq', 261, true);


--
-- Name: books_book_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.books_book_id_seq', 123, true);


--
-- Name: books_book_isbn_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.books_book_isbn_id_seq', 122, true);


--
-- Name: books_book_publisher_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.books_book_publisher_id_seq', 124, true);


--
-- Name: books_genre_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.books_genre_id_seq', 60, true);


--
-- Name: books_isbnmodel_authors_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.books_isbnmodel_authors_id_seq', 57, true);


--
-- Name: books_isbnmodel_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.books_isbnmodel_id_seq', 122, true);


--
-- Name: books_publisher_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.books_publisher_id_seq', 22, true);


--
-- Name: books_rating_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.books_rating_id_seq', 4, true);


--
-- Name: books_ratingcomment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.books_ratingcomment_id_seq', 1, false);


--
-- Name: books_readingsession_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.books_readingsession_id_seq', 1, false);


--
-- Name: collaborations_authoroffer_expected_platforms_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.collaborations_authoroffer_expected_platforms_id_seq', 16, true);


--
-- Name: collaborations_authoroffer_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.collaborations_authoroffer_id_seq', 5, true);


--
-- Name: collaborations_authorofferresponse_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.collaborations_authorofferresponse_id_seq', 10, true);


--
-- Name: collaborations_authorofferresponsecomment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.collaborations_authorofferresponsecomment_id_seq', 13, true);


--
-- Name: collaborations_bloggergiveaway_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.collaborations_bloggergiveaway_id_seq', 1, false);


--
-- Name: collaborations_bloggerinvitation_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.collaborations_bloggerinvitation_id_seq', 2, true);


--
-- Name: collaborations_bloggerplatformpresence_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.collaborations_bloggerplatformpresence_id_seq', 5, true);


--
-- Name: collaborations_bloggerrating_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.collaborations_bloggerrating_id_seq', 1, false);


--
-- Name: collaborations_bloggerrequest_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.collaborations_bloggerrequest_id_seq', 7, true);


--
-- Name: collaborations_bloggerrequest_preferred_genres_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.collaborations_bloggerrequest_preferred_genres_id_seq', 24, true);


--
-- Name: collaborations_bloggerrequest_review_formats_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.collaborations_bloggerrequest_review_formats_id_seq', 15, true);


--
-- Name: collaborations_bloggerrequestresponse_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.collaborations_bloggerrequestresponse_id_seq', 1, true);


--
-- Name: collaborations_bloggerrequestresponsecomment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.collaborations_bloggerrequestresponsecomment_id_seq', 1, true);


--
-- Name: collaborations_collaboration_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.collaborations_collaboration_id_seq', 6, true);


--
-- Name: collaborations_collaborationmessage_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.collaborations_collaborationmessage_id_seq', 16, true);


--
-- Name: collaborations_communitybookclub_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.collaborations_communitybookclub_id_seq', 1, false);


--
-- Name: collaborations_reviewplatform_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.collaborations_reviewplatform_id_seq', 6, true);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 35, true);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 62, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 79, true);


--
-- Name: games_bookexchangeacceptedbook_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.games_bookexchangeacceptedbook_id_seq', 1, true);


--
-- Name: games_bookexchangechallenge_genres_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.games_bookexchangechallenge_genres_id_seq', 23, true);


--
-- Name: games_bookexchangechallenge_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.games_bookexchangechallenge_id_seq', 4, true);


--
-- Name: games_bookexchangeoffer_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.games_bookexchangeoffer_id_seq', 3, true);


--
-- Name: games_bookjourneyassignment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.games_bookjourneyassignment_id_seq', 1, true);


--
-- Name: games_forgottenbookentry_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.games_forgottenbookentry_id_seq', 1, false);


--
-- Name: games_game_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.games_game_id_seq', 3, true);


--
-- Name: games_gameshelfbook_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.games_gameshelfbook_id_seq', 1, false);


--
-- Name: games_gameshelfpurchase_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.games_gameshelfpurchase_id_seq', 1, false);


--
-- Name: games_gameshelfstate_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.games_gameshelfstate_id_seq', 1, true);


--
-- Name: reading_clubs_discussionpost_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.reading_clubs_discussionpost_id_seq', 1, false);


--
-- Name: reading_clubs_readingclub_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.reading_clubs_readingclub_id_seq', 1, true);


--
-- Name: reading_clubs_readingnorm_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.reading_clubs_readingnorm_id_seq', 4, true);


--
-- Name: reading_clubs_readingparticipant_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.reading_clubs_readingparticipant_id_seq', 1, true);


--
-- Name: reading_marathons_marathonentry_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.reading_marathons_marathonentry_id_seq', 1, false);


--
-- Name: reading_marathons_marathonparticipant_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.reading_marathons_marathonparticipant_id_seq', 1, false);


--
-- Name: reading_marathons_marathontheme_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.reading_marathons_marathontheme_id_seq', 1, false);


--
-- Name: reading_marathons_readingmarathon_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.reading_marathons_readingmarathon_id_seq', 1, false);


--
-- Name: shelves_bookprogress_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.shelves_bookprogress_id_seq', 15, true);


--
-- Name: shelves_bookprogressmedium_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.shelves_bookprogressmedium_id_seq', 17, true);


--
-- Name: shelves_characternote_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.shelves_characternote_id_seq', 1, false);


--
-- Name: shelves_event_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.shelves_event_id_seq', 1, false);


--
-- Name: shelves_eventparticipant_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.shelves_eventparticipant_id_seq', 1, false);


--
-- Name: shelves_homelibraryentry_custom_genres_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.shelves_homelibraryentry_custom_genres_id_seq', 129, true);


--
-- Name: shelves_homelibraryentry_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.shelves_homelibraryentry_id_seq', 79, true);


--
-- Name: shelves_progressannotation_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.shelves_progressannotation_id_seq', 1, false);


--
-- Name: shelves_readingfeedcomment_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.shelves_readingfeedcomment_id_seq', 1, false);


--
-- Name: shelves_readingfeedentry_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.shelves_readingfeedentry_id_seq', 1, false);


--
-- Name: shelves_readinglog_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.shelves_readinglog_id_seq', 15, true);


--
-- Name: shelves_shelf_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.shelves_shelf_id_seq', 62, true);


--
-- Name: shelves_shelfitem_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.shelves_shelfitem_id_seq', 140, true);


--
-- Name: user_ratings_userpointevent_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.user_ratings_userpointevent_id_seq', 8, true);


--
-- Name: accounts_premiumpayment accounts_premiumpayment_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.accounts_premiumpayment
    ADD CONSTRAINT accounts_premiumpayment_pkey PRIMARY KEY (id);


--
-- Name: accounts_premiumpayment accounts_premiumpayment_reference_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.accounts_premiumpayment
    ADD CONSTRAINT accounts_premiumpayment_reference_key UNIQUE (reference);


--
-- Name: accounts_premiumsubscription accounts_premiumsubscription_payment_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.accounts_premiumsubscription
    ADD CONSTRAINT accounts_premiumsubscription_payment_id_key UNIQUE (payment_id);


--
-- Name: accounts_premiumsubscription accounts_premiumsubscription_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.accounts_premiumsubscription
    ADD CONSTRAINT accounts_premiumsubscription_pkey PRIMARY KEY (id);


--
-- Name: accounts_profile accounts_profile_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.accounts_profile
    ADD CONSTRAINT accounts_profile_pkey PRIMARY KEY (id);


--
-- Name: accounts_profile accounts_profile_user_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.accounts_profile
    ADD CONSTRAINT accounts_profile_user_id_key UNIQUE (user_id);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id);


--
-- Name: auth_user_groups auth_user_groups_user_id_group_id_94350c0c_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id);


--
-- Name: auth_user auth_user_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_permission_id_14a6b632_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id);


--
-- Name: auth_user auth_user_username_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user
    ADD CONSTRAINT auth_user_username_key UNIQUE (username);


--
-- Name: books_audiobook_genre books_audiobook_genre_audiobook_id_genre_id_b654be83_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_audiobook_genre
    ADD CONSTRAINT books_audiobook_genre_audiobook_id_genre_id_b654be83_uniq UNIQUE (audiobook_id, genre_id);


--
-- Name: books_audiobook_genre books_audiobook_genre_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_audiobook_genre
    ADD CONSTRAINT books_audiobook_genre_pkey PRIMARY KEY (id);


--
-- Name: books_audiobook books_audiobook_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_audiobook
    ADD CONSTRAINT books_audiobook_pkey PRIMARY KEY (id);


--
-- Name: books_author books_author_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_author
    ADD CONSTRAINT books_author_pkey PRIMARY KEY (id);


--
-- Name: books_book_authors books_book_authors_book_id_author_id_8714badb_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_book_authors
    ADD CONSTRAINT books_book_authors_book_id_author_id_8714badb_uniq UNIQUE (book_id, author_id);


--
-- Name: books_book_authors books_book_authors_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_book_authors
    ADD CONSTRAINT books_book_authors_pkey PRIMARY KEY (id);


--
-- Name: books_book_contributors books_book_contributors_book_id_user_id_f4027742_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_book_contributors
    ADD CONSTRAINT books_book_contributors_book_id_user_id_f4027742_uniq UNIQUE (book_id, user_id);


--
-- Name: books_book_contributors books_book_contributors_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_book_contributors
    ADD CONSTRAINT books_book_contributors_pkey PRIMARY KEY (id);


--
-- Name: books_book_genres books_book_genres_book_id_genre_id_4f4a9648_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_book_genres
    ADD CONSTRAINT books_book_genres_book_id_genre_id_4f4a9648_uniq UNIQUE (book_id, genre_id);


--
-- Name: books_book_genres books_book_genres_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_book_genres
    ADD CONSTRAINT books_book_genres_pkey PRIMARY KEY (id);


--
-- Name: books_book_isbn books_book_isbn_book_id_isbnmodel_id_70b5278a_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_book_isbn
    ADD CONSTRAINT books_book_isbn_book_id_isbnmodel_id_70b5278a_uniq UNIQUE (book_id, isbnmodel_id);


--
-- Name: books_book_isbn books_book_isbn_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_book_isbn
    ADD CONSTRAINT books_book_isbn_pkey PRIMARY KEY (id);


--
-- Name: books_book books_book_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_book
    ADD CONSTRAINT books_book_pkey PRIMARY KEY (id);


--
-- Name: books_book_publisher books_book_publisher_book_id_publisher_id_2c9798f5_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_book_publisher
    ADD CONSTRAINT books_book_publisher_book_id_publisher_id_2c9798f5_uniq UNIQUE (book_id, publisher_id);


--
-- Name: books_book_publisher books_book_publisher_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_book_publisher
    ADD CONSTRAINT books_book_publisher_pkey PRIMARY KEY (id);


--
-- Name: books_genre books_genre_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_genre
    ADD CONSTRAINT books_genre_name_key UNIQUE (name);


--
-- Name: books_genre books_genre_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_genre
    ADD CONSTRAINT books_genre_pkey PRIMARY KEY (id);


--
-- Name: books_genre books_genre_slug_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_genre
    ADD CONSTRAINT books_genre_slug_key UNIQUE (slug);


--
-- Name: books_isbnmodel_authors books_isbnmodel_authors_isbnmodel_id_author_id_cadb3b7c_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_isbnmodel_authors
    ADD CONSTRAINT books_isbnmodel_authors_isbnmodel_id_author_id_cadb3b7c_uniq UNIQUE (isbnmodel_id, author_id);


--
-- Name: books_isbnmodel_authors books_isbnmodel_authors_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_isbnmodel_authors
    ADD CONSTRAINT books_isbnmodel_authors_pkey PRIMARY KEY (id);


--
-- Name: books_isbnmodel books_isbnmodel_isbn13_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_isbnmodel
    ADD CONSTRAINT books_isbnmodel_isbn13_key UNIQUE (isbn13);


--
-- Name: books_isbnmodel books_isbnmodel_isbn_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_isbnmodel
    ADD CONSTRAINT books_isbnmodel_isbn_key UNIQUE (isbn);


--
-- Name: books_isbnmodel books_isbnmodel_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_isbnmodel
    ADD CONSTRAINT books_isbnmodel_pkey PRIMARY KEY (id);


--
-- Name: books_publisher books_publisher_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_publisher
    ADD CONSTRAINT books_publisher_name_key UNIQUE (name);


--
-- Name: books_publisher books_publisher_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_publisher
    ADD CONSTRAINT books_publisher_pkey PRIMARY KEY (id);


--
-- Name: books_rating books_rating_book_id_user_id_5ade99bd_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_rating
    ADD CONSTRAINT books_rating_book_id_user_id_5ade99bd_uniq UNIQUE (book_id, user_id);


--
-- Name: books_rating books_rating_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_rating
    ADD CONSTRAINT books_rating_pkey PRIMARY KEY (id);


--
-- Name: books_ratingcomment books_ratingcomment_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_ratingcomment
    ADD CONSTRAINT books_ratingcomment_pkey PRIMARY KEY (id);


--
-- Name: books_readingsession books_readingsession_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_readingsession
    ADD CONSTRAINT books_readingsession_pkey PRIMARY KEY (id);


--
-- Name: collaborations_authoroffer_expected_platforms collaborations_authoroff_authoroffer_id_reviewpla_5387b812_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_authoroffer_expected_platforms
    ADD CONSTRAINT collaborations_authoroff_authoroffer_id_reviewpla_5387b812_uniq UNIQUE (authoroffer_id, reviewplatform_id);


--
-- Name: collaborations_authorofferresponse collaborations_authoroff_offer_id_respondent_id_0ac220df_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_authorofferresponse
    ADD CONSTRAINT collaborations_authoroff_offer_id_respondent_id_0ac220df_uniq UNIQUE (offer_id, respondent_id);


--
-- Name: collaborations_authoroffer_expected_platforms collaborations_authoroffer_expected_platforms_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_authoroffer_expected_platforms
    ADD CONSTRAINT collaborations_authoroffer_expected_platforms_pkey PRIMARY KEY (id);


--
-- Name: collaborations_authoroffer collaborations_authoroffer_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_authoroffer
    ADD CONSTRAINT collaborations_authoroffer_pkey PRIMARY KEY (id);


--
-- Name: collaborations_authorofferresponse collaborations_authorofferresponse_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_authorofferresponse
    ADD CONSTRAINT collaborations_authorofferresponse_pkey PRIMARY KEY (id);


--
-- Name: collaborations_authorofferresponsecomment collaborations_authorofferresponsecomment_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_authorofferresponsecomment
    ADD CONSTRAINT collaborations_authorofferresponsecomment_pkey PRIMARY KEY (id);


--
-- Name: collaborations_bloggergiveaway collaborations_bloggergiveaway_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggergiveaway
    ADD CONSTRAINT collaborations_bloggergiveaway_pkey PRIMARY KEY (id);


--
-- Name: collaborations_bloggerinvitation collaborations_bloggerinvitation_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggerinvitation
    ADD CONSTRAINT collaborations_bloggerinvitation_pkey PRIMARY KEY (id);


--
-- Name: collaborations_bloggerplatformpresence collaborations_bloggerplatformpresence_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggerplatformpresence
    ADD CONSTRAINT collaborations_bloggerplatformpresence_pkey PRIMARY KEY (id);


--
-- Name: collaborations_bloggerrating collaborations_bloggerrating_blogger_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggerrating
    ADD CONSTRAINT collaborations_bloggerrating_blogger_id_key UNIQUE (blogger_id);


--
-- Name: collaborations_bloggerrating collaborations_bloggerrating_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggerrating
    ADD CONSTRAINT collaborations_bloggerrating_pkey PRIMARY KEY (id);


--
-- Name: collaborations_bloggerrequest_preferred_genres collaborations_bloggerre_bloggerrequest_id_genre__8e57139a_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggerrequest_preferred_genres
    ADD CONSTRAINT collaborations_bloggerre_bloggerrequest_id_genre__8e57139a_uniq UNIQUE (bloggerrequest_id, genre_id);


--
-- Name: collaborations_bloggerrequest_review_formats collaborations_bloggerre_bloggerrequest_id_review_dc8b6c23_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggerrequest_review_formats
    ADD CONSTRAINT collaborations_bloggerre_bloggerrequest_id_review_dc8b6c23_uniq UNIQUE (bloggerrequest_id, reviewplatform_id);


--
-- Name: collaborations_bloggerrequestresponse collaborations_bloggerre_request_id_author_id_ed527163_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggerrequestresponse
    ADD CONSTRAINT collaborations_bloggerre_request_id_author_id_ed527163_uniq UNIQUE (request_id, responder_id);


--
-- Name: collaborations_bloggerrequest collaborations_bloggerrequest_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggerrequest
    ADD CONSTRAINT collaborations_bloggerrequest_pkey PRIMARY KEY (id);


--
-- Name: collaborations_bloggerrequest_preferred_genres collaborations_bloggerrequest_preferred_genres_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggerrequest_preferred_genres
    ADD CONSTRAINT collaborations_bloggerrequest_preferred_genres_pkey PRIMARY KEY (id);


--
-- Name: collaborations_bloggerrequest_review_formats collaborations_bloggerrequest_review_formats_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggerrequest_review_formats
    ADD CONSTRAINT collaborations_bloggerrequest_review_formats_pkey PRIMARY KEY (id);


--
-- Name: collaborations_bloggerrequestresponse collaborations_bloggerrequestresponse_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggerrequestresponse
    ADD CONSTRAINT collaborations_bloggerrequestresponse_pkey PRIMARY KEY (id);


--
-- Name: collaborations_bloggerrequestresponsecomment collaborations_bloggerrequestresponsecomment_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggerrequestresponsecomment
    ADD CONSTRAINT collaborations_bloggerrequestresponsecomment_pkey PRIMARY KEY (id);


--
-- Name: collaborations_collaboration collaborations_collaboration_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_collaboration
    ADD CONSTRAINT collaborations_collaboration_pkey PRIMARY KEY (id);


--
-- Name: collaborations_collaborationmessage collaborations_collaborationmessage_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_collaborationmessage
    ADD CONSTRAINT collaborations_collaborationmessage_pkey PRIMARY KEY (id);


--
-- Name: collaborations_communitybookclub collaborations_communitybookclub_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_communitybookclub
    ADD CONSTRAINT collaborations_communitybookclub_pkey PRIMARY KEY (id);


--
-- Name: collaborations_reviewplatform collaborations_reviewplatform_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_reviewplatform
    ADD CONSTRAINT collaborations_reviewplatform_name_key UNIQUE (name);


--
-- Name: collaborations_reviewplatform collaborations_reviewplatform_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_reviewplatform
    ADD CONSTRAINT collaborations_reviewplatform_pkey PRIMARY KEY (id);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: games_bookexchangeacceptedbook games_bookexchangeaccept_challenge_id_book_id_662ca33a_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_bookexchangeacceptedbook
    ADD CONSTRAINT games_bookexchangeaccept_challenge_id_book_id_662ca33a_uniq UNIQUE (challenge_id, book_id);


--
-- Name: games_bookexchangeacceptedbook games_bookexchangeacceptedbook_offer_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_bookexchangeacceptedbook
    ADD CONSTRAINT games_bookexchangeacceptedbook_offer_id_key UNIQUE (offer_id);


--
-- Name: games_bookexchangeacceptedbook games_bookexchangeacceptedbook_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_bookexchangeacceptedbook
    ADD CONSTRAINT games_bookexchangeacceptedbook_pkey PRIMARY KEY (id);


--
-- Name: games_bookexchangechallenge_genres games_bookexchangechalle_bookexchangechallenge_id_a77bf942_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_bookexchangechallenge_genres
    ADD CONSTRAINT games_bookexchangechalle_bookexchangechallenge_id_a77bf942_uniq UNIQUE (bookexchangechallenge_id, genre_id);


--
-- Name: games_bookexchangechallenge_genres games_bookexchangechallenge_genres_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_bookexchangechallenge_genres
    ADD CONSTRAINT games_bookexchangechallenge_genres_pkey PRIMARY KEY (id);


--
-- Name: games_bookexchangechallenge games_bookexchangechallenge_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_bookexchangechallenge
    ADD CONSTRAINT games_bookexchangechallenge_pkey PRIMARY KEY (id);


--
-- Name: games_bookexchangechallenge games_bookexchangechallenge_user_id_round_number_9a0add90_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_bookexchangechallenge
    ADD CONSTRAINT games_bookexchangechallenge_user_id_round_number_9a0add90_uniq UNIQUE (user_id, round_number);


--
-- Name: games_bookexchangeoffer games_bookexchangeoffer_challenge_id_book_id_off_ef380752_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_bookexchangeoffer
    ADD CONSTRAINT games_bookexchangeoffer_challenge_id_book_id_off_ef380752_uniq UNIQUE (challenge_id, book_id, offered_by_id);


--
-- Name: games_bookexchangeoffer games_bookexchangeoffer_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_bookexchangeoffer
    ADD CONSTRAINT games_bookexchangeoffer_pkey PRIMARY KEY (id);


--
-- Name: games_bookjourneyassignment games_bookjourneyassignment_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_bookjourneyassignment
    ADD CONSTRAINT games_bookjourneyassignment_pkey PRIMARY KEY (id);


--
-- Name: games_bookjourneyassignment games_bookjourneyassignment_user_id_stage_number_4c518176_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_bookjourneyassignment
    ADD CONSTRAINT games_bookjourneyassignment_user_id_stage_number_4c518176_uniq UNIQUE (user_id, stage_number);


--
-- Name: games_forgottenbookentry games_forgottenbookentry_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_forgottenbookentry
    ADD CONSTRAINT games_forgottenbookentry_pkey PRIMARY KEY (id);


--
-- Name: games_forgottenbookentry games_forgottenbookentry_user_id_book_id_04627d73_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_forgottenbookentry
    ADD CONSTRAINT games_forgottenbookentry_user_id_book_id_04627d73_uniq UNIQUE (user_id, book_id);


--
-- Name: games_game games_game_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_game
    ADD CONSTRAINT games_game_pkey PRIMARY KEY (id);


--
-- Name: games_game games_game_slug_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_game
    ADD CONSTRAINT games_game_slug_key UNIQUE (slug);


--
-- Name: games_gameshelfbook games_gameshelfbook_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_gameshelfbook
    ADD CONSTRAINT games_gameshelfbook_pkey PRIMARY KEY (id);


--
-- Name: games_gameshelfbook games_gameshelfbook_state_id_book_id_f6831620_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_gameshelfbook
    ADD CONSTRAINT games_gameshelfbook_state_id_book_id_f6831620_uniq UNIQUE (state_id, book_id);


--
-- Name: games_gameshelfpurchase games_gameshelfpurchase_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_gameshelfpurchase
    ADD CONSTRAINT games_gameshelfpurchase_pkey PRIMARY KEY (id);


--
-- Name: games_gameshelfstate games_gameshelfstate_game_id_shelf_id_ccaaa355_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_gameshelfstate
    ADD CONSTRAINT games_gameshelfstate_game_id_shelf_id_ccaaa355_uniq UNIQUE (game_id, shelf_id);


--
-- Name: games_gameshelfstate games_gameshelfstate_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_gameshelfstate
    ADD CONSTRAINT games_gameshelfstate_pkey PRIMARY KEY (id);


--
-- Name: reading_clubs_discussionpost reading_clubs_discussionpost_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reading_clubs_discussionpost
    ADD CONSTRAINT reading_clubs_discussionpost_pkey PRIMARY KEY (id);


--
-- Name: reading_clubs_readingclub reading_clubs_readingclub_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reading_clubs_readingclub
    ADD CONSTRAINT reading_clubs_readingclub_pkey PRIMARY KEY (id);


--
-- Name: reading_clubs_readingclub reading_clubs_readingclub_slug_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reading_clubs_readingclub
    ADD CONSTRAINT reading_clubs_readingclub_slug_key UNIQUE (slug);


--
-- Name: reading_clubs_readingnorm reading_clubs_readingnorm_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reading_clubs_readingnorm
    ADD CONSTRAINT reading_clubs_readingnorm_pkey PRIMARY KEY (id);


--
-- Name: reading_clubs_readingparticipant reading_clubs_readingpar_reading_id_user_id_a73261c7_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reading_clubs_readingparticipant
    ADD CONSTRAINT reading_clubs_readingpar_reading_id_user_id_a73261c7_uniq UNIQUE (reading_id, user_id);


--
-- Name: reading_clubs_readingparticipant reading_clubs_readingparticipant_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reading_clubs_readingparticipant
    ADD CONSTRAINT reading_clubs_readingparticipant_pkey PRIMARY KEY (id);


--
-- Name: reading_marathons_marathonparticipant reading_marathons_marath_marathon_id_user_id_d94882aa_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reading_marathons_marathonparticipant
    ADD CONSTRAINT reading_marathons_marath_marathon_id_user_id_d94882aa_uniq UNIQUE (marathon_id, user_id);


--
-- Name: reading_marathons_marathonentry reading_marathons_marath_participant_id_theme_id__b73e0adc_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reading_marathons_marathonentry
    ADD CONSTRAINT reading_marathons_marath_participant_id_theme_id__b73e0adc_uniq UNIQUE (participant_id, theme_id, book_id);


--
-- Name: reading_marathons_marathonentry reading_marathons_marathonentry_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reading_marathons_marathonentry
    ADD CONSTRAINT reading_marathons_marathonentry_pkey PRIMARY KEY (id);


--
-- Name: reading_marathons_marathonparticipant reading_marathons_marathonparticipant_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reading_marathons_marathonparticipant
    ADD CONSTRAINT reading_marathons_marathonparticipant_pkey PRIMARY KEY (id);


--
-- Name: reading_marathons_marathontheme reading_marathons_marathontheme_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reading_marathons_marathontheme
    ADD CONSTRAINT reading_marathons_marathontheme_pkey PRIMARY KEY (id);


--
-- Name: reading_marathons_readingmarathon reading_marathons_readingmarathon_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reading_marathons_readingmarathon
    ADD CONSTRAINT reading_marathons_readingmarathon_pkey PRIMARY KEY (id);


--
-- Name: reading_marathons_readingmarathon reading_marathons_readingmarathon_slug_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reading_marathons_readingmarathon
    ADD CONSTRAINT reading_marathons_readingmarathon_slug_key UNIQUE (slug);


--
-- Name: shelves_bookprogress shelves_bookprogress_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_bookprogress
    ADD CONSTRAINT shelves_bookprogress_pkey PRIMARY KEY (id);


--
-- Name: shelves_bookprogressmedium shelves_bookprogressmedium_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_bookprogressmedium
    ADD CONSTRAINT shelves_bookprogressmedium_pkey PRIMARY KEY (id);


--
-- Name: shelves_bookprogressmedium shelves_bookprogressmedium_progress_id_medium_7f507401_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_bookprogressmedium
    ADD CONSTRAINT shelves_bookprogressmedium_progress_id_medium_7f507401_uniq UNIQUE (progress_id, medium);


--
-- Name: shelves_characternote shelves_characternote_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_characternote
    ADD CONSTRAINT shelves_characternote_pkey PRIMARY KEY (id);


--
-- Name: shelves_event shelves_event_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_event
    ADD CONSTRAINT shelves_event_pkey PRIMARY KEY (id);


--
-- Name: shelves_eventparticipant shelves_eventparticipant_event_id_user_id_da4d3740_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_eventparticipant
    ADD CONSTRAINT shelves_eventparticipant_event_id_user_id_da4d3740_uniq UNIQUE (event_id, user_id);


--
-- Name: shelves_eventparticipant shelves_eventparticipant_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_eventparticipant
    ADD CONSTRAINT shelves_eventparticipant_pkey PRIMARY KEY (id);


--
-- Name: shelves_homelibraryentry_custom_genres shelves_homelibraryentry_custom_genres_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_homelibraryentry_custom_genres
    ADD CONSTRAINT shelves_homelibraryentry_custom_genres_pkey PRIMARY KEY (id);


--
-- Name: shelves_homelibraryentry_custom_genres shelves_homelibraryentry_homelibraryentry_id_genr_3ac34386_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_homelibraryentry_custom_genres
    ADD CONSTRAINT shelves_homelibraryentry_homelibraryentry_id_genr_3ac34386_uniq UNIQUE (homelibraryentry_id, genre_id);


--
-- Name: shelves_homelibraryentry shelves_homelibraryentry_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_homelibraryentry
    ADD CONSTRAINT shelves_homelibraryentry_pkey PRIMARY KEY (id);


--
-- Name: shelves_homelibraryentry shelves_homelibraryentry_shelf_item_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_homelibraryentry
    ADD CONSTRAINT shelves_homelibraryentry_shelf_item_id_key UNIQUE (shelf_item_id);


--
-- Name: shelves_progressannotation shelves_progressannotation_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_progressannotation
    ADD CONSTRAINT shelves_progressannotation_pkey PRIMARY KEY (id);


--
-- Name: shelves_readingfeedcomment shelves_readingfeedcomment_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_readingfeedcomment
    ADD CONSTRAINT shelves_readingfeedcomment_pkey PRIMARY KEY (id);


--
-- Name: shelves_readingfeedentry shelves_readingfeedentry_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_readingfeedentry
    ADD CONSTRAINT shelves_readingfeedentry_pkey PRIMARY KEY (id);


--
-- Name: shelves_readinglog shelves_readinglog_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_readinglog
    ADD CONSTRAINT shelves_readinglog_pkey PRIMARY KEY (id);


--
-- Name: shelves_readinglog shelves_readinglog_progress_id_log_date_medium_2e0b55ac_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_readinglog
    ADD CONSTRAINT shelves_readinglog_progress_id_log_date_medium_2e0b55ac_uniq UNIQUE (progress_id, log_date, medium);


--
-- Name: shelves_shelf shelves_shelf_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_shelf
    ADD CONSTRAINT shelves_shelf_pkey PRIMARY KEY (id);


--
-- Name: shelves_shelf shelves_shelf_user_id_name_e1fd987f_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_shelf
    ADD CONSTRAINT shelves_shelf_user_id_name_e1fd987f_uniq UNIQUE (user_id, name);


--
-- Name: shelves_shelfitem shelves_shelfitem_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_shelfitem
    ADD CONSTRAINT shelves_shelfitem_pkey PRIMARY KEY (id);


--
-- Name: shelves_shelfitem shelves_shelfitem_shelf_id_book_id_b5567fbe_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_shelfitem
    ADD CONSTRAINT shelves_shelfitem_shelf_id_book_id_b5567fbe_uniq UNIQUE (shelf_id, book_id);


--
-- Name: shelves_bookprogress uniq_progress_per_event; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_bookprogress
    ADD CONSTRAINT uniq_progress_per_event UNIQUE (event_id, user_id, book_id);


--
-- Name: user_ratings_userpointevent user_ratings_userpointevent_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_ratings_userpointevent
    ADD CONSTRAINT user_ratings_userpointevent_pkey PRIMARY KEY (id);


--
-- Name: accounts_pr_user_id_5c1663_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX accounts_pr_user_id_5c1663_idx ON public.accounts_premiumsubscription USING btree (user_id, end_at);


--
-- Name: accounts_premiumpayment_reference_2d52bc65_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX accounts_premiumpayment_reference_2d52bc65_like ON public.accounts_premiumpayment USING btree (reference varchar_pattern_ops);


--
-- Name: accounts_premiumpayment_user_id_2d6b4ea3; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX accounts_premiumpayment_user_id_2d6b4ea3 ON public.accounts_premiumpayment USING btree (user_id);


--
-- Name: accounts_premiumsubscription_granted_by_id_5b0e0a36; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX accounts_premiumsubscription_granted_by_id_5b0e0a36 ON public.accounts_premiumsubscription USING btree (granted_by_id);


--
-- Name: accounts_premiumsubscription_user_id_a3477098; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX accounts_premiumsubscription_user_id_a3477098 ON public.accounts_premiumsubscription USING btree (user_id);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: auth_user_groups_group_id_97559544; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_groups_group_id_97559544 ON public.auth_user_groups USING btree (group_id);


--
-- Name: auth_user_groups_user_id_6a12ed8b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_groups_user_id_6a12ed8b ON public.auth_user_groups USING btree (user_id);


--
-- Name: auth_user_user_permissions_permission_id_1fbb5f2c; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_user_permissions_permission_id_1fbb5f2c ON public.auth_user_user_permissions USING btree (permission_id);


--
-- Name: auth_user_user_permissions_user_id_a95ead1b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_user_permissions_user_id_a95ead1b ON public.auth_user_user_permissions USING btree (user_id);


--
-- Name: auth_user_username_6821ab7c_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_user_username_6821ab7c_like ON public.auth_user USING btree (username varchar_pattern_ops);


--
-- Name: books_audiobook_genre_audiobook_id_7473b39e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_audiobook_genre_audiobook_id_7473b39e ON public.books_audiobook_genre USING btree (audiobook_id);


--
-- Name: books_audiobook_genre_genre_id_2e40a772; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_audiobook_genre_genre_id_2e40a772 ON public.books_audiobook_genre USING btree (genre_id);


--
-- Name: books_audiobook_publisher_id_c591cb98; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_audiobook_publisher_id_c591cb98 ON public.books_audiobook USING btree (publisher_id);


--
-- Name: books_book_audio_id_e245e889; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_book_audio_id_e245e889 ON public.books_book USING btree (audio_id);


--
-- Name: books_book_authors_author_id_984f1ab8; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_book_authors_author_id_984f1ab8 ON public.books_book_authors USING btree (author_id);


--
-- Name: books_book_authors_book_id_ed3433e7; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_book_authors_book_id_ed3433e7 ON public.books_book_authors USING btree (book_id);


--
-- Name: books_book_contributors_book_id_ca6f1f58; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_book_contributors_book_id_ca6f1f58 ON public.books_book_contributors USING btree (book_id);


--
-- Name: books_book_contributors_user_id_5ca0e9e6; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_book_contributors_user_id_5ca0e9e6 ON public.books_book_contributors USING btree (user_id);


--
-- Name: books_book_edition_group_key_8f103925; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_book_edition_group_key_8f103925 ON public.books_book USING btree (edition_group_key);


--
-- Name: books_book_edition_group_key_8f103925_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_book_edition_group_key_8f103925_like ON public.books_book USING btree (edition_group_key varchar_pattern_ops);


--
-- Name: books_book_genres_book_id_ffd9e72b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_book_genres_book_id_ffd9e72b ON public.books_book_genres USING btree (book_id);


--
-- Name: books_book_genres_genre_id_899cd1a0; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_book_genres_genre_id_899cd1a0 ON public.books_book_genres USING btree (genre_id);


--
-- Name: books_book_isbn_book_id_e2065e33; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_book_isbn_book_id_e2065e33 ON public.books_book_isbn USING btree (book_id);


--
-- Name: books_book_isbn_isbnmodel_id_ef2e9668; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_book_isbn_isbnmodel_id_ef2e9668 ON public.books_book_isbn USING btree (isbnmodel_id);


--
-- Name: books_book_primary_isbn_id_44ab985b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_book_primary_isbn_id_44ab985b ON public.books_book USING btree (primary_isbn_id);


--
-- Name: books_book_publisher_book_id_f423ebc7; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_book_publisher_book_id_f423ebc7 ON public.books_book_publisher USING btree (book_id);


--
-- Name: books_book_publisher_publisher_id_66f13065; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_book_publisher_publisher_id_66f13065 ON public.books_book_publisher USING btree (publisher_id);


--
-- Name: books_genre_name_b6ee53e9_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_genre_name_b6ee53e9_like ON public.books_genre USING btree (name varchar_pattern_ops);


--
-- Name: books_genre_slug_f6d21e73_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_genre_slug_f6d21e73_like ON public.books_genre USING btree (slug varchar_pattern_ops);


--
-- Name: books_isbnmodel_authors_author_id_d6033e4b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_isbnmodel_authors_author_id_d6033e4b ON public.books_isbnmodel_authors USING btree (author_id);


--
-- Name: books_isbnmodel_authors_isbnmodel_id_57b8140c; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_isbnmodel_authors_isbnmodel_id_57b8140c ON public.books_isbnmodel_authors USING btree (isbnmodel_id);


--
-- Name: books_isbnmodel_isbn13_bffd1e2f_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_isbnmodel_isbn13_bffd1e2f_like ON public.books_isbnmodel USING btree (isbn13 varchar_pattern_ops);


--
-- Name: books_isbnmodel_isbn_e4368be0_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_isbnmodel_isbn_e4368be0_like ON public.books_isbnmodel USING btree (isbn varchar_pattern_ops);


--
-- Name: books_publisher_name_685eb2ae_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_publisher_name_685eb2ae_like ON public.books_publisher USING btree (name varchar_pattern_ops);


--
-- Name: books_rating_book_id_69df80d8; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_rating_book_id_69df80d8 ON public.books_rating USING btree (book_id);


--
-- Name: books_rating_user_id_d3132d7e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_rating_user_id_d3132d7e ON public.books_rating USING btree (user_id);


--
-- Name: books_ratingcomment_rating_id_552a402f; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_ratingcomment_rating_id_552a402f ON public.books_ratingcomment USING btree (rating_id);


--
-- Name: books_ratingcomment_user_id_e3f08010; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_ratingcomment_user_id_e3f08010 ON public.books_ratingcomment USING btree (user_id);


--
-- Name: books_readingsession_progress_id_2b1f0219; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX books_readingsession_progress_id_2b1f0219 ON public.books_readingsession USING btree (progress_id);


--
-- Name: collaborations_authoroffer_author_id_7e75d6f1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_authoroffer_author_id_7e75d6f1 ON public.collaborations_authoroffer USING btree (author_id);


--
-- Name: collaborations_authoroffer_authoroffer_id_fd955090; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_authoroffer_authoroffer_id_fd955090 ON public.collaborations_authoroffer_expected_platforms USING btree (authoroffer_id);


--
-- Name: collaborations_authoroffer_book_id_a98677f9; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_authoroffer_book_id_a98677f9 ON public.collaborations_authoroffer USING btree (book_id);


--
-- Name: collaborations_authoroffer_reviewplatform_id_ce2435fd; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_authoroffer_reviewplatform_id_ce2435fd ON public.collaborations_authoroffer_expected_platforms USING btree (reviewplatform_id);


--
-- Name: collaborations_authorofferresponse_last_activity_by_id_daa4790d; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_authorofferresponse_last_activity_by_id_daa4790d ON public.collaborations_authorofferresponse USING btree (last_activity_by_id);


--
-- Name: collaborations_authorofferresponse_offer_id_47b8198b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_authorofferresponse_offer_id_47b8198b ON public.collaborations_authorofferresponse USING btree (offer_id);


--
-- Name: collaborations_authorofferresponse_respondent_id_525caf97; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_authorofferresponse_respondent_id_525caf97 ON public.collaborations_authorofferresponse USING btree (respondent_id);


--
-- Name: collaborations_authorofferresponsecomment_author_id_c44723fa; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_authorofferresponsecomment_author_id_c44723fa ON public.collaborations_authorofferresponsecomment USING btree (author_id);


--
-- Name: collaborations_authorofferresponsecomment_response_id_81502e8c; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_authorofferresponsecomment_response_id_81502e8c ON public.collaborations_authorofferresponsecomment USING btree (response_id);


--
-- Name: collaborations_bloggergiveaway_blogger_id_b1952f39; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_bloggergiveaway_blogger_id_b1952f39 ON public.collaborations_bloggergiveaway USING btree (blogger_id);


--
-- Name: collaborations_bloggerinvitation_blogger_id_cbb503e0; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_bloggerinvitation_blogger_id_cbb503e0 ON public.collaborations_bloggerinvitation USING btree (blogger_id);


--
-- Name: collaborations_bloggerplatformpresence_platform_id_15547c4b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_bloggerplatformpresence_platform_id_15547c4b ON public.collaborations_bloggerplatformpresence USING btree (platform_id);


--
-- Name: collaborations_bloggerplatformpresence_request_id_098987de; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_bloggerplatformpresence_request_id_098987de ON public.collaborations_bloggerplatformpresence USING btree (request_id);


--
-- Name: collaborations_bloggerrequ_blogger_collaboration_plat_231465d7; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_bloggerrequ_blogger_collaboration_plat_231465d7 ON public.collaborations_bloggerrequest USING btree (blogger_collaboration_platform_id);


--
-- Name: collaborations_bloggerrequ_bloggerrequest_id_5770e3f6; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_bloggerrequ_bloggerrequest_id_5770e3f6 ON public.collaborations_bloggerrequest_preferred_genres USING btree (bloggerrequest_id);


--
-- Name: collaborations_bloggerrequ_bloggerrequest_id_c44c1ae8; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_bloggerrequ_bloggerrequest_id_c44c1ae8 ON public.collaborations_bloggerrequest_review_formats USING btree (bloggerrequest_id);


--
-- Name: collaborations_bloggerrequ_genre_id_2f4f4be8; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_bloggerrequ_genre_id_2f4f4be8 ON public.collaborations_bloggerrequest_preferred_genres USING btree (genre_id);


--
-- Name: collaborations_bloggerrequ_last_activity_by_id_62fc8dff; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_bloggerrequ_last_activity_by_id_62fc8dff ON public.collaborations_bloggerrequestresponse USING btree (last_activity_by_id);


--
-- Name: collaborations_bloggerrequ_response_id_55927afc; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_bloggerrequ_response_id_55927afc ON public.collaborations_bloggerrequestresponsecomment USING btree (response_id);


--
-- Name: collaborations_bloggerrequ_reviewplatform_id_87ba4f62; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_bloggerrequ_reviewplatform_id_87ba4f62 ON public.collaborations_bloggerrequest_review_formats USING btree (reviewplatform_id);


--
-- Name: collaborations_bloggerrequest_blogger_id_05f085ef; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_bloggerrequest_blogger_id_05f085ef ON public.collaborations_bloggerrequest USING btree (blogger_id);


--
-- Name: collaborations_bloggerrequestresponse_author_id_1ec7cfae; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_bloggerrequestresponse_author_id_1ec7cfae ON public.collaborations_bloggerrequestresponse USING btree (responder_id);


--
-- Name: collaborations_bloggerrequestresponse_book_id_af9aba6e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_bloggerrequestresponse_book_id_af9aba6e ON public.collaborations_bloggerrequestresponse USING btree (book_id);


--
-- Name: collaborations_bloggerrequestresponse_request_id_b63d9593; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_bloggerrequestresponse_request_id_b63d9593 ON public.collaborations_bloggerrequestresponse USING btree (request_id);


--
-- Name: collaborations_bloggerrequestresponsecomment_author_id_d02218bc; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_bloggerrequestresponsecomment_author_id_d02218bc ON public.collaborations_bloggerrequestresponsecomment USING btree (author_id);


--
-- Name: collaborations_collaboration_author_id_21ddb699; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_collaboration_author_id_21ddb699 ON public.collaborations_collaboration USING btree (author_id);


--
-- Name: collaborations_collaboration_last_activity_by_id_da889356; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_collaboration_last_activity_by_id_da889356 ON public.collaborations_collaboration USING btree (last_activity_by_id);


--
-- Name: collaborations_collaboration_offer_id_64011dc0; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_collaboration_offer_id_64011dc0 ON public.collaborations_collaboration USING btree (offer_id);


--
-- Name: collaborations_collaboration_partner_id_f08da8f8; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_collaboration_partner_id_f08da8f8 ON public.collaborations_collaboration USING btree (partner_id);


--
-- Name: collaborations_collaboration_request_id_2ddd8015; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_collaboration_request_id_2ddd8015 ON public.collaborations_collaboration USING btree (request_id);


--
-- Name: collaborations_collaborationmessage_author_id_05f8456e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_collaborationmessage_author_id_05f8456e ON public.collaborations_collaborationmessage USING btree (author_id);


--
-- Name: collaborations_collaborationmessage_collaboration_id_02fac4a3; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_collaborationmessage_collaboration_id_02fac4a3 ON public.collaborations_collaborationmessage USING btree (collaboration_id);


--
-- Name: collaborations_communitybookclub_submitted_by_id_48cef8a9; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_communitybookclub_submitted_by_id_48cef8a9 ON public.collaborations_communitybookclub USING btree (submitted_by_id);


--
-- Name: collaborations_reviewplatform_name_31dfa283_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX collaborations_reviewplatform_name_31dfa283_like ON public.collaborations_reviewplatform USING btree (name varchar_pattern_ops);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: games_bookexchangeacceptedbook_book_id_2fedb6ad; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX games_bookexchangeacceptedbook_book_id_2fedb6ad ON public.games_bookexchangeacceptedbook USING btree (book_id);


--
-- Name: games_bookexchangeacceptedbook_challenge_id_416b6044; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX games_bookexchangeacceptedbook_challenge_id_416b6044 ON public.games_bookexchangeacceptedbook USING btree (challenge_id);


--
-- Name: games_bookexchangechalleng_bookexchangechallenge_id_570b90de; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX games_bookexchangechalleng_bookexchangechallenge_id_570b90de ON public.games_bookexchangechallenge_genres USING btree (bookexchangechallenge_id);


--
-- Name: games_bookexchangechallenge_game_id_e348ae55; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX games_bookexchangechallenge_game_id_e348ae55 ON public.games_bookexchangechallenge USING btree (game_id);


--
-- Name: games_bookexchangechallenge_genres_genre_id_8e59a451; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX games_bookexchangechallenge_genres_genre_id_8e59a451 ON public.games_bookexchangechallenge_genres USING btree (genre_id);


--
-- Name: games_bookexchangechallenge_shelf_id_5f7790e6; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX games_bookexchangechallenge_shelf_id_5f7790e6 ON public.games_bookexchangechallenge USING btree (shelf_id);


--
-- Name: games_bookexchangechallenge_user_id_ca49640a; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX games_bookexchangechallenge_user_id_ca49640a ON public.games_bookexchangechallenge USING btree (user_id);


--
-- Name: games_bookexchangeoffer_book_id_c9c4af83; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX games_bookexchangeoffer_book_id_c9c4af83 ON public.games_bookexchangeoffer USING btree (book_id);


--
-- Name: games_bookexchangeoffer_challenge_id_037e46c2; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX games_bookexchangeoffer_challenge_id_037e46c2 ON public.games_bookexchangeoffer USING btree (challenge_id);


--
-- Name: games_bookexchangeoffer_offered_by_id_f1beb838; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX games_bookexchangeoffer_offered_by_id_f1beb838 ON public.games_bookexchangeoffer USING btree (offered_by_id);


--
-- Name: games_bookjourneyassignment_book_id_7d86ad36; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX games_bookjourneyassignment_book_id_7d86ad36 ON public.games_bookjourneyassignment USING btree (book_id);


--
-- Name: games_bookjourneyassignment_user_id_6bd0c57a; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX games_bookjourneyassignment_user_id_6bd0c57a ON public.games_bookjourneyassignment USING btree (user_id);


--
-- Name: games_forgottenbookentry_book_id_37e7a9e0; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX games_forgottenbookentry_book_id_37e7a9e0 ON public.games_forgottenbookentry USING btree (book_id);


--
-- Name: games_forgottenbookentry_user_id_11205610; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX games_forgottenbookentry_user_id_11205610 ON public.games_forgottenbookentry USING btree (user_id);


--
-- Name: games_game_slug_02e11826_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX games_game_slug_02e11826_like ON public.games_game USING btree (slug varchar_pattern_ops);


--
-- Name: games_gameshelfbook_book_id_6f3490ef; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX games_gameshelfbook_book_id_6f3490ef ON public.games_gameshelfbook USING btree (book_id);


--
-- Name: games_gameshelfbook_state_id_ae6729b1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX games_gameshelfbook_state_id_ae6729b1 ON public.games_gameshelfbook USING btree (state_id);


--
-- Name: games_gameshelfpurchase_book_id_cda444bf; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX games_gameshelfpurchase_book_id_cda444bf ON public.games_gameshelfpurchase USING btree (book_id);


--
-- Name: games_gameshelfpurchase_state_id_d4e01d83; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX games_gameshelfpurchase_state_id_d4e01d83 ON public.games_gameshelfpurchase USING btree (state_id);


--
-- Name: games_gameshelfstate_game_id_98f00eb5; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX games_gameshelfstate_game_id_98f00eb5 ON public.games_gameshelfstate USING btree (game_id);


--
-- Name: games_gameshelfstate_shelf_id_5ce474f0; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX games_gameshelfstate_shelf_id_5ce474f0 ON public.games_gameshelfstate USING btree (shelf_id);


--
-- Name: games_gameshelfstate_user_id_ab98f852; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX games_gameshelfstate_user_id_ab98f852 ON public.games_gameshelfstate USING btree (user_id);


--
-- Name: reading_clubs_discussionpost_author_id_30a3b39b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX reading_clubs_discussionpost_author_id_30a3b39b ON public.reading_clubs_discussionpost USING btree (author_id);


--
-- Name: reading_clubs_discussionpost_parent_id_4ca852dd; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX reading_clubs_discussionpost_parent_id_4ca852dd ON public.reading_clubs_discussionpost USING btree (parent_id);


--
-- Name: reading_clubs_discussionpost_topic_id_b056a5d2; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX reading_clubs_discussionpost_topic_id_b056a5d2 ON public.reading_clubs_discussionpost USING btree (topic_id);


--
-- Name: reading_clubs_readingclub_book_id_896ef800; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX reading_clubs_readingclub_book_id_896ef800 ON public.reading_clubs_readingclub USING btree (book_id);


--
-- Name: reading_clubs_readingclub_creator_id_82062960; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX reading_clubs_readingclub_creator_id_82062960 ON public.reading_clubs_readingclub USING btree (creator_id);


--
-- Name: reading_clubs_readingclub_slug_ff644215_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX reading_clubs_readingclub_slug_ff644215_like ON public.reading_clubs_readingclub USING btree (slug varchar_pattern_ops);


--
-- Name: reading_clubs_readingnorm_reading_id_0b0ba096; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX reading_clubs_readingnorm_reading_id_0b0ba096 ON public.reading_clubs_readingnorm USING btree (reading_id);


--
-- Name: reading_clubs_readingparticipant_reading_id_9cdacaaf; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX reading_clubs_readingparticipant_reading_id_9cdacaaf ON public.reading_clubs_readingparticipant USING btree (reading_id);


--
-- Name: reading_clubs_readingparticipant_user_id_5fee71ae; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX reading_clubs_readingparticipant_user_id_5fee71ae ON public.reading_clubs_readingparticipant USING btree (user_id);


--
-- Name: reading_marathons_marathonentry_book_id_fd17af08; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX reading_marathons_marathonentry_book_id_fd17af08 ON public.reading_marathons_marathonentry USING btree (book_id);


--
-- Name: reading_marathons_marathonentry_participant_id_bdca812b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX reading_marathons_marathonentry_participant_id_bdca812b ON public.reading_marathons_marathonentry USING btree (participant_id);


--
-- Name: reading_marathons_marathonentry_theme_id_430fecc7; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX reading_marathons_marathonentry_theme_id_430fecc7 ON public.reading_marathons_marathonentry USING btree (theme_id);


--
-- Name: reading_marathons_marathonparticipant_marathon_id_4f220f08; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX reading_marathons_marathonparticipant_marathon_id_4f220f08 ON public.reading_marathons_marathonparticipant USING btree (marathon_id);


--
-- Name: reading_marathons_marathonparticipant_user_id_4b186149; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX reading_marathons_marathonparticipant_user_id_4b186149 ON public.reading_marathons_marathonparticipant USING btree (user_id);


--
-- Name: reading_marathons_marathontheme_marathon_id_ac1228b1; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX reading_marathons_marathontheme_marathon_id_ac1228b1 ON public.reading_marathons_marathontheme USING btree (marathon_id);


--
-- Name: reading_marathons_readingmarathon_creator_id_d4c47227; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX reading_marathons_readingmarathon_creator_id_d4c47227 ON public.reading_marathons_readingmarathon USING btree (creator_id);


--
-- Name: reading_marathons_readingmarathon_slug_5bd6949b_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX reading_marathons_readingmarathon_slug_5bd6949b_like ON public.reading_marathons_readingmarathon USING btree (slug varchar_pattern_ops);


--
-- Name: shelves_bookprogress_book_id_0f8dac1d; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX shelves_bookprogress_book_id_0f8dac1d ON public.shelves_bookprogress USING btree (book_id);


--
-- Name: shelves_bookprogress_event_id_b62a9391; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX shelves_bookprogress_event_id_b62a9391 ON public.shelves_bookprogress USING btree (event_id);


--
-- Name: shelves_bookprogress_user_id_da956c52; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX shelves_bookprogress_user_id_da956c52 ON public.shelves_bookprogress USING btree (user_id);


--
-- Name: shelves_bookprogressmedium_progress_id_c034dcb8; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX shelves_bookprogressmedium_progress_id_c034dcb8 ON public.shelves_bookprogressmedium USING btree (progress_id);


--
-- Name: shelves_characternote_progress_id_62ab3c50; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX shelves_characternote_progress_id_62ab3c50 ON public.shelves_characternote USING btree (progress_id);


--
-- Name: shelves_event_creator_id_17a511f9; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX shelves_event_creator_id_17a511f9 ON public.shelves_event USING btree (creator_id);


--
-- Name: shelves_event_shelf_id_84dc851c; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX shelves_event_shelf_id_84dc851c ON public.shelves_event USING btree (shelf_id);


--
-- Name: shelves_eventparticipant_event_id_bf3ad95b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX shelves_eventparticipant_event_id_bf3ad95b ON public.shelves_eventparticipant USING btree (event_id);


--
-- Name: shelves_eventparticipant_user_id_27b23f06; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX shelves_eventparticipant_user_id_27b23f06 ON public.shelves_eventparticipant USING btree (user_id);


--
-- Name: shelves_homelibraryentry_c_homelibraryentry_id_e3e34e93; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX shelves_homelibraryentry_c_homelibraryentry_id_e3e34e93 ON public.shelves_homelibraryentry_custom_genres USING btree (homelibraryentry_id);


--
-- Name: shelves_homelibraryentry_custom_genres_genre_id_a5fe3cc8; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX shelves_homelibraryentry_custom_genres_genre_id_a5fe3cc8 ON public.shelves_homelibraryentry_custom_genres USING btree (genre_id);


--
-- Name: shelves_progressannotation_progress_id_5027ae9e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX shelves_progressannotation_progress_id_5027ae9e ON public.shelves_progressannotation USING btree (progress_id);


--
-- Name: shelves_readingfeedcomment_entry_id_61ac9227; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX shelves_readingfeedcomment_entry_id_61ac9227 ON public.shelves_readingfeedcomment USING btree (entry_id);


--
-- Name: shelves_readingfeedcomment_user_id_c4feb4c8; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX shelves_readingfeedcomment_user_id_c4feb4c8 ON public.shelves_readingfeedcomment USING btree (user_id);


--
-- Name: shelves_readingfeedentry_book_id_199cffa0; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX shelves_readingfeedentry_book_id_199cffa0 ON public.shelves_readingfeedentry USING btree (book_id);


--
-- Name: shelves_readingfeedentry_progress_id_fb0b2617; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX shelves_readingfeedentry_progress_id_fb0b2617 ON public.shelves_readingfeedentry USING btree (progress_id);


--
-- Name: shelves_readingfeedentry_user_id_ba9121d3; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX shelves_readingfeedentry_user_id_ba9121d3 ON public.shelves_readingfeedentry USING btree (user_id);


--
-- Name: shelves_readinglog_progress_id_cac25f7a; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX shelves_readinglog_progress_id_cac25f7a ON public.shelves_readinglog USING btree (progress_id);


--
-- Name: shelves_shelf_user_id_3b6c4a0f; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX shelves_shelf_user_id_3b6c4a0f ON public.shelves_shelf USING btree (user_id);


--
-- Name: shelves_shelfitem_book_id_886ddc35; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX shelves_shelfitem_book_id_886ddc35 ON public.shelves_shelfitem USING btree (book_id);


--
-- Name: shelves_shelfitem_shelf_id_8ba87a92; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX shelves_shelfitem_shelf_id_8ba87a92 ON public.shelves_shelfitem USING btree (shelf_id);


--
-- Name: uniq_progress_no_event; Type: INDEX; Schema: public; Owner: postgres
--

CREATE UNIQUE INDEX uniq_progress_no_event ON public.shelves_bookprogress USING btree (user_id, book_id) WHERE (event_id IS NULL);


--
-- Name: user_rating_content_fbb89f_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX user_rating_content_fbb89f_idx ON public.user_ratings_userpointevent USING btree (content_type_id, object_id);


--
-- Name: user_rating_user_id_3ba47c_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX user_rating_user_id_3ba47c_idx ON public.user_ratings_userpointevent USING btree (user_id, event_type, created_at);


--
-- Name: user_ratings_userpointevent_content_type_id_d974b6e5; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX user_ratings_userpointevent_content_type_id_d974b6e5 ON public.user_ratings_userpointevent USING btree (content_type_id);


--
-- Name: user_ratings_userpointevent_user_id_94c7bf53; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX user_ratings_userpointevent_user_id_94c7bf53 ON public.user_ratings_userpointevent USING btree (user_id);


--
-- Name: accounts_premiumpayment accounts_premiumpayment_user_id_2d6b4ea3_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.accounts_premiumpayment
    ADD CONSTRAINT accounts_premiumpayment_user_id_2d6b4ea3_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: accounts_premiumsubscription accounts_premiumsubs_granted_by_id_5b0e0a36_fk_auth_user; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.accounts_premiumsubscription
    ADD CONSTRAINT accounts_premiumsubs_granted_by_id_5b0e0a36_fk_auth_user FOREIGN KEY (granted_by_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: accounts_premiumsubscription accounts_premiumsubs_payment_id_cf653bf1_fk_accounts_; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.accounts_premiumsubscription
    ADD CONSTRAINT accounts_premiumsubs_payment_id_cf653bf1_fk_accounts_ FOREIGN KEY (payment_id) REFERENCES public.accounts_premiumpayment(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: accounts_premiumsubscription accounts_premiumsubscription_user_id_a3477098_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.accounts_premiumsubscription
    ADD CONSTRAINT accounts_premiumsubscription_user_id_a3477098_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: accounts_profile accounts_profile_user_id_49a85d32_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.accounts_profile
    ADD CONSTRAINT accounts_profile_user_id_49a85d32_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_group_id_97559544_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_groups auth_user_groups_user_id_6a12ed8b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_user_user_permissions auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: books_audiobook_genre books_audiobook_genr_audiobook_id_7473b39e_fk_books_aud; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_audiobook_genre
    ADD CONSTRAINT books_audiobook_genr_audiobook_id_7473b39e_fk_books_aud FOREIGN KEY (audiobook_id) REFERENCES public.books_audiobook(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: books_audiobook_genre books_audiobook_genre_genre_id_2e40a772_fk_books_genre_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_audiobook_genre
    ADD CONSTRAINT books_audiobook_genre_genre_id_2e40a772_fk_books_genre_id FOREIGN KEY (genre_id) REFERENCES public.books_genre(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: books_audiobook books_audiobook_publisher_id_c591cb98_fk_books_publisher_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_audiobook
    ADD CONSTRAINT books_audiobook_publisher_id_c591cb98_fk_books_publisher_id FOREIGN KEY (publisher_id) REFERENCES public.books_publisher(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: books_book books_book_audio_id_e245e889_fk_books_audiobook_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_book
    ADD CONSTRAINT books_book_audio_id_e245e889_fk_books_audiobook_id FOREIGN KEY (audio_id) REFERENCES public.books_audiobook(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: books_book_authors books_book_authors_author_id_984f1ab8_fk_books_author_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_book_authors
    ADD CONSTRAINT books_book_authors_author_id_984f1ab8_fk_books_author_id FOREIGN KEY (author_id) REFERENCES public.books_author(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: books_book_authors books_book_authors_book_id_ed3433e7_fk_books_book_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_book_authors
    ADD CONSTRAINT books_book_authors_book_id_ed3433e7_fk_books_book_id FOREIGN KEY (book_id) REFERENCES public.books_book(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: books_book_contributors books_book_contributors_book_id_ca6f1f58_fk_books_book_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_book_contributors
    ADD CONSTRAINT books_book_contributors_book_id_ca6f1f58_fk_books_book_id FOREIGN KEY (book_id) REFERENCES public.books_book(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: books_book_contributors books_book_contributors_user_id_5ca0e9e6_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_book_contributors
    ADD CONSTRAINT books_book_contributors_user_id_5ca0e9e6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: books_book_genres books_book_genres_book_id_ffd9e72b_fk_books_book_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_book_genres
    ADD CONSTRAINT books_book_genres_book_id_ffd9e72b_fk_books_book_id FOREIGN KEY (book_id) REFERENCES public.books_book(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: books_book_genres books_book_genres_genre_id_899cd1a0_fk_books_genre_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_book_genres
    ADD CONSTRAINT books_book_genres_genre_id_899cd1a0_fk_books_genre_id FOREIGN KEY (genre_id) REFERENCES public.books_genre(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: books_book_isbn books_book_isbn_book_id_e2065e33_fk_books_book_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_book_isbn
    ADD CONSTRAINT books_book_isbn_book_id_e2065e33_fk_books_book_id FOREIGN KEY (book_id) REFERENCES public.books_book(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: books_book_isbn books_book_isbn_isbnmodel_id_ef2e9668_fk_books_isbnmodel_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_book_isbn
    ADD CONSTRAINT books_book_isbn_isbnmodel_id_ef2e9668_fk_books_isbnmodel_id FOREIGN KEY (isbnmodel_id) REFERENCES public.books_isbnmodel(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: books_book books_book_primary_isbn_id_44ab985b_fk_books_isbnmodel_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_book
    ADD CONSTRAINT books_book_primary_isbn_id_44ab985b_fk_books_isbnmodel_id FOREIGN KEY (primary_isbn_id) REFERENCES public.books_isbnmodel(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: books_book_publisher books_book_publisher_book_id_f423ebc7_fk_books_book_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_book_publisher
    ADD CONSTRAINT books_book_publisher_book_id_f423ebc7_fk_books_book_id FOREIGN KEY (book_id) REFERENCES public.books_book(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: books_book_publisher books_book_publisher_publisher_id_66f13065_fk_books_pub; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_book_publisher
    ADD CONSTRAINT books_book_publisher_publisher_id_66f13065_fk_books_pub FOREIGN KEY (publisher_id) REFERENCES public.books_publisher(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: books_isbnmodel_authors books_isbnmodel_auth_isbnmodel_id_57b8140c_fk_books_isb; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_isbnmodel_authors
    ADD CONSTRAINT books_isbnmodel_auth_isbnmodel_id_57b8140c_fk_books_isb FOREIGN KEY (isbnmodel_id) REFERENCES public.books_isbnmodel(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: books_isbnmodel_authors books_isbnmodel_authors_author_id_d6033e4b_fk_books_author_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_isbnmodel_authors
    ADD CONSTRAINT books_isbnmodel_authors_author_id_d6033e4b_fk_books_author_id FOREIGN KEY (author_id) REFERENCES public.books_author(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: books_rating books_rating_book_id_69df80d8_fk_books_book_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_rating
    ADD CONSTRAINT books_rating_book_id_69df80d8_fk_books_book_id FOREIGN KEY (book_id) REFERENCES public.books_book(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: books_rating books_rating_user_id_d3132d7e_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_rating
    ADD CONSTRAINT books_rating_user_id_d3132d7e_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: books_ratingcomment books_ratingcomment_rating_id_552a402f_fk_books_rating_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_ratingcomment
    ADD CONSTRAINT books_ratingcomment_rating_id_552a402f_fk_books_rating_id FOREIGN KEY (rating_id) REFERENCES public.books_rating(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: books_ratingcomment books_ratingcomment_user_id_e3f08010_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_ratingcomment
    ADD CONSTRAINT books_ratingcomment_user_id_e3f08010_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: books_readingsession books_readingsession_progress_id_2b1f0219_fk_shelves_b; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.books_readingsession
    ADD CONSTRAINT books_readingsession_progress_id_2b1f0219_fk_shelves_b FOREIGN KEY (progress_id) REFERENCES public.shelves_bookprogress(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_authorofferresponsecomment collaborations_autho_author_id_c44723fa_fk_auth_user; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_authorofferresponsecomment
    ADD CONSTRAINT collaborations_autho_author_id_c44723fa_fk_auth_user FOREIGN KEY (author_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_authoroffer_expected_platforms collaborations_autho_authoroffer_id_fd955090_fk_collabora; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_authoroffer_expected_platforms
    ADD CONSTRAINT collaborations_autho_authoroffer_id_fd955090_fk_collabora FOREIGN KEY (authoroffer_id) REFERENCES public.collaborations_authoroffer(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_authorofferresponse collaborations_autho_last_activity_by_id_daa4790d_fk_auth_user; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_authorofferresponse
    ADD CONSTRAINT collaborations_autho_last_activity_by_id_daa4790d_fk_auth_user FOREIGN KEY (last_activity_by_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_authorofferresponse collaborations_autho_offer_id_47b8198b_fk_collabora; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_authorofferresponse
    ADD CONSTRAINT collaborations_autho_offer_id_47b8198b_fk_collabora FOREIGN KEY (offer_id) REFERENCES public.collaborations_authoroffer(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_authorofferresponse collaborations_autho_respondent_id_525caf97_fk_auth_user; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_authorofferresponse
    ADD CONSTRAINT collaborations_autho_respondent_id_525caf97_fk_auth_user FOREIGN KEY (respondent_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_authorofferresponsecomment collaborations_autho_response_id_81502e8c_fk_collabora; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_authorofferresponsecomment
    ADD CONSTRAINT collaborations_autho_response_id_81502e8c_fk_collabora FOREIGN KEY (response_id) REFERENCES public.collaborations_authorofferresponse(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_authoroffer_expected_platforms collaborations_autho_reviewplatform_id_ce2435fd_fk_collabora; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_authoroffer_expected_platforms
    ADD CONSTRAINT collaborations_autho_reviewplatform_id_ce2435fd_fk_collabora FOREIGN KEY (reviewplatform_id) REFERENCES public.collaborations_reviewplatform(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_authoroffer collaborations_authoroffer_author_id_7e75d6f1_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_authoroffer
    ADD CONSTRAINT collaborations_authoroffer_author_id_7e75d6f1_fk_auth_user_id FOREIGN KEY (author_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_authoroffer collaborations_authoroffer_book_id_a98677f9_fk_books_book_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_authoroffer
    ADD CONSTRAINT collaborations_authoroffer_book_id_a98677f9_fk_books_book_id FOREIGN KEY (book_id) REFERENCES public.books_book(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_bloggerrequestresponsecomment collaborations_blogg_author_id_d02218bc_fk_auth_user; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggerrequestresponsecomment
    ADD CONSTRAINT collaborations_blogg_author_id_d02218bc_fk_auth_user FOREIGN KEY (author_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_bloggerrequest collaborations_blogg_blogger_collaboratio_231465d7_fk_collabora; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggerrequest
    ADD CONSTRAINT collaborations_blogg_blogger_collaboratio_231465d7_fk_collabora FOREIGN KEY (blogger_collaboration_platform_id) REFERENCES public.collaborations_reviewplatform(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_bloggerrequest collaborations_blogg_blogger_id_05f085ef_fk_auth_user; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggerrequest
    ADD CONSTRAINT collaborations_blogg_blogger_id_05f085ef_fk_auth_user FOREIGN KEY (blogger_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_bloggergiveaway collaborations_blogg_blogger_id_b1952f39_fk_auth_user; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggergiveaway
    ADD CONSTRAINT collaborations_blogg_blogger_id_b1952f39_fk_auth_user FOREIGN KEY (blogger_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_bloggerinvitation collaborations_blogg_blogger_id_cbb503e0_fk_auth_user; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggerinvitation
    ADD CONSTRAINT collaborations_blogg_blogger_id_cbb503e0_fk_auth_user FOREIGN KEY (blogger_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_bloggerrating collaborations_blogg_blogger_id_e1cd099c_fk_auth_user; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggerrating
    ADD CONSTRAINT collaborations_blogg_blogger_id_e1cd099c_fk_auth_user FOREIGN KEY (blogger_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_bloggerrequest_preferred_genres collaborations_blogg_bloggerrequest_id_5770e3f6_fk_collabora; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggerrequest_preferred_genres
    ADD CONSTRAINT collaborations_blogg_bloggerrequest_id_5770e3f6_fk_collabora FOREIGN KEY (bloggerrequest_id) REFERENCES public.collaborations_bloggerrequest(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_bloggerrequest_review_formats collaborations_blogg_bloggerrequest_id_c44c1ae8_fk_collabora; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggerrequest_review_formats
    ADD CONSTRAINT collaborations_blogg_bloggerrequest_id_c44c1ae8_fk_collabora FOREIGN KEY (bloggerrequest_id) REFERENCES public.collaborations_bloggerrequest(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_bloggerrequestresponse collaborations_blogg_book_id_af9aba6e_fk_books_boo; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggerrequestresponse
    ADD CONSTRAINT collaborations_blogg_book_id_af9aba6e_fk_books_boo FOREIGN KEY (book_id) REFERENCES public.books_book(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_bloggerrequest_preferred_genres collaborations_blogg_genre_id_2f4f4be8_fk_books_gen; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggerrequest_preferred_genres
    ADD CONSTRAINT collaborations_blogg_genre_id_2f4f4be8_fk_books_gen FOREIGN KEY (genre_id) REFERENCES public.books_genre(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_bloggerrequestresponse collaborations_blogg_last_activity_by_id_62fc8dff_fk_auth_user; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggerrequestresponse
    ADD CONSTRAINT collaborations_blogg_last_activity_by_id_62fc8dff_fk_auth_user FOREIGN KEY (last_activity_by_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_bloggerplatformpresence collaborations_blogg_platform_id_15547c4b_fk_collabora; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggerplatformpresence
    ADD CONSTRAINT collaborations_blogg_platform_id_15547c4b_fk_collabora FOREIGN KEY (platform_id) REFERENCES public.collaborations_reviewplatform(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_bloggerplatformpresence collaborations_blogg_request_id_098987de_fk_collabora; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggerplatformpresence
    ADD CONSTRAINT collaborations_blogg_request_id_098987de_fk_collabora FOREIGN KEY (request_id) REFERENCES public.collaborations_bloggerrequest(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_bloggerrequestresponse collaborations_blogg_request_id_b63d9593_fk_collabora; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggerrequestresponse
    ADD CONSTRAINT collaborations_blogg_request_id_b63d9593_fk_collabora FOREIGN KEY (request_id) REFERENCES public.collaborations_bloggerrequest(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_bloggerrequestresponse collaborations_blogg_responder_id_c94247ad_fk_auth_user; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggerrequestresponse
    ADD CONSTRAINT collaborations_blogg_responder_id_c94247ad_fk_auth_user FOREIGN KEY (responder_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_bloggerrequestresponsecomment collaborations_blogg_response_id_55927afc_fk_collabora; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggerrequestresponsecomment
    ADD CONSTRAINT collaborations_blogg_response_id_55927afc_fk_collabora FOREIGN KEY (response_id) REFERENCES public.collaborations_bloggerrequestresponse(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_bloggerrequest_review_formats collaborations_blogg_reviewplatform_id_87ba4f62_fk_collabora; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_bloggerrequest_review_formats
    ADD CONSTRAINT collaborations_blogg_reviewplatform_id_87ba4f62_fk_collabora FOREIGN KEY (reviewplatform_id) REFERENCES public.collaborations_reviewplatform(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_collaborationmessage collaborations_colla_author_id_05f8456e_fk_auth_user; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_collaborationmessage
    ADD CONSTRAINT collaborations_colla_author_id_05f8456e_fk_auth_user FOREIGN KEY (author_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_collaborationmessage collaborations_colla_collaboration_id_02fac4a3_fk_collabora; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_collaborationmessage
    ADD CONSTRAINT collaborations_colla_collaboration_id_02fac4a3_fk_collabora FOREIGN KEY (collaboration_id) REFERENCES public.collaborations_collaboration(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_collaboration collaborations_colla_last_activity_by_id_da889356_fk_auth_user; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_collaboration
    ADD CONSTRAINT collaborations_colla_last_activity_by_id_da889356_fk_auth_user FOREIGN KEY (last_activity_by_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_collaboration collaborations_colla_offer_id_64011dc0_fk_collabora; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_collaboration
    ADD CONSTRAINT collaborations_colla_offer_id_64011dc0_fk_collabora FOREIGN KEY (offer_id) REFERENCES public.collaborations_authoroffer(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_collaboration collaborations_colla_partner_id_f08da8f8_fk_auth_user; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_collaboration
    ADD CONSTRAINT collaborations_colla_partner_id_f08da8f8_fk_auth_user FOREIGN KEY (partner_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_collaboration collaborations_colla_request_id_2ddd8015_fk_collabora; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_collaboration
    ADD CONSTRAINT collaborations_colla_request_id_2ddd8015_fk_collabora FOREIGN KEY (request_id) REFERENCES public.collaborations_bloggerrequest(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_collaboration collaborations_collaboration_author_id_21ddb699_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_collaboration
    ADD CONSTRAINT collaborations_collaboration_author_id_21ddb699_fk_auth_user_id FOREIGN KEY (author_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: collaborations_communitybookclub collaborations_commu_submitted_by_id_48cef8a9_fk_auth_user; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.collaborations_communitybookclub
    ADD CONSTRAINT collaborations_commu_submitted_by_id_48cef8a9_fk_auth_user FOREIGN KEY (submitted_by_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: games_bookexchangeacceptedbook games_bookexchangeac_book_id_2fedb6ad_fk_books_boo; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_bookexchangeacceptedbook
    ADD CONSTRAINT games_bookexchangeac_book_id_2fedb6ad_fk_books_boo FOREIGN KEY (book_id) REFERENCES public.books_book(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: games_bookexchangeacceptedbook games_bookexchangeac_challenge_id_416b6044_fk_games_boo; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_bookexchangeacceptedbook
    ADD CONSTRAINT games_bookexchangeac_challenge_id_416b6044_fk_games_boo FOREIGN KEY (challenge_id) REFERENCES public.games_bookexchangechallenge(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: games_bookexchangeacceptedbook games_bookexchangeac_offer_id_4535f757_fk_games_boo; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_bookexchangeacceptedbook
    ADD CONSTRAINT games_bookexchangeac_offer_id_4535f757_fk_games_boo FOREIGN KEY (offer_id) REFERENCES public.games_bookexchangeoffer(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: games_bookexchangechallenge_genres games_bookexchangech_bookexchangechalleng_570b90de_fk_games_boo; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_bookexchangechallenge_genres
    ADD CONSTRAINT games_bookexchangech_bookexchangechalleng_570b90de_fk_games_boo FOREIGN KEY (bookexchangechallenge_id) REFERENCES public.games_bookexchangechallenge(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: games_bookexchangechallenge_genres games_bookexchangech_genre_id_8e59a451_fk_books_gen; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_bookexchangechallenge_genres
    ADD CONSTRAINT games_bookexchangech_genre_id_8e59a451_fk_books_gen FOREIGN KEY (genre_id) REFERENCES public.books_genre(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: games_bookexchangechallenge games_bookexchangech_shelf_id_5f7790e6_fk_shelves_s; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_bookexchangechallenge
    ADD CONSTRAINT games_bookexchangech_shelf_id_5f7790e6_fk_shelves_s FOREIGN KEY (shelf_id) REFERENCES public.shelves_shelf(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: games_bookexchangechallenge games_bookexchangechallenge_game_id_e348ae55_fk_games_game_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_bookexchangechallenge
    ADD CONSTRAINT games_bookexchangechallenge_game_id_e348ae55_fk_games_game_id FOREIGN KEY (game_id) REFERENCES public.games_game(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: games_bookexchangechallenge games_bookexchangechallenge_user_id_ca49640a_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_bookexchangechallenge
    ADD CONSTRAINT games_bookexchangechallenge_user_id_ca49640a_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: games_bookexchangeoffer games_bookexchangeof_challenge_id_037e46c2_fk_games_boo; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_bookexchangeoffer
    ADD CONSTRAINT games_bookexchangeof_challenge_id_037e46c2_fk_games_boo FOREIGN KEY (challenge_id) REFERENCES public.games_bookexchangechallenge(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: games_bookexchangeoffer games_bookexchangeoffer_book_id_c9c4af83_fk_books_book_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_bookexchangeoffer
    ADD CONSTRAINT games_bookexchangeoffer_book_id_c9c4af83_fk_books_book_id FOREIGN KEY (book_id) REFERENCES public.books_book(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: games_bookexchangeoffer games_bookexchangeoffer_offered_by_id_f1beb838_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_bookexchangeoffer
    ADD CONSTRAINT games_bookexchangeoffer_offered_by_id_f1beb838_fk_auth_user_id FOREIGN KEY (offered_by_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: games_bookjourneyassignment games_bookjourneyassignment_book_id_7d86ad36_fk_books_book_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_bookjourneyassignment
    ADD CONSTRAINT games_bookjourneyassignment_book_id_7d86ad36_fk_books_book_id FOREIGN KEY (book_id) REFERENCES public.books_book(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: games_bookjourneyassignment games_bookjourneyassignment_user_id_6bd0c57a_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_bookjourneyassignment
    ADD CONSTRAINT games_bookjourneyassignment_user_id_6bd0c57a_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: games_forgottenbookentry games_forgottenbookentry_book_id_37e7a9e0_fk_books_book_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_forgottenbookentry
    ADD CONSTRAINT games_forgottenbookentry_book_id_37e7a9e0_fk_books_book_id FOREIGN KEY (book_id) REFERENCES public.books_book(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: games_forgottenbookentry games_forgottenbookentry_user_id_11205610_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_forgottenbookentry
    ADD CONSTRAINT games_forgottenbookentry_user_id_11205610_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: games_gameshelfbook games_gameshelfbook_book_id_6f3490ef_fk_books_book_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_gameshelfbook
    ADD CONSTRAINT games_gameshelfbook_book_id_6f3490ef_fk_books_book_id FOREIGN KEY (book_id) REFERENCES public.books_book(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: games_gameshelfbook games_gameshelfbook_state_id_ae6729b1_fk_games_gam; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_gameshelfbook
    ADD CONSTRAINT games_gameshelfbook_state_id_ae6729b1_fk_games_gam FOREIGN KEY (state_id) REFERENCES public.games_gameshelfstate(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: games_gameshelfpurchase games_gameshelfpurch_state_id_d4e01d83_fk_games_gam; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_gameshelfpurchase
    ADD CONSTRAINT games_gameshelfpurch_state_id_d4e01d83_fk_games_gam FOREIGN KEY (state_id) REFERENCES public.games_gameshelfstate(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: games_gameshelfpurchase games_gameshelfpurchase_book_id_cda444bf_fk_books_book_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_gameshelfpurchase
    ADD CONSTRAINT games_gameshelfpurchase_book_id_cda444bf_fk_books_book_id FOREIGN KEY (book_id) REFERENCES public.books_book(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: games_gameshelfstate games_gameshelfstate_game_id_98f00eb5_fk_games_game_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_gameshelfstate
    ADD CONSTRAINT games_gameshelfstate_game_id_98f00eb5_fk_games_game_id FOREIGN KEY (game_id) REFERENCES public.games_game(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: games_gameshelfstate games_gameshelfstate_shelf_id_5ce474f0_fk_shelves_shelf_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_gameshelfstate
    ADD CONSTRAINT games_gameshelfstate_shelf_id_5ce474f0_fk_shelves_shelf_id FOREIGN KEY (shelf_id) REFERENCES public.shelves_shelf(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: games_gameshelfstate games_gameshelfstate_user_id_ab98f852_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.games_gameshelfstate
    ADD CONSTRAINT games_gameshelfstate_user_id_ab98f852_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: reading_clubs_discussionpost reading_clubs_discus_parent_id_4ca852dd_fk_reading_c; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reading_clubs_discussionpost
    ADD CONSTRAINT reading_clubs_discus_parent_id_4ca852dd_fk_reading_c FOREIGN KEY (parent_id) REFERENCES public.reading_clubs_discussionpost(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: reading_clubs_discussionpost reading_clubs_discus_topic_id_b056a5d2_fk_reading_c; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reading_clubs_discussionpost
    ADD CONSTRAINT reading_clubs_discus_topic_id_b056a5d2_fk_reading_c FOREIGN KEY (topic_id) REFERENCES public.reading_clubs_readingnorm(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: reading_clubs_discussionpost reading_clubs_discussionpost_author_id_30a3b39b_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reading_clubs_discussionpost
    ADD CONSTRAINT reading_clubs_discussionpost_author_id_30a3b39b_fk_auth_user_id FOREIGN KEY (author_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: reading_clubs_readingnorm reading_clubs_readin_reading_id_0b0ba096_fk_reading_c; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reading_clubs_readingnorm
    ADD CONSTRAINT reading_clubs_readin_reading_id_0b0ba096_fk_reading_c FOREIGN KEY (reading_id) REFERENCES public.reading_clubs_readingclub(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: reading_clubs_readingparticipant reading_clubs_readin_reading_id_9cdacaaf_fk_reading_c; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reading_clubs_readingparticipant
    ADD CONSTRAINT reading_clubs_readin_reading_id_9cdacaaf_fk_reading_c FOREIGN KEY (reading_id) REFERENCES public.reading_clubs_readingclub(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: reading_clubs_readingparticipant reading_clubs_readin_user_id_5fee71ae_fk_auth_user; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reading_clubs_readingparticipant
    ADD CONSTRAINT reading_clubs_readin_user_id_5fee71ae_fk_auth_user FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: reading_clubs_readingclub reading_clubs_readingclub_book_id_896ef800_fk_books_book_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reading_clubs_readingclub
    ADD CONSTRAINT reading_clubs_readingclub_book_id_896ef800_fk_books_book_id FOREIGN KEY (book_id) REFERENCES public.books_book(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: reading_clubs_readingclub reading_clubs_readingclub_creator_id_82062960_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reading_clubs_readingclub
    ADD CONSTRAINT reading_clubs_readingclub_creator_id_82062960_fk_auth_user_id FOREIGN KEY (creator_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: reading_marathons_marathonentry reading_marathons_ma_book_id_fd17af08_fk_books_boo; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reading_marathons_marathonentry
    ADD CONSTRAINT reading_marathons_ma_book_id_fd17af08_fk_books_boo FOREIGN KEY (book_id) REFERENCES public.books_book(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: reading_marathons_marathonparticipant reading_marathons_ma_marathon_id_4f220f08_fk_reading_m; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reading_marathons_marathonparticipant
    ADD CONSTRAINT reading_marathons_ma_marathon_id_4f220f08_fk_reading_m FOREIGN KEY (marathon_id) REFERENCES public.reading_marathons_readingmarathon(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: reading_marathons_marathontheme reading_marathons_ma_marathon_id_ac1228b1_fk_reading_m; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reading_marathons_marathontheme
    ADD CONSTRAINT reading_marathons_ma_marathon_id_ac1228b1_fk_reading_m FOREIGN KEY (marathon_id) REFERENCES public.reading_marathons_readingmarathon(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: reading_marathons_marathonentry reading_marathons_ma_participant_id_bdca812b_fk_reading_m; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reading_marathons_marathonentry
    ADD CONSTRAINT reading_marathons_ma_participant_id_bdca812b_fk_reading_m FOREIGN KEY (participant_id) REFERENCES public.reading_marathons_marathonparticipant(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: reading_marathons_marathonentry reading_marathons_ma_theme_id_430fecc7_fk_reading_m; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reading_marathons_marathonentry
    ADD CONSTRAINT reading_marathons_ma_theme_id_430fecc7_fk_reading_m FOREIGN KEY (theme_id) REFERENCES public.reading_marathons_marathontheme(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: reading_marathons_marathonparticipant reading_marathons_ma_user_id_4b186149_fk_auth_user; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reading_marathons_marathonparticipant
    ADD CONSTRAINT reading_marathons_ma_user_id_4b186149_fk_auth_user FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: reading_marathons_readingmarathon reading_marathons_re_creator_id_d4c47227_fk_auth_user; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.reading_marathons_readingmarathon
    ADD CONSTRAINT reading_marathons_re_creator_id_d4c47227_fk_auth_user FOREIGN KEY (creator_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: shelves_bookprogress shelves_bookprogress_book_id_0f8dac1d_fk_books_book_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_bookprogress
    ADD CONSTRAINT shelves_bookprogress_book_id_0f8dac1d_fk_books_book_id FOREIGN KEY (book_id) REFERENCES public.books_book(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: shelves_bookprogress shelves_bookprogress_event_id_b62a9391_fk_shelves_event_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_bookprogress
    ADD CONSTRAINT shelves_bookprogress_event_id_b62a9391_fk_shelves_event_id FOREIGN KEY (event_id) REFERENCES public.shelves_event(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: shelves_bookprogressmedium shelves_bookprogress_progress_id_c034dcb8_fk_shelves_b; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_bookprogressmedium
    ADD CONSTRAINT shelves_bookprogress_progress_id_c034dcb8_fk_shelves_b FOREIGN KEY (progress_id) REFERENCES public.shelves_bookprogress(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: shelves_bookprogress shelves_bookprogress_user_id_da956c52_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_bookprogress
    ADD CONSTRAINT shelves_bookprogress_user_id_da956c52_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: shelves_characternote shelves_characternot_progress_id_62ab3c50_fk_shelves_b; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_characternote
    ADD CONSTRAINT shelves_characternot_progress_id_62ab3c50_fk_shelves_b FOREIGN KEY (progress_id) REFERENCES public.shelves_bookprogress(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: shelves_event shelves_event_creator_id_17a511f9_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_event
    ADD CONSTRAINT shelves_event_creator_id_17a511f9_fk_auth_user_id FOREIGN KEY (creator_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: shelves_event shelves_event_shelf_id_84dc851c_fk_shelves_shelf_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_event
    ADD CONSTRAINT shelves_event_shelf_id_84dc851c_fk_shelves_shelf_id FOREIGN KEY (shelf_id) REFERENCES public.shelves_shelf(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: shelves_eventparticipant shelves_eventparticipant_event_id_bf3ad95b_fk_shelves_event_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_eventparticipant
    ADD CONSTRAINT shelves_eventparticipant_event_id_bf3ad95b_fk_shelves_event_id FOREIGN KEY (event_id) REFERENCES public.shelves_event(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: shelves_eventparticipant shelves_eventparticipant_user_id_27b23f06_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_eventparticipant
    ADD CONSTRAINT shelves_eventparticipant_user_id_27b23f06_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: shelves_homelibraryentry_custom_genres shelves_homelibrarye_genre_id_a5fe3cc8_fk_books_gen; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_homelibraryentry_custom_genres
    ADD CONSTRAINT shelves_homelibrarye_genre_id_a5fe3cc8_fk_books_gen FOREIGN KEY (genre_id) REFERENCES public.books_genre(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: shelves_homelibraryentry_custom_genres shelves_homelibrarye_homelibraryentry_id_e3e34e93_fk_shelves_h; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_homelibraryentry_custom_genres
    ADD CONSTRAINT shelves_homelibrarye_homelibraryentry_id_e3e34e93_fk_shelves_h FOREIGN KEY (homelibraryentry_id) REFERENCES public.shelves_homelibraryentry(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: shelves_homelibraryentry shelves_homelibrarye_shelf_item_id_0e615efa_fk_shelves_s; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_homelibraryentry
    ADD CONSTRAINT shelves_homelibrarye_shelf_item_id_0e615efa_fk_shelves_s FOREIGN KEY (shelf_item_id) REFERENCES public.shelves_shelfitem(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: shelves_progressannotation shelves_progressanno_progress_id_5027ae9e_fk_shelves_b; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_progressannotation
    ADD CONSTRAINT shelves_progressanno_progress_id_5027ae9e_fk_shelves_b FOREIGN KEY (progress_id) REFERENCES public.shelves_bookprogress(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: shelves_readingfeedcomment shelves_readingfeedc_entry_id_61ac9227_fk_shelves_r; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_readingfeedcomment
    ADD CONSTRAINT shelves_readingfeedc_entry_id_61ac9227_fk_shelves_r FOREIGN KEY (entry_id) REFERENCES public.shelves_readingfeedentry(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: shelves_readingfeedcomment shelves_readingfeedcomment_user_id_c4feb4c8_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_readingfeedcomment
    ADD CONSTRAINT shelves_readingfeedcomment_user_id_c4feb4c8_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: shelves_readingfeedentry shelves_readingfeede_progress_id_fb0b2617_fk_shelves_b; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_readingfeedentry
    ADD CONSTRAINT shelves_readingfeede_progress_id_fb0b2617_fk_shelves_b FOREIGN KEY (progress_id) REFERENCES public.shelves_bookprogress(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: shelves_readingfeedentry shelves_readingfeedentry_book_id_199cffa0_fk_books_book_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_readingfeedentry
    ADD CONSTRAINT shelves_readingfeedentry_book_id_199cffa0_fk_books_book_id FOREIGN KEY (book_id) REFERENCES public.books_book(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: shelves_readingfeedentry shelves_readingfeedentry_user_id_ba9121d3_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_readingfeedentry
    ADD CONSTRAINT shelves_readingfeedentry_user_id_ba9121d3_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: shelves_readinglog shelves_readinglog_progress_id_cac25f7a_fk_shelves_b; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_readinglog
    ADD CONSTRAINT shelves_readinglog_progress_id_cac25f7a_fk_shelves_b FOREIGN KEY (progress_id) REFERENCES public.shelves_bookprogress(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: shelves_shelf shelves_shelf_user_id_3b6c4a0f_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_shelf
    ADD CONSTRAINT shelves_shelf_user_id_3b6c4a0f_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: shelves_shelfitem shelves_shelfitem_book_id_886ddc35_fk_books_book_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_shelfitem
    ADD CONSTRAINT shelves_shelfitem_book_id_886ddc35_fk_books_book_id FOREIGN KEY (book_id) REFERENCES public.books_book(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: shelves_shelfitem shelves_shelfitem_shelf_id_8ba87a92_fk_shelves_shelf_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shelves_shelfitem
    ADD CONSTRAINT shelves_shelfitem_shelf_id_8ba87a92_fk_shelves_shelf_id FOREIGN KEY (shelf_id) REFERENCES public.shelves_shelf(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: user_ratings_userpointevent user_ratings_userpoi_content_type_id_d974b6e5_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_ratings_userpointevent
    ADD CONSTRAINT user_ratings_userpoi_content_type_id_d974b6e5_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: user_ratings_userpointevent user_ratings_userpointevent_user_id_94c7bf53_fk_auth_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_ratings_userpointevent
    ADD CONSTRAINT user_ratings_userpointevent_user_id_94c7bf53_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--

\unrestrict NGYCd8vrKgiFsJQqSRwNeKcVhUdvdEpOYbbR4qaiefIkHasXUpROTYfILmblUeh

