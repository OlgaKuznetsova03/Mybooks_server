# Generated by Django 4.2.24 on 2025-09-30 00:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('books', '0008_book_edition_group_key'),
        ('shelves', '0009_bookprogress_audio_length_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=64, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='GameShelfState',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_balance', models.PositiveIntegerField(default=0)),
                ('total_points_earned', models.PositiveIntegerField(default=0)),
                ('books_purchased', models.PositiveIntegerField(default=0)),
                ('books_reviewed', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shelf_states', to='games.game')),
                ('shelf', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_states', to='shelves.shelf')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_shelf_states', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('game', 'shelf')},
            },
        ),
        migrations.CreateModel(
            name='GameShelfPurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_spent', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_purchases', to='books.book')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='games.gameshelfstate')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GameShelfBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pages_logged', models.PositiveIntegerField(default=0)),
                ('bonus_awarded', models.BooleanField(default=False)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('purchased_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_entries', to='books.book')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='books', to='games.gameshelfstate')),
            ],
            options={
                'unique_together': {('state', 'book')},
            },
        ),
    ]
