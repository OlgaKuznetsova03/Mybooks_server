# Generated by Django 4.2.23 on 2025-09-18 11:08

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AudioBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('length', models.DurationField()),
                ('narrator', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('bio', models.TextField(blank=True, max_length=1000, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('address', models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ISBNModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isbn', models.CharField(max_length=13, unique=True)),
                ('isbn13', models.CharField(blank=True, max_length=13, null=True, unique=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('publisher', models.CharField(blank=True, max_length=255, null=True)),
                ('publish_date', models.CharField(blank=True, max_length=50, null=True)),
                ('binding', models.CharField(blank=True, max_length=50, null=True)),
                ('pages', models.PositiveIntegerField(blank=True, null=True)),
                ('synopsis', models.TextField(blank=True, null=True)),
                ('language', models.CharField(blank=True, max_length=10, null=True)),
                ('subjects', models.TextField(blank=True, null=True)),
                ('image', models.URLField(blank=True, null=True)),
                ('authors', models.ManyToManyField(blank=True, related_name='isbn_authors', to='books.author')),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('synopsis', models.TextField(blank=True, null=True)),
                ('series', models.CharField(blank=True, max_length=255, null=True)),
                ('series_order', models.PositiveIntegerField(blank=True, null=True)),
                ('age_rating', models.CharField(blank=True, max_length=10, null=True)),
                ('language', models.CharField(blank=True, max_length=50, null=True)),
                ('image', models.URLField(blank=True, null=True)),
                ('audio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='books.audiobook')),
                ('authors', models.ManyToManyField(related_name='books', to='books.author')),
                ('genres', models.ManyToManyField(related_name='books', to='books.genre')),
                ('isbn', models.ManyToManyField(blank=True, related_name='books', to='books.isbnmodel')),
                ('publisher', models.ManyToManyField(related_name='books', to='books.publisher')),
            ],
        ),
        migrations.AddField(
            model_name='audiobook',
            name='genre',
            field=models.ManyToManyField(blank=True, related_name='audiobooks', to='books.genre'),
        ),
        migrations.AddField(
            model_name='audiobook',
            name='publisher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='books.publisher'),
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='books.book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('book', 'user')},
            },
        ),
    ]
